{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome to the SeaTable Developer Manual, your comprehensive resource for leveraging the potential of SeaTable, the world's leading self-hosted no-code platform.</p> <p>This guide illustrates three fundamental approaches to development within SeaTable:</p> <ol> <li>Scripting within SeaTable: Create custom logic or perform individual data processing using JavaScript or Python, both supported within SeaTable.</li> <li>SeaTable Plugins: Develop plugins capable of interacting with, visualizing, and operating on data within a SeaTable Base.</li> <li>Utilizing Any Programming Language with SeaTable's API: Seamlessly interact with the SeaTable API to construct your own web pages or programs.</li> </ol>"},{"location":"#developer-decision-tree","title":"Developer decision tree","text":"<p>For guidance on choosing the right section within this manual, refer to the decision tree diagram above.</p> <p>If you aim to integrate a software product with SeaTable, note that SeaTable supports multiple workflow automation tools such as n8n, Zapier, and Make. Please refer to the SeaTable User Manual for detailed information on these integrations, as they are not covered here.</p>"},{"location":"#target-audience","title":"Target audience","text":"<p>The Developer Manual caters to developers interested in utilizing custom scripts within SeaTable, creating their own plugins, or developing custom programs.</p> <p>All instructions provided are applicable to self-hosted SeaTable installations (Enterprise and Developer Editions), as well as to SeaTable Cloud.</p> <p>Known limitations of SeaTable Cloud</p> <ol> <li>Custom Plugin Installation: SeaTable Cloud does not support the installation of custom plugins.</li> <li>Python Script Runs Limitation: The number of Python script runs is constrained by your current SeaTable Cloud subscription.</li> </ol> <p>Therefore, it's recommended to set up your own SeaTable Server if you intend to develop custom plugins, applications, or run multiple Python scripts. For further information about deploying your server, please refer to the Admin manual.</p> <p>If you are new to SeaTable, we suggest starting with the introduction section covering the platform's requirements and basic concepts of this no-code platform. Otherwise, let's dive right in!</p> <p>Start scripting Write your own plugin Use the API</p>"},{"location":"tests/","title":"Tests","text":""},{"location":"tests/#just-to-test","title":"just to test ...","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>gitGraph\n   commit\n   commit\n   branch develop\n   checkout develop\n   commit\n   commit\n   checkout main\n   merge develop\n   commit\n   commit</code></pre> <pre><code>graph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;\n    E--&gt;C;\n    F--&gt;E;\n    G--&gt;F;</code></pre> <pre><code>pie title Pets adopted by volunteers\n    \"Dogs\" : 386\n    \"Cats\" : 85\n    \"Rats\" : 15</code></pre> <pre><code>gantt\n    title A Gantt Diagram\n    dateFormat YYYY-MM-DD\n    section Section\n        A task          :a1, 2014-01-01, 4d\n        Another task    :after a1, 10d\n    section Another\n        Task in Another :2014-01-12, 2d\n        another task    :4d</code></pre>"},{"location":"clients/","title":"Client API's","text":"<p>Thanks to seatable's full API, virtually anything can be controlled with any programming language.</p> <p>On https://api.seatable.io you can find all available API commands and sample commands for different programming languages.</p> <p>For a few programming languages there are already ready-to-use client APIs classes that do some of the work for you. These are presented in this part of the documentation.</p>"},{"location":"clients/php_api/","title":"PHP Client","text":"<p>SeaTable's API exposes the entire SeaTable features via a standardized programmatic interface. The SeaTable PHP Client encapsulates SeaTable Server Restful API. If you are familiar this client enables you to call every available API endpoint of SeaTable. You can interact with the user accounts, bases or files.</p> <p>Auto generated from openapi specification</p> <p>Since April 2024, we auto generate this SeaTable php client from our public available openapi specification. The advantage is that, the php client automatically contains all available API endpoints and we save a lot of programming capacity. Also we could generate more api clients for other programming languages in no time with the same feature set. The disadvantage is, that with this new client we removed some convenitent functions for authentication and the new version is not compatible at all with the version v0.2 and earlier.</p>"},{"location":"clients/php_api/#installation","title":"Installation","text":"<p>The SeaTable API installs as part of your project dependencies. It is available from Packagist and can be installed with Composer:</p> <pre><code>composer require seatable/seatable-api-php\n</code></pre> <p>The source code of the PHP Client API is available at GitHub.</p>"},{"location":"clients/php_api/#getting-started","title":"Getting Started","text":"<p>After installation you can easily connect to your SeaTable system and execute API calls.</p>"},{"location":"clients/php_api/#get-information-about-your-account","title":"Get information about your account","text":"<p>The following code connects to SeaTable Cloud. You have to provide your <code>Account Token</code>.</p> <pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_ACCOUNT_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\UserApi(new GuzzleHttp\\Client(), $config);\n\ntry {\n    $result = $apiInstance-&gt;getAccountInfo();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi-&gt;getAccountInfo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php_api/#list-your-bases","title":"List your bases","text":"<p>This time, we connect to a self-hosted SeaTable Server.</p> <pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration();\n$config-&gt;setAccessToken('YOUR_ACCOUNT_TOKEN');\n$config-&gt;setHost('https://seatable.example.com');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(new GuzzleHttp\\Client(), $config);\n\ntry {\n    $result = $apiInstance-&gt;listBases();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php_api/#get-metadata-from-your-base","title":"Get Metadata from your Base","text":"<p>First we have to get the <code>Base-Token</code> and the <code>base_uuid</code> and then we can execute the <code>getMetadata</code> call.</p> <pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Base Token\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_API_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\BaseTokenApi(new GuzzleHttp\\Client(), $config);\n\ntry {\n    $result = $apiInstance-&gt;getBaseTokenWithApiToken();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseTokenApi-&gt;getBaseTokenWithApiToken: ', $e-&gt;getMessage(), PHP_EOL;\n}\n\n// Metadata\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken($result['access_token']);\n$apiInstance = new SeaTable\\Client\\Base\\BaseInfoApi(new GuzzleHttp\\Client(), $config);\n\ntry {\n    $result = $apiInstance-&gt;getMetadata($result['dtable_uuid']);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseInfoApi-&gt;getMetadata: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php_api/#execute-sql-query-against-your-base","title":"Execute SQL-Query against your base","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Base Token\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_API_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\BaseTokenApi(new GuzzleHttp\\Client(), $config);\n\ntry {\n    $result = $apiInstance-&gt;getBaseTokenWithApiToken();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseTokenApi-&gt;getBaseTokenWithApiToken: ', $e-&gt;getMessage(), PHP_EOL;\n}\n\n// Base query\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken($result['access_token']);\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(new GuzzleHttp\\Client(), $config);\n\n$base_uuid = $result['dtable_uuid'];\n$sql_query = new \\SeaTable\\Client\\Model\\SqlQuery([\"sql\" =&gt; \"Select * from Table1\", \"convert_keys\" =&gt; false]);\n\ntry {\n    $result = $apiInstance-&gt;querySQL($base_uuid, $sql_query);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;querySQL: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php_api/#api-endpoints-auth","title":"API Endpoints - Auth","text":"Class Method HTTP request Description APITokenApi createApiToken POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/ Create API-Token APITokenApi createTempApiToken GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/temp-api-token/ Create API-Token (temporary) APITokenApi deleteApiToken DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/{app_name}/ Delete API-Token APITokenApi listApiTokens GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/ List API-Tokens APITokenApi updateApiToken PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/{app_name}/ Update API-Token AccountTokenApi getAccountTokenfromUsername POST /api2/auth-token/ Get Account-Token with Username and Password BaseTokenApi getBaseTokenWithAccountToken GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/access-token/ Get Base-Token with Account-Token BaseTokenApi getBaseTokenWithApiToken GET /api/v2.1/dtable/app-access-token/ Get Base-Token with API-Token BaseTokenApi getBaseTokenWithExternLink GET /api/v2.1/external-link-tokens/{external_link_token}/access-token/ Get Base-Token with External-Link"},{"location":"clients/php_api/#api-endpoints-base","title":"API Endpoints - Base","text":"Class Method HTTP request Description ActivitiesLogsApi getBaseActivityLog GET /dtable-server/api/v1/dtables/{base_uuid}/operations/ Get Base Activity Log ActivitiesLogsApi listDeleteOperations GET /api/v2.1/dtables/{base_uuid}/delete-operation-logs/ List Delete Operations ActivitiesLogsApi listDeletedRows GET /dtable-server/api/v1/dtables/{base_uuid}/deleted-rows/ List Deleted Rows ActivitiesLogsApi listRowActivities GET /dtable-server/api/v1/dtables/{base_uuid}/activities/ List Row Activities BaseInfoApi getBaseInfo GET /dtable-server/dtables/{base_uuid} Get Base Info BaseInfoApi getBigDataStatus GET /dtable-db/api/v1/base-info/{base_uuid}/ Get Big Data Status BaseInfoApi getMetadata GET /dtable-server/api/v1/dtables/{base_uuid}/metadata/ Get Metadata BaseInfoApi listCollaborators GET /dtable-server/api/v1/dtables/{base_uuid}/related-users/ List Collaborators BigDataApi createBigDataRowsLink POST /dtable-db/api/v1/base/{base_uuid}/links/ Create Row Links in Big Data BigDataApi deleteBigDataRowLinks DELETE /dtable-db/api/v1/base/{base_uuid}/links/ Delete Row Links in Big Data BigDataApi deleteBigDataRows DELETE /dtable-db/api/v1/delete-rows/{base_uuid}/ Delete Rows in Big Data BigDataApi insertBigDataRows POST /dtable-db/api/v1/insert-rows/{base_uuid}/ Insert Rows into Big Data BigDataApi moveRowsToBigData POST /dtable-server/api/v1/dtables/{base_uuid}/archive-view/ Move Rows to Big Data BigDataApi updateBigDataRows PUT /dtable-db/api/v1/update-rows/{base_uuid}/ Update Rows in Big Data ColumnsApi addSelectOption POST /dtable-server/api/v1/dtables/{base_uuid}/column-options/ Add Single/Multiple Select Options ColumnsApi appendColumns POST /dtable-server/api/v1/dtables/{base_uuid}/batch-append-columns/ Append Columns ColumnsApi deleteColumn DELETE /dtable-server/api/v1/dtables/{base_uuid}/columns/ Delete Column ColumnsApi deleteSelectOption DELETE /dtable-server/api/v1/dtables/{base_uuid}/column-options/ Delete Single/Multiple Select Options ColumnsApi insertColumn POST /dtable-server/api/v1/dtables/{base_uuid}/columns/ Insert Column ColumnsApi listColumns GET /dtable-server/api/v1/dtables/{base_uuid}/columns/ List Columns ColumnsApi updateColumn PUT /dtable-server/api/v1/dtables/{base_uuid}/columns/ Update Column ColumnsApi updateColumnCascade POST /dtable-server/api/v1/dtables/{base_uuid}/column-cascade-settings/ Update Column Cascade ColumnsApi updateSelectOption PUT /dtable-server/api/v1/dtables/{base_uuid}/column-options/ Update Single/Multiple Select Options LinksApi createRowLink POST /dtable-server/api/v1/dtables/{base_uuid}/links/ Create Row Link LinksApi createRowLinks PUT /dtable-server/api/v1/dtables/{base_uuid}/links/ Create Row Links LinksApi deleteRowLink DELETE /dtable-server/api/v1/dtables/{base_uuid}/links/ Delete Row Link LinksApi listRowLinks POST /dtable-db/api/v1/linked-records/{base_uuid} List Row Links LinksApi updateRowLinks PUT /dtable-server/api/v1/dtables/{base_uuid}/batch-update-links/ Update Row Links (Batch) NotificationsApi deleteBaseNotifications DELETE /dtable-server/api/v1/dtables/{base_uuid}/notifications/ Delete Base Notifications NotificationsApi listBaseNotifications GET /dtable-server/api/v1/dtables/{base_uuid}/notifications/ List Base Notifications NotificationsApi markBaseNotificationAsSeen PUT /dtable-server/api/v1/dtables/{base_uuid}/notifications/{notification_id}/ Mark Notification Read/Unread NotificationsApi markBaseNotificationsAsSeen PUT /dtable-server/api/v1/dtables/{base_uuid}/notifications/ Mark Base Notifications as seen RowCommentsApi deleteComment DELETE /dtable-server/api/v1/dtables/{base_uuid}/comments/{comment_id}/ Delete Comment RowCommentsApi getComment GET /dtable-server/api/v1/dtables/{base_uuid}/comments/{comment_id}/ Get Comment RowCommentsApi getRowCommentsCount GET /dtable-server/api/v1/dtables/{base_uuid}/comments-count/ Get Row Comments Count RowCommentsApi listCommentsWithinDays GET /dtable-server/api/v1/dtables/{base_uuid}/comments-within-days/ List Comments within Days RowCommentsApi listRowComments GET /dtable-server/api/v1/dtables/{base_uuid}/comments/ List Row Comments RowsApi addRow POST /dtable-server/api/v1/dtables/{base_uuid}/rows/ Add Row RowsApi appendRows POST /dtable-server/api/v1/dtables/{base_uuid}/batch-append-rows/ Append Rows RowsApi deleteRow DELETE /dtable-server/api/v1/dtables/{base_uuid}/rows/ Delete Row RowsApi deleteRows DELETE /dtable-server/api/v1/dtables/{base_uuid}/batch-delete-rows/ Delete Rows RowsApi getRow GET /dtable-server/api/v1/dtables/{base_uuid}/rows/{row_id}/ Get Row RowsApi listFilteredRows GET /dtable-server/api/v1/dtables/{base_uuid}/filtered-rows/ List Filtered Rows RowsApi listRows GET /dtable-server/api/v1/dtables/{base_uuid}/rows/ List Rows RowsApi lockRows PUT /dtable-server/api/v1/dtables/{base_uuid}/lock-rows/ Lock Rows RowsApi querySQL POST /dtable-db/api/v1/query/{base_uuid}/ List Rows (with SQL) RowsApi unlockRows PUT /dtable-server/api/v1/dtables/{base_uuid}/unlock-rows/ Unlock Rows RowsApi updateRow PUT /dtable-server/api/v1/dtables/{base_uuid}/rows/ Update Row RowsApi updateRows PUT /dtable-server/api/v1/dtables/{base_uuid}/batch-update-rows/ Update Rows SnapshotsApi createSnapshot POST /dtable-server/api/v1/dtables/{base_uuid}/snapshot/ Create Snapshot TablesApi createTable POST /dtable-server/api/v1/dtables/{base_uuid}/tables/ Create Table TablesApi deleteTable DELETE /dtable-server/api/v1/dtables/{base_uuid}/tables/ Delete Table TablesApi duplicateTable POST /dtable-server/api/v1/dtables/{base_uuid}/tables/duplicate-table/ Duplicate Table TablesApi renameTable PUT /dtable-server/api/v1/dtables/{base_uuid}/tables/ Rename Table ViewsApi createView POST /dtable-server/api/v1/dtables/{base_uuid}/views/ Create View ViewsApi deleteView DELETE /dtable-server/api/v1/dtables/{base_uuid}/views/{view_name}/ Delete View ViewsApi getView GET /dtable-server/api/v1/dtables/{base_uuid}/views/{view_name}/ Get View ViewsApi listViews GET /dtable-server/api/v1/dtables/{base_uuid}/views/ List Views ViewsApi updateView PUT /dtable-server/api/v1/dtables/{base_uuid}/views/{view_name}/ Update View"},{"location":"clients/php_api/#api-endpoints-sysadmin","title":"API Endpoints - SysAdmin","text":"Class Method HTTP request Description AutomationsApi deleteAutomation DELETE /api/v2.1/admin/automation-rules/{automation_rule_id}/ Delete Automation AutomationsApi deleteInvalidAutomations DELETE /api/v2.1/admin/invalid-automation-rules/ Delete Invalid Automations AutomationsApi listAutomations GET /api/v2.1/admin/automation-rules/ List Automations AutomationsApi listInvalidAutomations GET /api/v2.1/admin/invalid-automation-rules/ List Invalid Automations BasesApi deleteBase DELETE /api/v2.1/admin/dtable/{base_uuid}/ Delete Base BasesApi deleteBasePassword PUT /api/v2.1/admin/dtable/{base_uuid}/unset-password/ Delete Base Password BasesApi listAllBases GET /api/v2.1/admin/dtables/ List All Bases BasesApi listBaseNotifications GET /api/v2.1/admin/dtable-notifications/ List Notifications BasesApi listTrashedBases GET /api/v2.1/admin/trash-dtables/ List Trashed Bases BasesApi listUsersBases GET /api/v2.1/admin/users/{user_id}/dtables/ List User's Bases BasesApi restoreTrashedBase PUT /api/v2.1/admin/trash-dtables/{base_id}/ Restore Trashed Base CommonDatasetApi deleteInvalidSync DELETE /api/v2.1/admin/common-dataset/sync/{sync_id}/ Delete Invalid Sync CommonDatasetApi deleteInvalidSyncs DELETE /api/v2.1/admin/common-dataset/invalid-syncs/ Delete Invalid Syncs CommonDatasetApi listCommonDataset GET /api/v2.1/admin/common-datasets/ List Common Dataset CommonDatasetApi listCommonDatasetSyncs GET /api/v2.1/admin/common-dataset/periodical-syncs/ List Common Dataset Syncs CommonDatasetApi listInvalidSyncs GET /api/v2.1/admin/common-dataset/invalid-syncs/ List invalid Syncs DepartmentsApi addDepartment POST /api/v2.1/admin/address-book/groups/ Add Department DepartmentsApi deleteDepartment DELETE /api/v2.1/admin/address-book/groups/{department_id}/ Delete Department DepartmentsApi getDepartments GET /api/v2.1/admin/address-book/groups/{department_id}/ Get Department DepartmentsApi listDepartments GET /api/v2.1/admin/address-book/groups/{parent_department_id}/ List Departments ExportApi exportBase GET /api/v2.1/admin/dtables/{base_uuid}/synchronous-export/export-dtable/ Export base FormsApi deleteDataCollectionForms DELETE /api/v2.1/admin/collection-tables/{collection_table_token}/ Delete Data Collection Forms FormsApi deleteForm DELETE /api/v2.1/admin/forms/{form_token}/ Delete Form FormsApi listDataCollectionForms GET /api/v2.1/admin/collection-tables/ List Data Collection Forms FormsApi listForms GET /api/v2.1/admin/forms/ List Forms GroupsApi createGroup POST /api/v2.1/admin/groups/ Create Group GroupsApi deleteGroup DELETE /api/v2.1/admin/groups/{group_id}/ Delete Group GroupsApi listGroups GET /api/v2.1/admin/groups/ List Groups GroupsApi transferGroup PUT /api/v2.1/admin/groups/{group_id}/ Transfer Group LogsApi listAbuseReports GET /api/v2.1/admin/abuse-reports/ List Abuse Reports LogsApi listEmailLogs GET /api/v2.1/admin/email-sending-logs/ List Email Logs LogsApi listLoginLogs GET /api/v2.1/admin/logs/login-logs/ List Login Logs LogsApi listRegistrationLogs GET /api/v2.1/admin/registration-logs/ List Registration Logs LogsApi updateAbuseReport PUT /api/v2.1/admin/abuse-reports/{abuse_report_id}/ Update Abuse Report NotificationsApi deleteInvalidNotifications DELETE /api/v2.1/admin/invalid-notification-rules/ Delete Invalid Notifications NotificationsApi deleteNotificationRule DELETE /api/v2.1/admin/notification-rules/{notification_rule_id}/ Delete Notification NotificationsApi listInvalidNotifications GET /api/v2.1/admin/invalid-notification-rules/ List Invalid Notifications NotificationsApi listNotificationRules GET /api/v2.1/admin/notification-rules/ List Notification Rules PluginsApi addPlugin POST /api/v2.1/admin/dtable-system-plugins/ Add Plugin PluginsApi deletePlugin DELETE /api/v2.1/admin/dtable-system-plugins/{plugin_id}/ Delete Plugin PluginsApi listPlugins GET /api/v2.1/admin/dtable-system-plugins/ List Plugins PluginsApi listPluginsInstallCount GET /api/v2.1/admin/plugins-install-count/ List Plugins Install Count PluginsApi updatePlugin PUT /api/v2.1/admin/dtable-system-plugins/{plugin_id}/ Update Plugin SharingLinksApi deleteBaseExternalLink DELETE /api/v2.1/admin/external-links/{external_link_token}/ Delete Base External Link SharingLinksApi deleteViewExternalLink DELETE /api/v2.1/admin/view-external-links/{view_external_link_token}/ Delete View External Link SharingLinksApi listBaseExternalLinks GET /api/v2.1/admin/dtable/{base_id}/external-links/ List Base External Links SharingLinksApi listExternalLinks GET /api/v2.1/admin/external-links/ List External Links SharingLinksApi listViewExternalLinks GET /api/v2.1/admin/view-external-links/ List View External Links StatisticsApi getActiveUsersPerDay GET /api/v2.1/admin/statistics/active-users/ Get Active Users (per Day) StatisticsApi getAutomationRules GET /api/v2.1/admin/statistics/auto-rules/ Get Automation Rules StatisticsApi getExternalApps GET /api/v2.1/admin/statistics/external-apps/ Get External Apps StatisticsApi getScriptRunningCountByUser GET /api/v2.1/admin/statistics/scripts-running/ Get Script Running Count by User StatisticsApi listActiveUsersByDay GET /api/v2.1/admin/daily-active-users/ List Active Users (one Day) StatisticsApi listScriptTasks GET /api/v2.1/admin/scripts-tasks/ List Scripts Tasks SystemInfoCustomizingApi getSystemInformation GET /api/v2.1/admin/sysinfo/ Get system information SystemInfoCustomizingApi updateFavicon POST /api/v2.1/admin/favicon/ Update Favicon SystemInfoCustomizingApi updateGeneralSettings PUT /api/v2.1/admin/web-settings/ Update General Settings SystemInfoCustomizingApi updateLoginBackgroundImage POST /api/v2.1/admin/login-background-image/ Update Login Background Image SystemInfoCustomizingApi updateLogo POST /api/v2.1/admin/logo/ Update Logo SystemNotificationsApi addNotificationToUser POST /api/v2.1/admin/sys-user-notifications/ Add Notification to User SystemNotificationsApi deleteNotification DELETE /api/v2.1/admin/sys-user-notifications/{sys_notification_id}/ Delete Notification SystemNotificationsApi listNotifications GET /api/v2.1/admin/sys-user-notifications/ List Notifications TeamsApi addTeam POST /api/v2.1/admin/organizations/ Add Team TeamsApi addTeamUser POST /api/v2.1/admin/organizations/{org_id}/users/ Add Team User TeamsApi deleteTeam DELETE /api/v2.1/admin/organizations/{org_id}/ Delete Team TeamsApi deleteTeamGroup DELETE /api/v2.1/admin/organizations/{org_id}/groups/{group_id}/ Delete Group TeamsApi deleteTeamUser DELETE /api/v2.1/admin/organizations/{org_id}/users/{user_id}/ Delete Team User TeamsApi getOrganizationNames GET /api/v2.1/admin/organizations-basic-info/ Get Organization Names TeamsApi listTeamBases GET /api/v2.1/admin/organizations/{org_id}/dtables/ List Team Bases TeamsApi listTeamGroups GET /api/v2.1/admin/organizations/{org_id}/groups/ List Team Groups TeamsApi listTeamUsers GET /api/v2.1/admin/organizations/{org_id}/users/ List Team Users TeamsApi listTeams GET /api/v2.1/admin/organizations/ List Teams TeamsApi searchTeam GET /api/v2.1/admin/organizations/{org_id}/ Search Team TeamsApi updateTeam PUT /api/v2.1/admin/organizations/{org_id}/ Update Team TeamsApi updateTeamUser PUT /api/v2.1/admin/organizations/{org_id}/users/{user_id}/ Update Team User UsersApi addNewUser POST /api/v2.1/admin/users/ Add New User UsersApi deleteUser DELETE /api/v2.1/admin/users/{user_id}/ Delete User UsersApi disableTwoFactor DELETE /api2/two-factor-auth/{user_id}/ Disable 2FA UsersApi enforceTwoFactor PUT /api/v2.1/admin/users/{user_id}/two-factor-auth/ Enforce 2FA UsersApi getUser GET /api/v2.1/admin/users/{user_id}/ Get User UsersApi importUsers POST /api/v2.1/admin/import-users/ Import users UsersApi listAdminUsers GET /api/v2.1/admin/admin-users/ List Admin Users UsersApi listBasesSharedToUser GET /api/v2.1/admin/users/{user_id}/shared-dtables/ List Bases Shared to User UsersApi listUserStorageObjects GET /api/v2.1/admin/users/{user_id}/storage/ List User's Storage Objects UsersApi listUsers GET /api/v2.1/admin/users/ List Users UsersApi resetUserPassword PUT /api/v2.1/admin/users/{user_id}/reset-password/ Reset User's Password UsersApi searchUser GET /api/v2.1/admin/search-user/ Search User / Users UsersApi searchUserByOrgId GET /api/v2.1/admin/search-user-by-org-id/ Search User by Org-ID UsersApi updateAdminRole PUT /api/v2.1/admin/admin-role/ Update Admin's Role UsersApi updateUser PUT /api/v2.1/admin/users/{user_id}/ Update User"},{"location":"clients/php_api/#api-endpoints-teamadmin","title":"API Endpoints - TeamAdmin","text":"Class Method HTTP request Description ActivitiesLogsApi listTeamLogins GET /api/v2.1/org/{org_id}/admin/login-logs/ List Team Logins ActivitiesLogsApi listTeamOperationLog GET /api/v2.1/org/{org_id}/admin/admin-logs/ List Team Operations ActivitiesLogsApi listUserLogins GET /api/v2.1/org/{org_id}/admin/login-logs/{user_id} List User Logins BasesApi clearTeamTrashBin DELETE /api/v2.1/org/{org_id}/admin/trash-dtables/ Clear Team Trash Bin BasesApi deleteBase DELETE /api/v2.1/org/{org_id}/admin/dtables/{base_id}/ Delete Base BasesApi listBaseSharings GET /api/v2.1/org/{org_id}/admin/dtables/{base_uuid}/shares List Base Sharings BasesApi listBases GET /api/v2.1/org/{org_id}/admin/dtables/ List Bases (Team) BasesApi listTrashBases GET /api/v2.1/org/{org_id}/admin/trash-dtables/ List Trash Bases BasesApi restoreBaseFromTrash PUT /api/v2.1/org/{org_id}/admin/trash-dtables/{base_id}/ Restore Base from Trash BasesApi searchBase GET /api/v2.1/org/{org_id}/admin/search-dtables/ Search Base CustomizingApi deleteTeamLogo DELETE /api/v2.1/org/{org_id}/admin/org-logo/ Delete Team Logo CustomizingApi getTeamLogo GET /api/v2.1/org/{org_id}/admin/org-logo/ Get Team Logo CustomizingApi updateTeamLogo POST /api/v2.1/org/{org_id}/admin/org-logo/ Update Team Logo GroupsApi addGroup POST /api/v2.1/org/{org_id}/admin/groups/ Add Group GroupsApi addGroupMembers POST /api/v2.1/org/{org_id}/admin/groups/{group_id}/members/ Add Group Members GroupsApi deleteGroup DELETE /api/v2.1/org/{org_id}/admin/groups/{group_id}/ Delete Group GroupsApi getGroup GET /api/v2.1/org/{org_id}/admin/groups/{group_id}/ Get Group GroupsApi listGroupBases GET /api/v2.1/org/{org_id}/admin/groups/{group_id}/dtables/ List Group Bases GroupsApi listGroupMembers GET /api/v2.1/org/{org_id}/admin/groups/{group_id}/members/ List Group Members GroupsApi listGroups GET /api/v2.1/org/{org_id}/admin/groups/ List Groups (Team) GroupsApi orderGroups PUT /api/v2.1/groups/move-group/ Re-order Your Groups GroupsApi removeGroupMembers DELETE /api/v2.1/org/{org_id}/admin/groups/{group_id}/members/{user_id}/ Remove Group Members GroupsApi updateGroup PUT /api/v2.1/org/{org_id}/admin/groups/{group_id}/ Update Group InfoSettingsApi getTeamInfo GET /api/v2.1/org/admin/info/ Get Team Info InfoSettingsApi getTeamSettings GET /api/v2.1/org/admin/settings/ Get Team Settings InfoSettingsApi updateTeam PUT /api/v2.1/org/admin/info/ Update Team InfoSettingsApi updateTeamSettings PUT /api/v2.1/org/admin/settings/ Update Team Settings SAMLApi getSamlConfig GET /api/v2.1/org/{org_id}/admin/saml-config/ Get SAML Config SAMLApi updateSamlConfig PUT /api/v2.1/org/{org_id}/admin/saml-config/ Update SAML Config SAMLApi verifySamlDomain PUT /api/v2.1/org/{org_id}/admin/verify-domain/ Verify SAML domain SharingLinksApi deleteExternalLink DELETE /api/v2.1/org/{org_id}/admin/external-links/{external_link_token}/ Delete External Link SharingLinksApi deleteInviteLink DELETE /api/v2.1/org/{org_id}/admin/invite-links/{invite_link_token}/ Delete Invite Link SharingLinksApi deleteViewExternalLink DELETE /api/v2.1/org/{org_id}/admin/view-external-links/{view_external_link_token}/ Delete View External Link SharingLinksApi listBaseExternalLinks GET /api/v2.1/org/{org_id}/admin/external-links/ List Base External Links SharingLinksApi listInviteLinks GET /api/v2.1/org/{org_id}/admin/invite-links/ List Invite Links SharingLinksApi listViewExternalLinks GET /api/v2.1/org/{org_id}/admin/view-external-links/ List View External Links SharingLinksApi updateInviteLink PUT /api/v2.1/org/{org_id}/admin/invite-links/{invite_link_token}/ Update Invite Link UsersApi addUser POST /api/v2.1/org/{org_id}/admin/users/ Add User UsersApi deleteUser DELETE /api/v2.1/org/{org_id}/admin/users/{user_id}/ Delete User UsersApi disableTwoFactor DELETE /api/v2.1/org/{org_id}/admin/users/{user_id}/two-factor-auth/ Disable 2FA UsersApi enforceTwofactor PUT /api/v2.1/org/{org_id}/admin/users/{user_id}/two-factor-auth/ Enforce 2FA UsersApi listTeamUsers GET /api/v2.1/org/{org_id}/admin/users/ List Users (Team) UsersApi resetUserPassword PUT /api/v2.1/org/{org_id}/admin/users/{user_id}/set-password/ Reset User Password UsersApi updateUser PUT /api/v2.1/org/{org_id}/admin/users/{user_id}/ Update User"},{"location":"clients/php_api/#api-endpoints-user","title":"API Endpoints - User","text":"Class Method HTTP request Description ActivitiesLogsApi getBaseActivities GET /api/v2.1/dtable-activities/ Get Base Activities ActivitiesLogsApi getBaseActivityDetails GET /api/v2.1/dtable-activities/detail Get Base Activity Details AppsApi changeAppStatus PUT /api/v2.1/external-apps/{app_token}/status/ Change App Status AppsApi importUsersToApp POST /api/v2.1/universal-apps/{app_token}/app-users/batch/ Import Users to App AppsApi listAppInviteLinks GET /api/v2.1/universal-apps/{app_token}/invite-links/ List App Invite Links AppsApi listApps GET /api/v2.1/universal-apps/ List Apps AppsApi listUniversalAppUsers GET /api/v2.1/universal-apps/{app_token}/app-users/ List Universal App Users AttachmentApi checkIfAssetExists GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/asset-exists/ Check If Asset Exists AttachmentApi deleteBaseAsset DELETE /api/v2.1/dtable-asset/{base_uuid}/ Delete Base Asset AttachmentApi deleteBaseAssets DELETE /api/v2.1/dtable-asset/{base_uuid}/batch-delete-assets/ Delete Base Assets AttachmentApi getBaseAttachmentUploadLink GET /api/v2.1/workspace/{workspace_id}/dtable-asset-upload-link/ Get Base Attachment Upload Link AttachmentApi listBaseAssets GET /api/v2.1/dtable-asset/{base_uuid}/ List Base Asset Directories And Files AttachmentApi listRecentlyUploadedFiles GET /api/v2.1/dtable-recent-asset/{base_uuid}/ List Recently Uploaded Files AttachmentApi renameBaseAsset POST /api/v2.1/dtable-asset/{base_uuid}/rename/ Rename Base Asset AutomationsApi createAutomationRule POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/automation-rules/ Create Automation Rule AutomationsApi deleteAutomationRule DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/automation-rules/{automation_rule_id}/ Delete Automation Rule AutomationsApi listAutomationRules GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/automation-rules/ List Automation Rules AutomationsApi updateAutomationRule PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/automation-rules/{automation_rule_id}/ Update Automation Rule BasesApi basePassword PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/password/ Base Password BasesApi clearTrash DELETE /api/v2.1/trash-dtables/ Clear Trash BasesApi createBase POST /api/v2.1/dtables/ Create Base BasesApi createFolder POST /api/v2.1/workspace/{workspace_id}/folders/ Create Folder BasesApi deleteBase DELETE /api/v2.1/workspace/{workspace_id}/dtable/ Delete Base BasesApi deleteFolder DELETE /api/v2.1/workspace/{workspace_id}/folders/{folder_id}/ Delete Folder BasesApi favoriteBase POST /api/v2.1/starred-dtables/ Favorite Base BasesApi listBases GET /api/v2.1/user-admin-dtables/ List Bases BasesApi listFavorites GET /api/v2.1/starred-dtables/ List Favorites BasesApi listGroupTrashedBases GET /api/v2.1/groups/{group_id}/trash-dtables/ List Group Trashed Bases BasesApi listTrashedBases GET /api/v2.1/trash-dtables/ List Trashed Bases BasesApi moveBaseIntoFolder POST /api/v2.1/workspace/{workspace_id}/folder-item-moving/ Move Base into Folder BasesApi restoreGroupTrashedBase PUT /api/v2.1/groups/{group_id}/trash-dtables/{base_uuid}/ Restore Group Trashed Base BasesApi restoreTrashedBase PUT /api/v2.1/trash-dtables/{trashed_base_id}/ Restore Trashed Base BasesApi searchBaseOrApps GET /api/v2.1/dtable/items-search/ Search base or apps BasesApi unfavoriteBase DELETE /api/v2.1/starred-dtables/ Unfavorite Base BasesApi updateBase PUT /api/v2.1/workspace/{workspace_id}/dtable/ Update Base BasesApi updateFolder PUT /api/v2.1/workspace/{workspace_id}/folders/{folder_id}/ Update Folder CommonDatasetApi deleteCommonDataset DELETE /api/v2.1/dtable/common-datasets/{dataset_id}/ Delete Common Dataset CommonDatasetApi getCommonDataset GET /api/v2.1/dtable/common-datasets/{dataset_id}/ Get Common Dataset CommonDatasetApi getCommonDatasetInfo GET /api/v2.1/dtable/common-datasets/{dataset_id}/info/ Get Common Dataset Info CommonDatasetApi importCommonDataset POST /api/v2.1/dtable/common-datasets/{dataset_id}/import/ Import Common Dataset CommonDatasetApi listCommonDataset GET /api/v2.1/dtable/common-datasets/ List Common Datasets CommonDatasetApi listSyncHistory GET /api/v2.1/dtable/common-datasets/syncs/ List Sync History CommonDatasetApi publishCommonDataset POST /api/v2.1/dtable/common-datasets/ Publish Common Dataset CommonDatasetApi renameCommonDataset PUT /api/v2.1/dtable/common-datasets/{dataset_id}/ Rename Common Dataset CommonDatasetApi syncCommonDataset POST /api/v2.1/dtable/common-datasets/{dataset_id}/sync/ Sync Common Dataset CommonDatasetApi updateCommonDatasetSync PUT /api/v2.1/dtable/common-datasets/{dataset_id}/sync/ Update Common Dataset Sync DepartmentsApi listDeparmentMembers GET /api/v2.1/address-book/departments/{department_id}/members/ List Deparment Members DepartmentsApi listDepartments GET /api/v2.1/address-book/departments/ List Departments EmailAccountsApi addEmailAccount POST /api/v2.1/third-party-accounts/{base_uuid}/ Add Email Account EmailAccountsApi deleteEmailAccount DELETE /api/v2.1/third-party-accounts/{base_uuid}/{3rd_party_account_id}/ Delete Email Account EmailAccountsApi getEmailAccount GET /api/v2.1/third-party-accounts/{base_uuid}/detail/ Get Email Account EmailAccountsApi getEmailSendingStatus GET /api/v2.1/dtable-message-status/ Get Email Sending Status EmailAccountsApi listEmailAccounts GET /api/v2.1/third-party-accounts/{base_uuid}/ List Email Accounts EmailAccountsApi updateEmailAccount PUT /api/v2.1/third-party-accounts/{base_uuid}/{3rd_party_account_id}/ Update Email Account FormsApi createForm POST /api/v2.1/forms/ Create Form FormsApi deleteForm DELETE /api/v2.1/forms/{form_token}/ Delete Form FormsApi duplicateForm POST /api/v2.1/forms/{form_token}/duplicate/ Duplicate Form FormsApi listForms GET /api/v2.1/forms/ List Forms FormsApi listSharedForms GET /api/v2.1/forms/shared/ List Shared Forms FormsApi updateForm PUT /api/v2.1/forms/{form_token}/ Update Form FormsApi uploadFormLogo POST /api/v2.1/forms/{form_token}/logos/ Upload Form Logo GroupsWorkspacesApi addGroupMember POST /api/v2.1/groups/{group_id}/members/ Add Group Member GroupsWorkspacesApi copyBaseFromExternalLink POST /api/v2.1/dtable-external-link/dtable-copy/ Copy Base from External Link GroupsWorkspacesApi copyBaseFromWorkspace POST /api/v2.1/dtable-copy/ Copy Base from Workspace GroupsWorkspacesApi createGroup POST /api/v2.1/groups/ Create Group GroupsWorkspacesApi deleteGroup DELETE /api/v2.1/groups/{group_id}/ Delete Group GroupsWorkspacesApi getGroup GET /api/v2.1/groups/{group_id}/ Get Group GroupsWorkspacesApi getGroupMembers GET /api/v2.1/groups/{group_id}/members/ Get Group Members GroupsWorkspacesApi listGroups GET /api/v2.1/groups/ List Groups GroupsWorkspacesApi listWorkspaces GET /api/v2.1/workspaces/ List Workspaces GroupsWorkspacesApi removeGroupMember DELETE /api/v2.1/groups/{group_id}/members/{group_member}/ Remove Group Member GroupsWorkspacesApi searchGroup GET /api/v2.1/search-group/ Search Group GroupsWorkspacesApi searchGroupMembers GET /api/v2.1/groups/{group_id}/search-member/ Search Group Members GroupsWorkspacesApi updateGroup PUT /api/v2.1/groups/{group_id}/ Update Group GroupsWorkspacesApi updateGroupRole PUT /api/v2.1/groups/{group_id}/members/{group_member}/ Update Group Role ImportExportApi appendToTableFromFile POST /api/v2.1/workspace/{workspace_id}/synchronous-import/append-excel-csv-to-table/ Append Excel CSV ImportExportApi exportBase GET /api/v2.1/workspace/{workspace_id}/synchronous-export/export-dtable/ Export Base ImportExportApi exportBaseFromExternalLink GET /dtable/external-links/{external_link_token}/download-zip/ Export Base from External Link ImportExportApi exportBigDataView GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/convert-big-data-view-to-excel/ Export Big Data View to Excel ImportExportApi exportTable GET /api/v2.1/workspace/{workspace_id}/synchronous-export/export-table-to-excel/ Export Table ImportExportApi exportView GET /api/v2.1/workspace/{workspace_id}/synchronous-export/export-view-to-excel/ Export View ImportExportApi importBasefromFile POST /api/v2.1/workspace/{workspace_id}/synchronous-import/import-excel-csv-to-base/ Import Base from xlsx or csv ImportExportApi importTableFromFile POST /api/v2.1/workspace/{workspace_id}/synchronous-import/import-excel-csv-to-table/ Import Table from xlsx or csv ImportExportApi updateFromFile POST /api/v2.1/workspace/{workspace_id}/synchronous-import/update-table-via-excel-csv/ Update from xlsx or csv NotificationsApi addNotificationRule POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/notification-rules/ Add Notification Rule NotificationsApi deleteNotificationRule DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/notification-rules/{notification_rule_id}/ Delete Notification Rule NotificationsApi listNotificationRules GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/notification-rules/ List Notification Rules NotificationsApi markNotificationAsSeen DELETE /api/v2.1/notifications/ Mark Notifications As Seen NotificationsApi updateNotificationRule PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/notification-rules/{notification_rule_id}/ Update Notification Rule SharingApi createGroupShare POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-shares/ Create Group Share SharingApi createGroupViewShare POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/ Create Group View Share SharingApi createUserShare POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share/ Create User Share SharingApi createUserViewShare POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/ Create User View Share SharingApi deleteGroupAllViewShare DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/ Delete Group View Share SharingApi deleteGroupShare DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-shares/{group_id}/ Delete Group Share SharingApi deleteGroupViewShare DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/{group_view_share_id}/ Delete Group View Share SharingApi deleteUserAllViewShare DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/ Delete User View Share SharingApi deleteUserShare DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share/ Delete User Share SharingApi deleteUserViewShare DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/{user_view_share_id}/ Delete User View Share SharingApi leaveSharedView DELETE /api/v2.1/dtables/view-shares-user-shared/{user_view_share_id}/ Leave Shared View SharingApi listCollaborators GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/related-users/ List Collaborators SharingApi listGroupShares GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-shares/ List Group Shares SharingApi listGroupViewShares GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/ List Group View Shares SharingApi listMyGroupShares GET /api/v2.1/dtables/group-shared/ List My Group Shares SharingApi listMyGroupViewShares GET /api/v2.1/dtables/view-shares-group-shared/ My Group View Shares SharingApi listMyShares GET /api/v2.1/dtables/shared/ List My Shares SharingApi listMyUserViewShares GET /api/v2.1/dtables/view-shares-user-shared/ List My User View Shares SharingApi listUserShares GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share/ List User Shares SharingApi listUserViewShares GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/ List User View Shares SharingApi updateGroupShare PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-shares/{group_id}/ Update Group Share SharingApi updateGroupViewShare PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/{group_view_share_id}/ Update Group View Share SharingApi updateUserShare PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share/ Update User Share SharingApi updateUserViewShare PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/{user_view_share_id}/ Update User View Share SharingLinksApi createBaseExternalLink POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/external-links/ Create Base External Link SharingLinksApi createInviteLink POST /api/v2.1/dtables/invite-links/ Create Invite Link SharingLinksApi createViewExternalLink POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/view-external-links/ Create View External Link SharingLinksApi deleteExternalLink DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/external-links/{external_link_token}/ Delete External Link SharingLinksApi deleteInviteLink DELETE /api/v2.1/dtables/invite-links/{invite_link_token}/ Delete Invite Link SharingLinksApi deleteViewExternalLink DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/view-external-links/{view_external_link_token}/ Delete View External Link SharingLinksApi listBaseExternalLinks GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/external-links/ List Base External Links SharingLinksApi listViewExternalLinks GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/view-external-links/ List View External Links SnapshotsApi listSnapshots GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/snapshots/ List Snapshots SnapshotsApi restoreSnapshot POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/snapshots/{commit_id}/restore/ Restore Snapshot SystemNotificationsApi listSystemNotifications GET /api/v2.1/sys-user-notifications/unseen/ List System Notifications SystemNotificationsApi markSystemNotificationsAsSeen PUT /api/v2.1/sys-user-notifications/{sys_notification_id}/seen/ Mark System Notification As Seen UserApi addUserAvatar POST /api/v2.1/user-avatar/ Upload/Update User Avatar UserApi getAccountInfo GET /api2/account/info/ Get Account Info UserApi getPublicUserInfo GET /api/v2.1/user-common-info/{user_id}/ Get Public User Info UserApi listPublicUserInfos POST /api/v2.1/user-list/ List Public User Infos UserApi searchUser GET /api2/search-user/ Search User UserApi updateEmailAddress PUT /api/v2.1/user/contact-email/ Update Email Address WebhooksApi createWebhook POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/webhooks/ Create Webhook WebhooksApi deleteWebhook DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/webhooks/{webhook_id}/ Delete Webhook WebhooksApi listWebhooks GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/webhooks/ List Webhooks WebhooksApi updateWebhook PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/webhooks/{webhook_id}/ Update Webhook"},{"location":"clients/python_api/","title":"Python Client","text":"<p>The SeaTable Python Client encapsulates SeaTable Server Restful API. You can call it in your python programm.</p> <p>External python programms and python scripts, executed in SeaTable, use the same python library and therefore share the same functions. For an overview of the available functions, read the chapter of script programming with Python in this documentation.</p>"},{"location":"clients/python_api/#installation","title":"Installation","text":"<pre><code>pip3 install seatable-api\n</code></pre> <p>The source code of the Python Client API is available at GitHub.</p>"},{"location":"clients/ruby_api/","title":"Ruby Client","text":"<p>One of our community members made a first version of a SeaTable Ruby Client.</p> <p>The source code of the Ruby Client API and additional explanations are available at GitHub.</p>"},{"location":"clients/javascript/columns/","title":"Columns","text":"<p>Every table in a base contains columns. The following calls are available to interact with the columns of a table.</p>"},{"location":"clients/javascript/columns/#get-columns","title":"Get Columns","text":"<p>listColumns</p> <pre><code>base.listColumns(table_name, (view_name = \"\"));\n</code></pre> <p>Example</p> <pre><code>const columns1 = await base.listColumns(\"Table1\");\nconst columns2 = await base.listColumns(\"Table1\", (view_name = \"default\"));\n</code></pre> <p>getColumnByName</p> <pre><code>base.getColumnByName(table_name, column_name);\n</code></pre> <p>Example <pre><code>const col = await base.getColumnsByName('Table1', 'Name');\n</code></pre></p> <p>getColumnsByType</p> <pre><code>base.getColumnsByType(table_name, col_type);\n</code></pre> <p>Example <pre><code>const cols = await base.getColumnsByType('Table1', 'number')\n</code></pre></p>"},{"location":"clients/javascript/columns/#add-column","title":"Add Column","text":"<p>insertColumn</p> <pre><code>base.insertColumn(table_name, column_name, column_type, column_key='', column_data='')\n</code></pre> <p>Example <pre><code>import { ColumnTypes } from 'seatable-api';\nawait base.insertColumn('Table1', 'seatable-api', ColumnTypes.TEXT)\nawait base.insertColumn('Table1', 'seatable-api', ColumnTypes.TEXT, '0000')\nawait base.insertColumn('Table1', 'Link1', ColumnTypes.LINK, column_data={\n        'table':'Table1',\n        'other_table':'Test_User'\n    })\n</code></pre></p>"},{"location":"clients/javascript/columns/#rename-column","title":"Rename Column","text":"<p>renameColumn</p> <pre><code>base.renameColumn(table_name, column_key, new_column_name)\n</code></pre> <p>Example <pre><code>await base.renameColumn('Table1', 'kSiR', 'new-seatable-api')\n</code></pre></p>"},{"location":"clients/javascript/columns/#column-settings","title":"Column Settings","text":"<p>resizeColumn</p> <pre><code>base.resizeColumn(table_name, column_key, new_column_width)\n</code></pre> <p>Example <pre><code>await base.resizeColumn('Table1', 'asFV', 500)\n</code></pre></p> <p>freezeColumn</p> <pre><code>base.freezeColumn(table_name, column_key, frozen)\n</code></pre> <p>Example <pre><code>await base.freezeColumn('Table1', '0000', true)\n</code></pre></p> <p>moveColumn</p> <pre><code>base.moveColumn(table_name, column_key, target_column_key)\n</code></pre> <p>Example In this example, the 'loPx' column will be moved to the right of the '0000' column <pre><code>await base.moveColumn('Table1', 'loPx', '0000')\n</code></pre></p> <p>modifyColumnType</p> <pre><code>base.modifyColumnType(table_name, column_key, new_column_type)\n</code></pre> <p>Example <pre><code>import { ColumnTypes } from 'seatable-api';\nawait base.modifyColumnType('Table1', 'nePI', ColumnTypes.NUMBER)\n</code></pre></p> <p>addColumnOptions</p> <p>Used by single-select or multiple-select type columns <pre><code>base.addColumnOptions(table_name, column, options)\n</code></pre></p> <p>Example <pre><code>await base.addColumnOptions('Table1', 'My choices', [\n        {\"name\": \"ddd\", \"color\": \"#aaa\", \"textColor\": \"#000000\"},\n        {\"name\": \"eee\", \"color\": \"#aaa\", \"textColor\": \"#000000\"},\n        {\"name\": \"fff\", \"color\": \"#aaa\", \"textColor\": \"#000000\"},\n])\n</code></pre></p> <p>addColumnCascadeSettings</p> <p>Used by single-select column, to add a limitation of child column options according to the option of parent column <pre><code>base.addColumnCascadeSettings(table_name, child_column, parent_column, cascade_settings)\n</code></pre></p> <p>Example <pre><code>await base.addColumnCascadeSettings(\"Table1\", \"single-op-col-c\", \"single-op-col\", {\n\"aaa\": [\"aaa-1\", \"aaa-2\"], # If \u201caaa\u201d is selected by parent column, the available options of child column are \"aaa-1 and aaa-2\"\n\"bbb\": [\"bbb-1\", \"bbb-2\"],\n\"ccc\": [\"ccc-1\", \"ccc-2\"]\n})\n</code></pre></p>"},{"location":"clients/javascript/columns/#delete-column","title":"Delete Column","text":"<p>deleteColumn</p> <pre><code>base.deleteColumn(table_name, column_key)\n</code></pre> <p>Example <pre><code>await base.deleteColumn('Table1', 'bsKL')\n</code></pre></p>"},{"location":"clients/javascript/constants/","title":"Constants","text":"<p>In the script there may be some constants we need to know.</p> <p>ColumnTypes</p> <p>Column type, when insert/add columns, change column types, etc. need to be used <pre><code>import { ColumnTypes } from 'seatable-api';\n\nColumnTypes.NUMBER              // number\nColumnTypes.TEXT                // text\nColumnTypes.LONG_TEXT           // long text\nColumnTypes.CHECKBOX            // checkbox\nColumnTypes.DATE                // date &amp; time\nColumnTypes.SINGLE_SELECT       // single select\nColumnTypes.MULTIPLE_SELECT     // multiple\nColumnTypes.IMAGE               // image\nColumnTypes.FILE                // file\nColumnTypes.COLLABORATOR        // collaborator\nColumnTypes.LINK                // link to\nColumnTypes.FORMULA             // formula\nColumnTypes.CREATOR             // creator\nColumnTypes.CTIME               // create time\nColumnTypes.LAST_MODIFIER       // last modifier\nColumnTypes.MTIME               // modify time\nColumnTypes.GEOLOCATION         // geolocation\nColumnTypes.AUTO_NUMBER         // auto munber\nColumnTypes.URL                 // URL\n</code></pre></p>"},{"location":"clients/javascript/javascript_api/","title":"JavaScript Client","text":"<p>The SeaTable JavaScript Client encapsulates SeaTable Server Restful API. You can call it in your front-end page or Node.js program.</p> <p>JavaScript API cannot be used for scripts in SeaTable bases. For script programming with Javascript, there is a separate chapter in this documentation.</p> <p>Note, JavaScript API calls SeaTable Server Restful API, while scripts in SeaTable bases interact with the base loaded in the browser, so the APIs of the two are somewhat different.</p>"},{"location":"clients/javascript/javascript_api/#installation","title":"Installation","text":"<pre><code>npm install seatable-api\n</code></pre> <p>The source code of the JavaScript Client API is available at GitHub.</p>"},{"location":"clients/javascript/javascript_api/#reference","title":"Reference","text":"<p>To use SeaTable APIs, you should first initialize a base object and call <code>base.auth()</code>. <code>base.auth()</code> is an async function, which needs to be executed in async functions. Other APIs all return a promise object. There are two ways to use them</p> <p>The first way:</p> <pre><code>base.listViews(tableName).then(views =&gt; {\n  // Use views to complete the requirements\n}).catch(error =&gt; {\n  // Exception handling\n})\n</code></pre> <p>The second way:</p> <pre><code>try {\n  const views = await base.listViews(tableName);\n  // Use views to complete the requirements\n} catch (error) {\n  // Exception handling\n}\n</code></pre> <p>SeaTable API Errors</p> <ul> <li>400 Params invalid</li> <li>403 Permission denied</li> <li>413 exceed limit</li> <li>500 Internal Server Error</li> </ul>"},{"location":"clients/javascript/javascript_api/#authorization","title":"Authorization","text":"<p>Base represents a table. You can use the api token of the form to obtain the authorization to read and write the base. This token can be generated directly on the web side.</p> <p>Use the API Token of the base to get access authorization.</p>"},{"location":"clients/javascript/javascript_api/#example","title":"Example","text":"<pre><code>import { Base } from \"seatable-api\";\n\nconst config = {\n  server: \"https://cloud.seatable.cn\",\n  APIToken: \"c3c75dca2c369849455a39f4436147639cf02b2d\",\n};\n\nconst base = new Base(config);\nawait base.auth();\n</code></pre>"},{"location":"clients/javascript/links/","title":"Links","text":""},{"location":"clients/javascript/links/#get-links","title":"Get Links","text":"<p>getLinkedRecords</p> <p>List the linked records of rows. You can get the linked records of multiple rows.</p> <pre><code>base.getColumnLinkId(table_name, column_name);\n</code></pre> <p>Example</p> <pre><code>await base.getLinkedRecords('0000', '89o4', [\n{'row_id': 'FzNqJxVUT8KrRjewBkPp8Q', 'limit': 2, 'offset': 0},\n{'row_id': 'Jmnrkn6TQdyRg1KmOM4zZg', 'limit': 20}\n])\n\n// a key-value data structure returned as below\n// key: row_id of link table\n// value: a list which includes the row info of linked table\n{\n'FzNqJxVUT8KrRjewBkPp8Q': [\n    {'row_id': 'LocPgVvsRm6bmnzjFDP9bA', 'display_value': '1'},\n    {'row_id': 'OA6x7CYoRuyc2pT52Znfmw', 'display_value': '3'},\n    ...\n],\n'Jmnrkn6TQdyRg1KmOM4zZg': [\n    {'row_id': 'LocPgVvsRm6bmnzjFDP9bA', 'display_value': '1'},\n    {'row_id': 'OA6x7CYoRuyc2pT52Znfmw', 'display_value': '3'},\n    ...\n]\n}\n</code></pre>"},{"location":"clients/javascript/links/#get-link-id","title":"Get Link ID","text":"<p>Get Link ID</p> <pre><code>base.getColumnLinkId(table_name, column_name);\n</code></pre> <p>Example</p> <pre><code>const linkId = await base.getColumnLinkId(\"LinkTable\", \"Record\");\n// return the link id such as 'aHL2'\n</code></pre>"},{"location":"clients/javascript/links/#add-link","title":"Add Link","text":"<p>addLink</p> <p>Add links, link other table records</p> <pre><code>base.addLink(link_id, table_name, other_table_name, row_id, other_row_id);\n</code></pre> <p>Example</p> <pre><code>await base.addLink(\n\"5WeC\",\n\"real-img-files\",\n\"contact\",\n\"CGtoJB1oQM60RiKT-c5J-g\",\n\"PALm2wPKTCy-jdJNv_UWaQ\"\n);\n</code></pre>"},{"location":"clients/javascript/links/#update-links","title":"Update Link(s)","text":"<p>updateLink</p> <p>Modify the info of link-type column <pre><code>base.updateLink(link_id, table_name, other_table_name, row_id, other_rows_ids)\n</code></pre></p> <p>Example <pre><code>await base.updateLink(\n        link_id='r4IJ',\n        table_name='Table1',\n        other_table_name='Table2',\n        row_id='BXhEm9ucTNu3FjupIk7Xug',\n        other_rows_ids=[\n        'exkb56fAT66j8R0w6wD9Qg',\n        'DjHjwmlRRB6WgU9uPnrWeA'\n        ]\n    )\n</code></pre></p> <p>batchUpdateLinks</p> <p>Batch update infos of link-type columns <pre><code>base.batchUpdateLinks(link_id, table_name, other_table_name, row_id_list, other_rows_ids_map)\n</code></pre></p> <p>Example <pre><code>link_id = \"WaW5\"\ntable_name =\"Table1\"\nother_table_name = \"Table2\"\nrow_id_list = [\"fRLglslWQYSGmkU7o6KyHw\",\"eSQe9OpPQxih8A9zPXdMVA\",\"FseN8ygVTzq1CHDqI4NjjQ\"]\nother_rows_ids_map = {\n        \"FseN8ygVTzq1CHDqI4NjjQ\":[\"OcCE8aX8T7a4dvJr-qNh3g\",\"JckTyhN0TeS8yvH8D3EN7g\"],\n        \"eSQe9OpPQxih8A9zPXdMVA\":[\"cWHbzQiTR8uHHzH_gVSKIg\",\"X56gE7BrRF-i61YlE4oTcw\"],\n        \"fRLglslWQYSGmkU7o6KyHw\":[\"MdfUQiWcTL--uMlrGtqqgw\",\"E7Sh3FboSPmfBlDsrj_Fhg\",\"UcZ7w9wDT-uVq4Ohtwgy9w\"]\n}\n\nawait base.batchUpdateLinks(link_id, table_id, other_table_id, row_id_list, other_rows_ids_map)\n</code></pre></p>"},{"location":"clients/javascript/links/#remove-link","title":"Remove Link","text":"<p>removeLink</p> <pre><code>base.removeLink(link_id, table_name, other_table_name, row_id, other_row_id)\n</code></pre> <p>Example <pre><code>await base.removeLink('5WeC', 'real-img-files', 'contact', 'CGtoJB1oQM60RiKT-c5J-g', 'PALm2wPKTCy-jdJNv_UWaQ')\n</code></pre></p>"},{"location":"clients/javascript/metadata/","title":"Metadata","text":"<p>Metadata delivers the complete structure of a base with tables, views and columns.</p> <p>getMetadata</p> <p>Get the complete metadata of a table. The metadata will not contain the concrete rows of the table.</p> <pre><code>base.getMetadata();\n</code></pre> <p>Example</p> <pre><code>{\n    'tables': [{\n        '_id': '4krH',\n        'name': 'Contact',\n        'is_header_locked': False,\n        'columns': [{\n            'key': '0000',\n            'type': 'text',\n            'name': 'Name',\n            'editable': True,\n            'width': 200,\n            'resizable': True,\n            'draggable': True,\n            'data': None,\n            'permission_type': '',\n            'permitted_users': []\n        }, {\n            'key': 'M31F',\n            'type': 'text',\n            'name': 'Email',\n            'editable': True,\n            'width': 200,\n            'resizable': True,\n            'draggable': True,\n            'data': None,\n            'permission_type': '',\n            'permitted_users': []\n        }],\n        'views': [{\n            '_id': '0000',\n            'name': 'Default view',\n            'type': 'table',\n            'is_locked': False,\n            'filter_conjunction': 'And',\n            'filters': [],\n            'sorts': [],\n            'groupbys': [],\n            'group_rows': [],\n            'groups': [],\n            'colorbys': {},\n            'hidden_columns': [],\n            'rows': [],\n            'formula_rows': {},\n            'link_rows': {},\n            'summaries': {},\n            'colors': {}\n        }]\n    }]\n}\n</code></pre>"},{"location":"clients/javascript/metadata/#_1","title":"Metadata","text":""},{"location":"clients/javascript/rows/","title":"Rows","text":""},{"location":"clients/javascript/rows/#get-rows","title":"Get Rows","text":"<p>listRows</p> <pre><code>base.listRows(table_name, view_name=None, order_by='', desc='', start='', limit='')\n</code></pre> <p>Example <pre><code>const rows1 = await base.listRows('Table1')\nconst rows2 = await base.listRows('Table1', view_name='default', order_by='\u5e74\u9f84', desc=true, start=5, limit=20)\n</code></pre></p> <p>getRow</p> <pre><code>base.getRow(table_name, row_id)\n</code></pre> <p>Example <pre><code>const row = await base.getRow('Table1', 'U_eTV7mDSmSd-K2P535Wzw')\n</code></pre></p>"},{"location":"clients/javascript/rows/#add-rows","title":"Add Row(s)","text":"<p>appendRow</p> <pre><code>base.appendRow(table_name, row_data)\n</code></pre> <p>Example <pre><code>row_data = {\n    \"Name\": \"I am new Row\"\n}\n\nawait base.appendRow('Table1', row_data)\n</code></pre></p> <p>insertRow</p> <pre><code>base.insertRow(table_name, row_data, anchor_row_id)\n</code></pre> <p>Example <pre><code>const row_data = {\n    \"Name\": \"I am new Row\"\n}\n\nawait base.insertRow('Table1', row_data, 'U_eTV7mDSmSd-K2P535Wzw')\n</code></pre></p> <p>batchAppendRows</p> <pre><code>base.batchAppendRows(table_name, rows_data)\n</code></pre> <p>Example <pre><code>const rows_data = [{\n                'Name': 'test batch',\n                'content': 'Yes'\n            }, {\n                'Name': 'test batch',\n                'content': 'Yes'\n            }, {\n                'Name': 'test batch',\n                'content': 'Yes'\n            }]\nawait base.batchAppendRows('Table6', rows_data)\n</code></pre></p>"},{"location":"clients/javascript/rows/#update-row","title":"Update Row","text":"<p>updateRow</p> <pre><code>base.updateRow(table_name, row_id, row_data)\n</code></pre> <p>Example <pre><code>row_data = {\n    \"Number\": \"123\"\n}\nawait base.updateRow('Table1', 'U_eTV7mDSmSd-K2P535Wzw', row_data)\n</code></pre></p> <p>batchUpdateRows</p> <pre><code>base.batchUpdateRows(table_name, rows_data)\n</code></pre> <p>Example <pre><code>const updates_data = [\n        {\n            \"row_id\": \"fMmCFyoxT4GN5Y2Powbl0Q\",\n            \"row\": {\n                \"Name\": \"Ranjiwei\",\n                \"age\": \"36\"\n            }\n        },\n        {\n            \"row_id\": \"cF5JTE99Tae-VVx0BGT-3A\",\n            \"row\": {\n                \"Name\": \"Huitailang\",\n                \"age\": \"33\"\n            }\n        },\n        {\n            \"row_id\": \"WP-8rb5PSUaM-tZRmTOCPA\",\n            \"row\": {\n                \"Name\": \"Yufeng\",\n                \"age\": \"22\"\n            }\n        }\n    ]\nawait base.batchUpdateRows('Table1', rows_data=updates_data)\n</code></pre></p>"},{"location":"clients/javascript/rows/#delete-rows","title":"Delete Row(s)","text":"<p>deleteRow</p> <pre><code>base.deleteRow(table_name, row_id)\n</code></pre> <p>Example <pre><code>await base.deleteRow('Table1', 'U_eTV7mDSmSd-K2P535Wzw')\n</code></pre></p> <p>batchDeleteRows</p> <pre><code>base.batchDeleteRows(table_name, row_ids)\n</code></pre> <p>Example <pre><code>const del_rows = rows.slice(0, 3);\nconst row_ids = del_rows.map(row =&gt; row._id);\nawait base.batchDeleteRows('Table1', row_ids)\n</code></pre></p>"},{"location":"clients/javascript/sql_query/","title":"Query with SQL","text":"<p>query</p> <p>Use sql to query a base <pre><code>base.query(sql)\n</code></pre></p> <p>Example: BASIC <pre><code>await base.query('select name, price, year from Bill')\n</code></pre> Returns for example the following: <pre><code>[\n    {'_id': 'PzBiZklNTGiGJS-4c0_VLw', 'name': 'Bob', 'price': 300, 'year': 2019},\n    {'_id': 'Ep7odyv1QC2vDQR2raMvSA', 'name': 'Bob', 'price': 300, 'year': 2021},\n    {'_id': 'f1x3X_8uTtSDUe9D60VlYQ', 'name': 'Tom', 'price': 100, 'year': 2019},\n    {'_id': 'NxeaB5pDRFKOItUs_Ugxug', 'name': 'Tom', 'price': 100, 'year': 2020},\n    {'_id': 'W0BrjGQpSES9nfSytvXgMA', 'name': 'Tom', 'price': 200, 'year': 2021},\n    {'_id': 'EvwCWtX3RmKYKHQO9w2kLg', 'name': 'Jane', 'price': 200, 'year': 2020},\n    {'_id': 'BTiIGSTgR06UhPLhejFctA', 'name': 'Jane', 'price': 200, 'year': 2021}\n]\n</code></pre></p> <p>Example: WHERE</p> <p><pre><code>await base.query('select name, price from Bill where year = 2021 ')\n</code></pre> Returns for example the following: <pre><code>[\n    {'_id': 'Ep7odyv1QC2vDQR2raMvSA', 'name': 'Bob', 'price': 300},\n    {'_id': 'W0BrjGQpSES9nfSytvXgMA', 'name': 'Tom', 'price': 200},\n    {'_id': 'BTiIGSTgR06UhPLhejFctA', 'name': 'Jane', 'price': 200}\n]\n</code></pre></p> <p>Example: ORDER BY</p> <p><pre><code>await base.query('select name, price, year from Bill order by year')\n</code></pre> Returns for example the following:</p> <pre><code>[\n    {'_id': 'PzBiZklNTGiGJS-4c0_VLw', 'name': 'Bob', 'price': 300, 'year': 2019},\n    {'_id': 'f1x3X_8uTtSDUe9D60VlYQ', 'name': 'Tom', 'price': 100, 'year': 2019},\n    {'_id': 'NxeaB5pDRFKOItUs_Ugxug', 'name': 'Tom', 'price': 100, 'year': 2020},\n    {'_id': 'EvwCWtX3RmKYKHQO9w2kLg', 'name': 'Jane', 'price': 200, 'year': 2020},\n    {'_id': 'Ep7odyv1QC2vDQR2raMvSA', 'name': 'Bob', 'price': 300, 'year': 2021},\n    {'_id': 'W0BrjGQpSES9nfSytvXgMA', 'name': 'Tom', 'price': 200, 'year': 2021},\n    {'_id': 'BTiIGSTgR06UhPLhejFctA', 'name': 'Jane', 'price': 200, 'year': 2021}\n]\n</code></pre> <p>Example: GROUP BY</p> <p><pre><code>await base.query('select name, sum(price) from Bill group by name')\n</code></pre> Returns for example the following: <pre><code>[\n    {'SUM(price)': 600, 'name': 'Bob'},\n    {'SUM(price)': 400, 'name': 'Tom'},\n    {'SUM(price)': 400, 'name': 'Jane'}\n]\n</code></pre></p> <p>Example: DISTINCT</p> <p><pre><code>await base.query('select distinct name from Bill')\n</code></pre> Returns for example the following:</p> <pre><code>[\n    {'_id': 'PzBiZklNTGiGJS-4c0_VLw', 'name': 'Bob'},\n    {'_id': 'f1x3X_8uTtSDUe9D60VlYQ', 'name': 'Tom'},\n    {'_id': 'EvwCWtX3RmKYKHQO9w2kLg', 'name': 'Jane'}\n]\n</code></pre>"},{"location":"clients/javascript/tables/","title":"Tables","text":""},{"location":"clients/javascript/tables/#get-tables","title":"Get Table(s)","text":"<p>getTables</p> <pre><code>base.getTables()\n</code></pre> <p>Example <pre><code>const tables = await base.getTables();\n</code></pre></p> <p>getTableByName</p> <pre><code>base.getTableByName(tableName);\n</code></pre> <p>Example <pre><code>const table = await base.getTableByName('Table1')\n</code></pre></p>"},{"location":"clients/javascript/tables/#add-table","title":"Add Table","text":"<p>addTable</p> <pre><code>base.addTable(tableName: String, lang='en', columns=[])\n</code></pre> <p>Example <pre><code>await base.addTable('Investigation', lang='en')\n</code></pre></p>"},{"location":"clients/javascript/tables/#rename-table","title":"Rename Table","text":"<p>renameTable</p> <pre><code>base.renameTable(oldNname: String, newName: String)\n</code></pre> <p>Example <pre><code>await base.renameTable('Table1', 'Projects 2023');\n</code></pre></p>"},{"location":"clients/javascript/tables/#delete-table","title":"Delete Table","text":"<p>deleteTable</p> <pre><code>base.deleteTable(tableName)\n</code></pre> <p>Example <pre><code>await base.deleteTable('Table1')\n</code></pre></p>"},{"location":"clients/javascript/views/","title":"Views","text":""},{"location":"clients/javascript/views/#get-views","title":"Get Views","text":"<p>listViews</p> <pre><code>base.listViews(table_name)\n</code></pre> <p>Example <pre><code>const views = await base.listViews('Table1')\n</code></pre></p> <p>getViewByName</p> <pre><code>base.getViewByName(table_name, view_name);\n</code></pre> <p>Example <pre><code>const view = await base.getViewByName('Table1', 'MyView');\n</code></pre></p>"},{"location":"clients/javascript/views/#add-view","title":"Add View","text":"<p>addView</p> <pre><code>base.addView(table_name, new_view_name);\n</code></pre> <p>Example <pre><code>await base.addView('Table1', 'new_view');\n</code></pre></p>"},{"location":"clients/javascript/views/#rename-view","title":"Rename View","text":"<p>renameView</p> <pre><code>base.renameView(table_name, view_name, new_view_name);\n</code></pre> <p>Example <pre><code>await base.renameView('Table1', 'myView', 'myView-01');\n</code></pre></p>"},{"location":"clients/javascript/views/#delete-view","title":"Delete View","text":"<p>deleteView</p> <pre><code>base.deleteView(table_name, view_name);\n</code></pre> <p>Example <pre><code>await base.deleteView('Table1', 'MyView');\n</code></pre></p>"},{"location":"clients/php/Auth/Api/APITokenApi/","title":"SeaTable\\Client\\APITokenApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createApiToken() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/ Create API-Token createTempApiToken() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/temp-api-token/ Create API-Token (temporary) deleteApiToken() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/{app_name}/ Delete API-Token listApiTokens() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/ List API-Tokens updateApiToken() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/{app_name}/ Update API-Token"},{"location":"clients/php/Auth/Api/APITokenApi/#createapitoken","title":"<code>createApiToken()</code>","text":"<pre><code>createApiToken($workspace_id, $base_name, $app_name, $permission): \\SeaTable\\Client\\Auth\\ApiToken\n</code></pre> <p>Create API-Token</p> <p>Create an API-Token for a base.</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer (Account-Token) authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\APITokenApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | The id of the workspace. For an explanation how to get the *workspace_id*, check out this [help-article](https://seatable.io/docs/arbeiten-mit-gruppen/workspace-id-einer-gruppe-ermitteln/?lang=auto).  Alternatively the API endpoint [get metadata](/reference/get-metadata) can be used.\n$base_name = My Projects; // string | The name of your base.\n$app_name = 'app_name_example'; // string | The name of your app. Every API-Token has a name to identify the purpose. The name of the app must be unique for every base.\n$permission = new \\SeaTable\\Client\\Auth\\AuthenticationPermission(); // \\SeaTable\\Client\\Auth\\AuthenticationPermission\n\ntry {\n    $result = $apiInstance-&gt;createApiToken($workspace_id, $base_name, $app_name, $permission);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling APITokenApi-&gt;createApiToken: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/APITokenApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int The id of the workspace. For an explanation how to get the workspace_id, check out this help-article.  Alternatively the API endpoint get metadata can be used. base_name string The name of your base. app_name string The name of your app. Every API-Token has a name to identify the purpose. The name of the app must be unique for every base. permission \\SeaTable\\Client\\Auth\\AuthenticationPermission"},{"location":"clients/php/Auth/Api/APITokenApi/#return-type","title":"Return type","text":"<p>\\SeaTable\\Client\\Auth\\ApiToken</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#createtempapitoken","title":"<code>createTempApiToken()</code>","text":"<pre><code>createTempApiToken($workspace_id, $base_name): \\SeaTable\\Client\\Auth\\ApiTokenTemporary\n</code></pre> <p>Create API-Token (temporary)</p> <p>Create a temporary API-Token for a base that expires after one hour.</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer (Account-Token) authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\APITokenApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | The id of the workspace. For an explanation how to get the *workspace_id*, check out this [help-article](https://seatable.io/docs/arbeiten-mit-gruppen/workspace-id-einer-gruppe-ermitteln/?lang=auto).  Alternatively the API endpoint [get metadata](/reference/get-metadata) can be used.\n$base_name = My Projects; // string | The name of your base.\n\ntry {\n    $result = $apiInstance-&gt;createTempApiToken($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling APITokenApi-&gt;createTempApiToken: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/APITokenApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes workspace_id int The id of the workspace. For an explanation how to get the workspace_id, check out this help-article.  Alternatively the API endpoint get metadata can be used. base_name string The name of your base."},{"location":"clients/php/Auth/Api/APITokenApi/#return-type_1","title":"Return type","text":"<p>\\SeaTable\\Client\\Auth\\ApiTokenTemporary</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#deleteapitoken","title":"<code>deleteApiToken()</code>","text":"<pre><code>deleteApiToken($workspace_id, $base_name, $app_name): object\n</code></pre> <p>Delete API-Token</p> <p>Delete one specific API token from a base. The token is identified by his app_name.</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer (Account-Token) authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\APITokenApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | The id of the workspace. For an explanation how to get the *workspace_id*, check out this [help-article](https://seatable.io/docs/arbeiten-mit-gruppen/workspace-id-einer-gruppe-ermitteln/?lang=auto).  Alternatively the API endpoint [get metadata](/reference/get-metadata) can be used.\n$base_name = My Projects; // string | The name of your base.\n$app_name = My App; // string | The name of your app. Every API-Token has a name to identify the purpose. The name of the app must be unique for every base.\n\ntry {\n    $result = $apiInstance-&gt;deleteApiToken($workspace_id, $base_name, $app_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling APITokenApi-&gt;deleteApiToken: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/APITokenApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes workspace_id int The id of the workspace. For an explanation how to get the workspace_id, check out this help-article.  Alternatively the API endpoint get metadata can be used. base_name string The name of your base. app_name string The name of your app. Every API-Token has a name to identify the purpose. The name of the app must be unique for every base."},{"location":"clients/php/Auth/Api/APITokenApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#listapitokens","title":"<code>listApiTokens()</code>","text":"<pre><code>listApiTokens($workspace_id, $base_name): \\SeaTable\\Client\\Auth\\ApiTokenList\n</code></pre> <p>List API-Tokens</p> <p>List all API-Tokens of a base with additional informations like permission, generation date and last access time.</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer (Account-Token) authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\APITokenApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | The id of the workspace. For an explanation how to get the *workspace_id*, check out this [help-article](https://seatable.io/docs/arbeiten-mit-gruppen/workspace-id-einer-gruppe-ermitteln/?lang=auto).  Alternatively the API endpoint [get metadata](/reference/get-metadata) can be used.\n$base_name = My Projects; // string | The name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listApiTokens($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling APITokenApi-&gt;listApiTokens: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/APITokenApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id int The id of the workspace. For an explanation how to get the workspace_id, check out this help-article.  Alternatively the API endpoint get metadata can be used. base_name string The name of your base."},{"location":"clients/php/Auth/Api/APITokenApi/#return-type_3","title":"Return type","text":"<p>\\SeaTable\\Client\\Auth\\ApiTokenList</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#updateapitoken","title":"<code>updateApiToken()</code>","text":"<pre><code>updateApiToken($workspace_id, $base_name, $app_name, $permission): \\SeaTable\\Client\\Auth\\ApiToken\n</code></pre> <p>Update API-Token</p> <p>Update the permission of an existing API-Token.</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer (Account-Token) authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\APITokenApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | The id of the workspace. For an explanation how to get the *workspace_id*, check out this [help-article](https://seatable.io/docs/arbeiten-mit-gruppen/workspace-id-einer-gruppe-ermitteln/?lang=auto).  Alternatively the API endpoint [get metadata](/reference/get-metadata) can be used.\n$base_name = My Projects; // string | The name of your base.\n$app_name = My App; // string | The name of your app. Every API-Token has a name to identify the purpose. The name of the app must be unique for every base.\n$permission = new \\SeaTable\\Client\\Auth\\AuthenticationPermission(); // \\SeaTable\\Client\\Auth\\AuthenticationPermission\n\ntry {\n    $result = $apiInstance-&gt;updateApiToken($workspace_id, $base_name, $app_name, $permission);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling APITokenApi-&gt;updateApiToken: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/APITokenApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes workspace_id int The id of the workspace. For an explanation how to get the workspace_id, check out this help-article.  Alternatively the API endpoint get metadata can be used. base_name string The name of your base. app_name string The name of your app. Every API-Token has a name to identify the purpose. The name of the app must be unique for every base. permission \\SeaTable\\Client\\Auth\\AuthenticationPermission"},{"location":"clients/php/Auth/Api/APITokenApi/#return-type_4","title":"Return type","text":"<p>\\SeaTable\\Client\\Auth\\ApiToken</p>"},{"location":"clients/php/Auth/Api/APITokenApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/Auth/Api/AccountTokenApi/","title":"SeaTable\\Client\\AccountTokenApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getAccountTokenfromUsername() POST /api2/auth-token/ Get Account-Token with Username and Password"},{"location":"clients/php/Auth/Api/AccountTokenApi/#getaccounttokenfromusername","title":"<code>getAccountTokenfromUsername()</code>","text":"<pre><code>getAccountTokenfromUsername($username, $password, $x_seafile_otp): \\SeaTable\\Client\\Auth\\AccountToken\n</code></pre> <p>Get Account-Token with Username and Password</p> <p>Generate an Account-Token with your username and password. This Account-Token is necessary for all the following account operations. Use the optional paramater if two-factor-authentication (2FA) is activated for your account.</p>"},{"location":"clients/php/Auth/Api/AccountTokenApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new SeaTable\\Client\\Auth\\AccountTokenApi(\n    new GuzzleHttp\\Client()\n);\n$username = 'username_example'; // string | Your email address\n$password = 'password_example'; // string | Your password\n$x_seafile_otp = 'x_seafile_otp_example'; // string | Two-factor token (usually generated with a mobile app like the google authenticator), optional, only needed if 2FA is activated for your account.\n\ntry {\n    $result = $apiInstance-&gt;getAccountTokenfromUsername($username, $password, $x_seafile_otp);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AccountTokenApi-&gt;getAccountTokenfromUsername: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/AccountTokenApi/#parameters","title":"Parameters","text":"Name Type Description Notes username string Your email address password string Your password x_seafile_otp string Two-factor token (usually generated with a mobile app like the google authenticator), optional, only needed if 2FA is activated for your account. [optional]"},{"location":"clients/php/Auth/Api/AccountTokenApi/#return-type","title":"Return type","text":"<p>\\SeaTable\\Client\\Auth\\AccountToken</p>"},{"location":"clients/php/Auth/Api/AccountTokenApi/#authorization","title":"Authorization","text":"<p>No authorization required</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/","title":"SeaTable\\Client\\BaseTokenApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getBaseTokenWithAccountToken() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/access-token/ Get Base-Token with Account-Token getBaseTokenWithApiToken() GET /api/v2.1/dtable/app-access-token/ Get Base-Token with API-Token getBaseTokenWithExternLink() GET /api/v2.1/external-link-tokens/{external_link_token}/access-token/ Get Base-Token with External-Link"},{"location":"clients/php/Auth/Api/BaseTokenApi/#getbasetokenwithaccounttoken","title":"<code>getBaseTokenWithAccountToken()</code>","text":"<pre><code>getBaseTokenWithAccountToken($workspace_id, $base_name): \\SeaTable\\Client\\Auth\\AccessToken\n</code></pre> <p>Get Base-Token with Account-Token</p> <p>Generate a Base-Token using the user's Account-Token. The read/write permission depends on the user's access permissions to the base.</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer (Account-Token) authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\BaseTokenApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | The id of the workspace. For an explanation how to get the *workspace_id*, check out this [help-article](https://seatable.io/docs/arbeiten-mit-gruppen/workspace-id-einer-gruppe-ermitteln/?lang=auto).  Alternatively the API endpoint [get metadata](/reference/get-metadata) can be used.\n$base_name = My Projects; // string | The name of your base.\n\ntry {\n    $result = $apiInstance-&gt;getBaseTokenWithAccountToken($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseTokenApi-&gt;getBaseTokenWithAccountToken: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int The id of the workspace. For an explanation how to get the workspace_id, check out this help-article.  Alternatively the API endpoint get metadata can be used. base_name string The name of your base."},{"location":"clients/php/Auth/Api/BaseTokenApi/#return-type","title":"Return type","text":"<p>\\SeaTable\\Client\\Auth\\AccessToken</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#getbasetokenwithapitoken","title":"<code>getBaseTokenWithApiToken()</code>","text":"<pre><code>getBaseTokenWithApiToken(): object\n</code></pre> <p>Get Base-Token with API-Token</p> <p>Generate a Base-Token with an API-Token. The API-Token grants either read or write permission to this base, depending of the permission of the API-Token.</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer (API-Token) authorization: ApiTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Auth\\BaseTokenApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;getBaseTokenWithApiToken();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseTokenApi-&gt;getBaseTokenWithApiToken: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#authorization_1","title":"Authorization","text":"<p>ApiTokenAuth</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#getbasetokenwithexternlink","title":"<code>getBaseTokenWithExternLink()</code>","text":"<pre><code>getBaseTokenWithExternLink($external_link_token): \\SeaTable\\Client\\Auth\\AccessToken\n</code></pre> <p>Get Base-Token with External-Link</p> <p>Generate a Base-Token from an external link to this base. Because external links always grant read-only permissions, the Base-Token generated from a external link will only grant read permissions to the base.</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new SeaTable\\Client\\Auth\\BaseTokenApi(\n    new GuzzleHttp\\Client()\n);\n$external_link_token = c41cef71f5094827a786; // string | The random string from the external link. Eg:  - If the external link is https://cloud.seatable.io/dtable/external-links/c41cef71f5094827a786, the link token is *c41cef71f5094827a786*. - If the external link is a custom link like https://cloud.seatable.io/dtable/external-links/custom/my-personal-link, the link token is only *my-personal-link*.\n\ntry {\n    $result = $apiInstance-&gt;getBaseTokenWithExternLink($external_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseTokenApi-&gt;getBaseTokenWithExternLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes external_link_token string The random string from the external link. Eg:  - If the external link is https://cloud.seatable.io/dtable/external-links/c41cef71f5094827a786, the link token is c41cef71f5094827a786. - If the external link is a custom link like https://cloud.seatable.io/dtable/external-links/custom/my-personal-link, the link token is only my-personal-link."},{"location":"clients/php/Auth/Api/BaseTokenApi/#return-type_2","title":"Return type","text":"<p>\\SeaTable\\Client\\Auth\\AccessToken</p>"},{"location":"clients/php/Auth/Api/BaseTokenApi/#authorization_2","title":"Authorization","text":"<p>No authorization required</p>"},{"location":"clients/php/Auth/Model/AccessToken/","title":"# AccessToken","text":""},{"location":"clients/php/Auth/Model/AccessToken/#properties","title":"Properties","text":"Name Type Description Notes app_name string [optional] access_token string [optional] dtable_uuid string [optional] dtable_server string [optional] dtable_socket string [optional] workspace_id int [optional] dtable_name string [optional]"},{"location":"clients/php/Auth/Model/AccountToken/","title":"# AccountToken","text":""},{"location":"clients/php/Auth/Model/AccountToken/#properties","title":"Properties","text":"Name Type Description Notes token string [optional]"},{"location":"clients/php/Auth/Model/ApiToken/","title":"# ApiToken","text":""},{"location":"clients/php/Auth/Model/ApiToken/#properties","title":"Properties","text":"Name Type Description Notes app_name string [optional] api_token string [optional] generated_by string [optional] generated_at \\DateTime [optional] last_access \\DateTime [optional] permission string [optional]"},{"location":"clients/php/Auth/Model/ApiTokenList/","title":"# ApiTokenList","text":""},{"location":"clients/php/Auth/Model/ApiTokenList/#properties","title":"Properties","text":"Name Type Description Notes api_tokens \\SeaTable\\Client\\Auth\\ApiToken[] [optional]"},{"location":"clients/php/Auth/Model/ApiTokenTemporary/","title":"# ApiTokenTemporary","text":""},{"location":"clients/php/Auth/Model/ApiTokenTemporary/#properties","title":"Properties","text":"Name Type Description Notes api_token string [optional]"},{"location":"clients/php/Auth/Model/AuthenticationPermission/","title":"# AuthenticationPermission","text":""},{"location":"clients/php/Auth/Model/AuthenticationPermission/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/","title":"SeaTable\\Client\\ActivitiesLogsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getBaseActivityLog() GET /dtable-server/api/v1/dtables/{base_uuid}/operations/ Get Base Activity Log listDeleteOperations() GET /api/v2.1/dtables/{base_uuid}/delete-operation-logs/ List Delete Operations listDeletedRows() GET /dtable-server/api/v1/dtables/{base_uuid}/deleted-rows/ List Deleted Rows listRowActivities() GET /dtable-server/api/v1/dtables/{base_uuid}/activities/ List Row Activities"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#getbaseactivitylog","title":"<code>getBaseActivityLog()</code>","text":"<pre><code>getBaseActivityLog($base_uuid, $page): object\n</code></pre> <p>Get Base Activity Log</p> <p>Get the activities log in a base. With the base's <code>base_uuid</code>.</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n\ntry {\n    $result = $apiInstance-&gt;getBaseActivityLog($base_uuid, $page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;getBaseActivityLog: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional]"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#listdeleteoperations","title":"<code>listDeleteOperations()</code>","text":"<pre><code>listDeleteOperations($op_type, $base_uuid, $page, $per_page)\n</code></pre> <p>List Delete Operations</p> <p>Deleted rows, tables and columns are saved in SeaTable for 7 days. You can list these in the operation log with this request. To restore them, you'll need to log into the web UI.  For <code>op_type</code> notice:  <code>delete_row</code> returns the single operations which have deleted 1 row each time.  <code>delete_rows</code> returns the operations in which multiple rows were deleted.  <code>delete_column</code> returns the column that was deleted by each operation.  <code>delete_table</code> returns the table that was deleted by each operation.</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$op_type = delete_row; // string | Type of delete operation that should be listed. Optional. Choose from `delete_row`, `delete_rows`, `delete_table`, and `delete_column`.\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $apiInstance-&gt;listDeleteOperations($op_type, $base_uuid, $page, $per_page);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;listDeleteOperations: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes op_type string Type of delete operation that should be listed. Optional. Choose from `delete_row`, `delete_rows`, `delete_table`, and `delete_column`. base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#listdeletedrows","title":"<code>listDeletedRows()</code>","text":"<pre><code>listDeletedRows($base_uuid): object\n</code></pre> <p>List Deleted Rows</p> <p>List all the deleted rows in the last 7 days.  If you are looking for rows deleted before that, you can view a snapshot of this base.</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;listDeletedRows($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;listDeletedRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#listrowactivities","title":"<code>listRowActivities()</code>","text":"<pre><code>listRowActivities($row_id, $base_uuid, $page, $per_page): object\n</code></pre> <p>List Row Activities</p> <p>List all the activities done to a certain row with the row's <code>row_id</code>.</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$row_id = YMIviMeERQCUiQhPPqo6Gw; // string | Unique id of a row.\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listRowActivities($row_id, $base_uuid, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;listRowActivities: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes row_id string Unique id of a row. base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ActivitiesLogsApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/","title":"SeaTable\\Client\\BaseInfoApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getBaseInfo() GET /dtable-server/dtables/{base_uuid} Get Base Info getBigDataStatus() GET /dtable-db/api/v1/base-info/{base_uuid}/ Get Big Data Status getMetadata() GET /dtable-server/api/v1/dtables/{base_uuid}/metadata/ Get Metadata listCollaborators() GET /dtable-server/api/v1/dtables/{base_uuid}/related-users/ List Collaborators"},{"location":"clients/php/Base/Api/BaseInfoApi/#getbaseinfo","title":"<code>getBaseInfo()</code>","text":"<pre><code>getBaseInfo($base_uuid): object\n</code></pre> <p>Get Base Info</p> <p>Returns basic information about the specified base.</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BaseInfoApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;getBaseInfo($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseInfoApi-&gt;getBaseInfo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BaseInfoApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/Base/Api/BaseInfoApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#getbigdatastatus","title":"<code>getBigDataStatus()</code>","text":"<pre><code>getBigDataStatus($base_uuid): object\n</code></pre> <p>Get Big Data Status</p> <p>Returns the total number of rows stored in the big data backend of the specified base as well as rows in the big data backend per table.</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BaseInfoApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;getBigDataStatus($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseInfoApi-&gt;getBigDataStatus: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BaseInfoApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/Base/Api/BaseInfoApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#getmetadata","title":"<code>getMetadata()</code>","text":"<pre><code>getMetadata($base_uuid): object\n</code></pre> <p>Get Metadata</p> <p>Returns all metadata of the specified base including tables, columns, views and settings.</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BaseInfoApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;getMetadata($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseInfoApi-&gt;getMetadata: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BaseInfoApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/Base/Api/BaseInfoApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#listcollaborators","title":"<code>listCollaborators()</code>","text":"<pre><code>listCollaborators($base_uuid): object\n</code></pre> <p>List Collaborators</p> <p>Returns all collaborators in the specified base including name, email address and avatar.</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BaseInfoApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;listCollaborators($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BaseInfoApi-&gt;listCollaborators: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BaseInfoApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/Base/Api/BaseInfoApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BaseInfoApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BigDataApi/","title":"SeaTable\\Client\\BigDataApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createBigDataRowsLink() POST /dtable-db/api/v1/base/{base_uuid}/links/ Create Row Links in Big Data deleteBigDataRowLinks() DELETE /dtable-db/api/v1/base/{base_uuid}/links/ Delete Row Links in Big Data deleteBigDataRows() DELETE /dtable-db/api/v1/delete-rows/{base_uuid}/ Delete Rows in Big Data insertBigDataRows() POST /dtable-db/api/v1/insert-rows/{base_uuid}/ Insert Rows into Big Data moveRowsToBigData() POST /dtable-server/api/v1/dtables/{base_uuid}/archive-view/ Move Rows to Big Data updateBigDataRows() PUT /dtable-db/api/v1/update-rows/{base_uuid}/ Update Rows in Big Data"},{"location":"clients/php/Base/Api/BigDataApi/#createbigdatarowslink","title":"<code>createBigDataRowsLink()</code>","text":"<pre><code>createBigDataRowsLink($base_uuid, $archived_row_links): object\n</code></pre> <p>Create Row Links in Big Data</p> <p>This API can handle both archived and unarchived rows.</p>"},{"location":"clients/php/Base/Api/BigDataApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BigDataApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$archived_row_links = new \\SeaTable\\Client\\Base\\ArchivedRowLinks(); // \\SeaTable\\Client\\Base\\ArchivedRowLinks\n\ntry {\n    $result = $apiInstance-&gt;createBigDataRowsLink($base_uuid, $archived_row_links);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BigDataApi-&gt;createBigDataRowsLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BigDataApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. archived_row_links \\SeaTable\\Client\\Base\\ArchivedRowLinks [optional]"},{"location":"clients/php/Base/Api/BigDataApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BigDataApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BigDataApi/#deletebigdatarowlinks","title":"<code>deleteBigDataRowLinks()</code>","text":"<pre><code>deleteBigDataRowLinks($base_uuid, $archived_row_links): object\n</code></pre> <p>Delete Row Links in Big Data</p> <p>This API can handle both archived and unarchived rows.</p>"},{"location":"clients/php/Base/Api/BigDataApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BigDataApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$archived_row_links = new \\SeaTable\\Client\\Base\\ArchivedRowLinks(); // \\SeaTable\\Client\\Base\\ArchivedRowLinks\n\ntry {\n    $result = $apiInstance-&gt;deleteBigDataRowLinks($base_uuid, $archived_row_links);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BigDataApi-&gt;deleteBigDataRowLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BigDataApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. archived_row_links \\SeaTable\\Client\\Base\\ArchivedRowLinks [optional]"},{"location":"clients/php/Base/Api/BigDataApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BigDataApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BigDataApi/#deletebigdatarows","title":"<code>deleteBigDataRows()</code>","text":"<pre><code>deleteBigDataRows($base_uuid, $delete_rows): object\n</code></pre> <p>Delete Rows in Big Data</p> <p>Delete rows that are currently stored the big data backend identified by their row id.</p>"},{"location":"clients/php/Base/Api/BigDataApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BigDataApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$delete_rows = new \\SeaTable\\Client\\Base\\DeleteRows(); // \\SeaTable\\Client\\Base\\DeleteRows\n\ntry {\n    $result = $apiInstance-&gt;deleteBigDataRows($base_uuid, $delete_rows);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BigDataApi-&gt;deleteBigDataRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BigDataApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. delete_rows \\SeaTable\\Client\\Base\\DeleteRows [optional]"},{"location":"clients/php/Base/Api/BigDataApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BigDataApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BigDataApi/#insertbigdatarows","title":"<code>insertBigDataRows()</code>","text":"<pre><code>insertBigDataRows($base_uuid, $insert_rows_into_big_data): object\n</code></pre> <p>Insert Rows into Big Data</p> <p>Insert rows into the big data backend.</p>"},{"location":"clients/php/Base/Api/BigDataApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BigDataApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$insert_rows_into_big_data = new \\SeaTable\\Client\\Base\\InsertRowsIntoBigData(); // \\SeaTable\\Client\\Base\\InsertRowsIntoBigData\n\ntry {\n    $result = $apiInstance-&gt;insertBigDataRows($base_uuid, $insert_rows_into_big_data);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BigDataApi-&gt;insertBigDataRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BigDataApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. insert_rows_into_big_data \\SeaTable\\Client\\Base\\InsertRowsIntoBigData [optional]"},{"location":"clients/php/Base/Api/BigDataApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BigDataApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BigDataApi/#moverowstobigdata","title":"<code>moveRowsToBigData()</code>","text":"<pre><code>moveRowsToBigData($base_uuid, $archive_view): object\n</code></pre> <p>Move Rows to Big Data</p> <p>Use an sql-like where clause to select the rows that should be moved into the big data backend.</p>"},{"location":"clients/php/Base/Api/BigDataApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BigDataApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$archive_view = new \\SeaTable\\Client\\Base\\ArchiveView(); // \\SeaTable\\Client\\Base\\ArchiveView\n\ntry {\n    $result = $apiInstance-&gt;moveRowsToBigData($base_uuid, $archive_view);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BigDataApi-&gt;moveRowsToBigData: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BigDataApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. archive_view \\SeaTable\\Client\\Base\\ArchiveView [optional]"},{"location":"clients/php/Base/Api/BigDataApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BigDataApi/#authorization_4","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/BigDataApi/#updatebigdatarows","title":"<code>updateBigDataRows()</code>","text":"<pre><code>updateBigDataRows($base_uuid, $update_rows): object\n</code></pre> <p>Update Rows in Big Data</p> <p>Update multipe rows in the big data backend identified by their row id.</p>"},{"location":"clients/php/Base/Api/BigDataApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\BigDataApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$update_rows = new \\SeaTable\\Client\\Base\\UpdateRows(); // \\SeaTable\\Client\\Base\\UpdateRows\n\ntry {\n    $result = $apiInstance-&gt;updateBigDataRows($base_uuid, $update_rows);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BigDataApi-&gt;updateBigDataRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/BigDataApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. update_rows \\SeaTable\\Client\\Base\\UpdateRows [optional]"},{"location":"clients/php/Base/Api/BigDataApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/BigDataApi/#authorization_5","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/","title":"SeaTable\\Client\\ColumnsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addSelectOption() POST /dtable-server/api/v1/dtables/{base_uuid}/column-options/ Add Single/Multiple Select Options appendColumns() POST /dtable-server/api/v1/dtables/{base_uuid}/batch-append-columns/ Append Columns deleteColumn() DELETE /dtable-server/api/v1/dtables/{base_uuid}/columns/ Delete Column deleteSelectOption() DELETE /dtable-server/api/v1/dtables/{base_uuid}/column-options/ Delete Single/Multiple Select Options insertColumn() POST /dtable-server/api/v1/dtables/{base_uuid}/columns/ Insert Column listColumns() GET /dtable-server/api/v1/dtables/{base_uuid}/columns/ List Columns updateColumn() PUT /dtable-server/api/v1/dtables/{base_uuid}/columns/ Update Column updateColumnCascade() POST /dtable-server/api/v1/dtables/{base_uuid}/column-cascade-settings/ Update Column Cascade updateSelectOption() PUT /dtable-server/api/v1/dtables/{base_uuid}/column-options/ Update Single/Multiple Select Options"},{"location":"clients/php/Base/Api/ColumnsApi/#addselectoption","title":"<code>addSelectOption()</code>","text":"<pre><code>addSelectOption($base_uuid, $add_single_multiple_select_options): object\n</code></pre> <p>Add Single/Multiple Select Options</p> <p>Once you have created a single/multiple select column, use this request to add options for it.  In the request body:  <code>table_name</code> is the name of the table;  <code>column</code> is the name or the <code>key</code> of the single/multiple select column;  <code>options</code> is an array containing the label (<code>name</code>), option color (<code>color</code>) and the color of the arrow (<code>textColor</code>):  </p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$add_single_multiple_select_options = new \\SeaTable\\Client\\Base\\AddSingleMultipleSelectOptions(); // \\SeaTable\\Client\\Base\\AddSingleMultipleSelectOptions\n\ntry {\n    $result = $apiInstance-&gt;addSelectOption($base_uuid, $add_single_multiple_select_options);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;addSelectOption: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. add_single_multiple_select_options \\SeaTable\\Client\\Base\\AddSingleMultipleSelectOptions [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#appendcolumns","title":"<code>appendColumns()</code>","text":"<pre><code>appendColumns($base_uuid, $append_columns_request): object\n</code></pre> <p>Append Columns</p> <p>Use this request to append multiple columns to your table at once. As for the request body, refer to the previous call, Insert Column, for a detailed list of column formats. These requested and optional params can be used in the request body: <code>table_name</code> is the name of your table, required. <code>columns</code> is a list of columns you'd like to append, in each object of which: *   <code>column_name</code> is the name of your new column, required; *   <code>column_type</code> is the type of your new column, required; *   <code>data</code> is the format setting of a special column, required in case. For details, refer to the call Insert Column.</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$append_columns_request = new \\SeaTable\\Client\\Base\\AppendColumnsRequest(); // \\SeaTable\\Client\\Base\\AppendColumnsRequest\n\ntry {\n    $result = $apiInstance-&gt;appendColumns($base_uuid, $append_columns_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;appendColumns: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. append_columns_request \\SeaTable\\Client\\Base\\AppendColumnsRequest [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#deletecolumn","title":"<code>deleteColumn()</code>","text":"<pre><code>deleteColumn($base_uuid, $delete_column): object\n</code></pre> <p>Delete Column</p> <p>Delete a column with its name or <code>key</code>. See the request body for detailed params.</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$delete_column = new \\SeaTable\\Client\\Base\\DeleteColumn(); // \\SeaTable\\Client\\Base\\DeleteColumn\n\ntry {\n    $result = $apiInstance-&gt;deleteColumn($base_uuid, $delete_column);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;deleteColumn: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. delete_column \\SeaTable\\Client\\Base\\DeleteColumn [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#deleteselectoption","title":"<code>deleteSelectOption()</code>","text":"<pre><code>deleteSelectOption($base_uuid, $delete_select_options): object\n</code></pre> <p>Delete Single/Multiple Select Options</p> <p>Use this request to remove single select or multiple select options that you don't need any more. Thes deleted options will be removed from the entries containing them.  In the request body:  <code>table_name</code> is the name of the table;  <code>column</code> is the name or the <code>key</code> of the single/multiple select column;  <code>option_names</code> is a list of options you'd like to delete.</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$delete_select_options = new \\SeaTable\\Client\\Base\\DeleteSelectOptions(); // \\SeaTable\\Client\\Base\\DeleteSelectOptions\n\ntry {\n    $result = $apiInstance-&gt;deleteSelectOption($base_uuid, $delete_select_options);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;deleteSelectOption: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. delete_select_options \\SeaTable\\Client\\Base\\DeleteSelectOptions [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#insertcolumn","title":"<code>insertColumn()</code>","text":"<pre><code>insertColumn($base_uuid, $insert_column_request): object\n</code></pre> <p>Insert Column</p> <p>Create a new column. You can only add one new column at the end of a table.</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$insert_column_request = new \\SeaTable\\Client\\Base\\InsertColumnRequest(); // \\SeaTable\\Client\\Base\\InsertColumnRequest | Choose which column type you want to add. If you want to add multiple columns, use the request [Append Columns](/reference/append-columns).\n\ntry {\n    $result = $apiInstance-&gt;insertColumn($base_uuid, $insert_column_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;insertColumn: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. insert_column_request \\SeaTable\\Client\\Base\\InsertColumnRequest Choose which column type you want to add. If you want to add multiple columns, use the request Append Columns. [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization_4","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#listcolumns","title":"<code>listColumns()</code>","text":"<pre><code>listColumns($table_name, $base_uuid, $view_name): object\n</code></pre> <p>List Columns</p> <p>List all the visible columns in a certain view in a table.</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$table_name = Table1; // string | The name of the table.\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$view_name = Default View; // string | The name of the view.\n\ntry {\n    $result = $apiInstance-&gt;listColumns($table_name, $base_uuid, $view_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;listColumns: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes table_name string The name of the table. base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. view_name string The name of the view. [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization_5","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#updatecolumn","title":"<code>updateColumn()</code>","text":"<pre><code>updateColumn($base_uuid, $update_column): object\n</code></pre> <p>Update Column</p> <p>Allows various changes of the column: name, column_type, freeze/unfreeze, resize, etc... <code>op_type</code> is required. The following options are available: - rename_column - modify_column_type - resize_column - move_column - freeze_column (eventuell weglassen) <code>column</code> is the name or <code>key</code> of the target column. <code>new_column_type</code> is the new type of the target column. For a list of column type params refer to the SeaTable API Parameter. Get more information about columns and column types in Models.</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$update_column = new \\SeaTable\\Client\\Base\\UpdateColumn(); // \\SeaTable\\Client\\Base\\UpdateColumn\n\ntry {\n    $result = $apiInstance-&gt;updateColumn($base_uuid, $update_column);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;updateColumn: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. update_column \\SeaTable\\Client\\Base\\UpdateColumn [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization_6","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#updatecolumncascade","title":"<code>updateColumnCascade()</code>","text":"<pre><code>updateColumnCascade($base_uuid, $body): object\n</code></pre> <p>Update Column Cascade</p> <p>After you have added at least two single select columns and have added relevant options, you can start to set the cascade relationships between these single select columns. ## What are cascade settings? With cascade settings for the single select column, you can set up a \\\"parent\\\" single select column and a \\\"child\\\" single select column, so that when you select one option in the parent, the child column will only show you the options belonging to that parent.  For example, if the parent column is \\\"continent\\\" and you've selected \\\"Europe\\\", then the child column will only show you the countries in Europe. Of course, this doesn't happen automatically - you have to set up the cascade relationship with this API request first.    ## What are the preconditions? This API request has the following preconditions:  - The table already exists (This API request cannot create a new table); - The parent and child column already exist (same as above); - The parent and child column already have options (same as above).  ## How to set up the cascade relationship? It's so easy: just like demonstrated in the example request, define the following parameters/objects and you'll get <code>success</code>:  - <code>table_name</code>: The name of the table. - <code>parent_column</code>: The 1st level of single select column's name or <code>key</code>. - <code>child_column</code>: The 2nd level of single select column's name or <code>key</code>. - <code>cascade_settings</code>: In this object, list all the child options for each parent option, like demonstrated in the example request.</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$body = array('key' =&gt; new \\stdClass); // object\n\ntry {\n    $result = $apiInstance-&gt;updateColumnCascade($base_uuid, $body);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;updateColumnCascade: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. body object [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization_7","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#updateselectoption","title":"<code>updateSelectOption()</code>","text":"<pre><code>updateSelectOption($base_uuid, $update_single_multiple_select_options): object\n</code></pre> <p>Update Single/Multiple Select Options</p> <p>Use this request to update existing single/multiple select options by changing their name and/or color.  In the request body:  <code>table_name</code> is the name of your table, required;   <code>column</code> is the name of the column, required;   <code>options</code> is a list of option objects that you would like to update, in which:  *   <code>id</code> is the ID of that option, which you can retrive with the call \\\"List Columns in A View in A Table\\\", required; *   <code>color</code> is the label's new color, optional; *   <code>name</code> is the label's new name, optional.       <code>return_options</code> gives you the possibility to get an overview of all the options you just updated, optional, <code>false</code> by default.</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ColumnsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$update_single_multiple_select_options = new \\SeaTable\\Client\\Base\\UpdateSingleMultipleSelectOptions(); // \\SeaTable\\Client\\Base\\UpdateSingleMultipleSelectOptions\n\ntry {\n    $result = $apiInstance-&gt;updateSelectOption($base_uuid, $update_single_multiple_select_options);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ColumnsApi-&gt;updateSelectOption: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ColumnsApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. update_single_multiple_select_options \\SeaTable\\Client\\Base\\UpdateSingleMultipleSelectOptions [optional]"},{"location":"clients/php/Base/Api/ColumnsApi/#return-type_8","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ColumnsApi/#authorization_8","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/LinksApi/","title":"SeaTable\\Client\\LinksApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createRowLink() POST /dtable-server/api/v1/dtables/{base_uuid}/links/ Create Row Link createRowLinks() PUT /dtable-server/api/v1/dtables/{base_uuid}/links/ Create Row Links deleteRowLink() DELETE /dtable-server/api/v1/dtables/{base_uuid}/links/ Delete Row Link listRowLinks() POST /dtable-db/api/v1/linked-records/{base_uuid} List Row Links updateRowLinks() PUT /dtable-server/api/v1/dtables/{base_uuid}/batch-update-links/ Update Row Links (Batch)"},{"location":"clients/php/Base/Api/LinksApi/#createrowlink","title":"<code>createRowLink()</code>","text":"<pre><code>createRowLink($base_uuid, $create_row_link): object\n</code></pre> <p>Create Row Link</p> <p>You can link a row to another row in the same table, or in another table in the same base. Before you use this request, you should create a link column first, and retrieve its <code>link_id</code>. This value is an attribute of a link column, and can also be retrieved from the call Get Metadata.  Check out the Models page to get more information about the structure of a link.</p>"},{"location":"clients/php/Base/Api/LinksApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\LinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$create_row_link = new \\SeaTable\\Client\\Base\\CreateRowLink(); // \\SeaTable\\Client\\Base\\CreateRowLink\n\ntry {\n    $result = $apiInstance-&gt;createRowLink($base_uuid, $create_row_link);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LinksApi-&gt;createRowLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/LinksApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. create_row_link \\SeaTable\\Client\\Base\\CreateRowLink [optional]"},{"location":"clients/php/Base/Api/LinksApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/LinksApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/LinksApi/#createrowlinks","title":"<code>createRowLinks()</code>","text":"<pre><code>createRowLinks($base_uuid, $create_row_links): object\n</code></pre> <p>Create Row Links</p> <p>Creates multiple links between one column and many others (1:n relation).  &gt; \ud83d\udea7 No support for Big Data &gt; &gt; This request does not support to add links in big data rows. There is another call supporting big data.</p>"},{"location":"clients/php/Base/Api/LinksApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\LinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$create_row_links = new \\SeaTable\\Client\\Base\\CreateRowLinks(); // \\SeaTable\\Client\\Base\\CreateRowLinks\n\ntry {\n    $result = $apiInstance-&gt;createRowLinks($base_uuid, $create_row_links);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LinksApi-&gt;createRowLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/LinksApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. create_row_links \\SeaTable\\Client\\Base\\CreateRowLinks [optional]"},{"location":"clients/php/Base/Api/LinksApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/LinksApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/LinksApi/#deleterowlink","title":"<code>deleteRowLink()</code>","text":"<pre><code>deleteRowLink($base_uuid, $delete_row_link): object\n</code></pre> <p>Delete Row Link</p> <p>Delete an existing link between two rows.</p>"},{"location":"clients/php/Base/Api/LinksApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\LinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$delete_row_link = new \\SeaTable\\Client\\Base\\DeleteRowLink(); // \\SeaTable\\Client\\Base\\DeleteRowLink\n\ntry {\n    $result = $apiInstance-&gt;deleteRowLink($base_uuid, $delete_row_link);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LinksApi-&gt;deleteRowLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/LinksApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. delete_row_link \\SeaTable\\Client\\Base\\DeleteRowLink [optional]"},{"location":"clients/php/Base/Api/LinksApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/LinksApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/LinksApi/#listrowlinks","title":"<code>listRowLinks()</code>","text":"<pre><code>listRowLinks($base_uuid, $list_row_links): object\n</code></pre> <p>List Row Links</p> <p>When you have a \\\"Link to other records\\\" column in your table and you have created some links to the current or another table, you can use this request to query each row's linked records' IDs and display values. In the request body (see example request for demonstration): - <code>table_id</code> is the ID of the table you are querying; - <code>link_column</code> is the <code>key</code> of the \\\"Link to other records\\\" column. Attention: do not use the <code>link_id</code> of the link column here. - <code>rows</code> is an array. Include the following details of each row you are querying in every object:     - <code>row_id</code> is the ID of the row you are querying;     - <code>offset</code> is the beginning number of your query. If your record is linked to multiple records, use e.g. <code>0</code> to start quering from the 1st element or e.g. <code>5</code> to start querying from the 6th element, etc. Attention: The returned list of linked rows is not ordered by its original order on the web interface, but rather by created time (<code>ctime</code>).     - <code>limit</code> lets you to set a limit to the number of records returned. Use e.g. <code>10</code> to return no more than 10 records.  In the response: - <code>row_id</code> is the ID of each linked record; - <code>display_value</code> is how this record is displayed on the web interface.      To get more information about each linked record, retrieve their <code>row_id</code> and use the Query with SQL request, for example: <code>SELECT * FROM Table2 WHERE _id IN (row_id1, row_id2, ...);</code></p>"},{"location":"clients/php/Base/Api/LinksApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\LinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$list_row_links = new \\SeaTable\\Client\\Base\\ListRowLinks(); // \\SeaTable\\Client\\Base\\ListRowLinks\n\ntry {\n    $result = $apiInstance-&gt;listRowLinks($base_uuid, $list_row_links);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LinksApi-&gt;listRowLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/LinksApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. list_row_links \\SeaTable\\Client\\Base\\ListRowLinks [optional]"},{"location":"clients/php/Base/Api/LinksApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/LinksApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/LinksApi/#updaterowlinks","title":"<code>updateRowLinks()</code>","text":"<pre><code>updateRowLinks($base_uuid, $update_links): object\n</code></pre> <p>Update Row Links (Batch)</p> <p>Update multiple links in batch in one table for one link column. It is possible to create multiple links with a n:m relation. Here is an example how the body with <code>row_id_list</code> and <code>other_rows_ids_map</code> should look like:  <code>\\\"row_id_list\\\": [         \\\"Qtf7xPmoRaiFyQPO1aENTjb\\\",         \\\"Qtf7xPmoRaiFyQPO1aENTjc\\\"     ],     \\\"other_rows_ids_map\\\": {         \\\"Qtf7xPmoRaiFyQPO1aENTjb\\\": [\\\"Qtf7xPmoRaiFyQPO1aENTjc\\\", \\\"{{row3_id}}\\\"],         \\\"Qtf7xPmoRaiFyQPO1aENTjc\\\": [\\\"Qtf7xPmoRaiFyQPO1aENTjb\\\", \\\"{{row3_id}}\\\"]     }</code></p>"},{"location":"clients/php/Base/Api/LinksApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\LinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$update_links = new \\SeaTable\\Client\\Base\\UpdateLinks(); // \\SeaTable\\Client\\Base\\UpdateLinks\n\ntry {\n    $result = $apiInstance-&gt;updateRowLinks($base_uuid, $update_links);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LinksApi-&gt;updateRowLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/LinksApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. update_links \\SeaTable\\Client\\Base\\UpdateLinks [optional]"},{"location":"clients/php/Base/Api/LinksApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/LinksApi/#authorization_4","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/NotificationsApi/","title":"SeaTable\\Client\\NotificationsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteBaseNotifications() DELETE /dtable-server/api/v1/dtables/{base_uuid}/notifications/ Delete Base Notifications listBaseNotifications() GET /dtable-server/api/v1/dtables/{base_uuid}/notifications/ List Base Notifications markBaseNotificationAsSeen() PUT /dtable-server/api/v1/dtables/{base_uuid}/notifications/{notification_id}/ Mark Notification Read/Unread markBaseNotificationsAsSeen() PUT /dtable-server/api/v1/dtables/{base_uuid}/notifications/ Mark Base Notifications as seen"},{"location":"clients/php/Base/Api/NotificationsApi/#deletebasenotifications","title":"<code>deleteBaseNotifications()</code>","text":"<pre><code>deleteBaseNotifications($base_uuid): object\n</code></pre> <p>Delete Base Notifications</p> <p>Delete all the notifications in the current base irrevocably.</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;deleteBaseNotifications($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;deleteBaseNotifications: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/NotificationsApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/Base/Api/NotificationsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#listbasenotifications","title":"<code>listBaseNotifications()</code>","text":"<pre><code>listBaseNotifications($base_uuid): object\n</code></pre> <p>List Base Notifications</p> <p>List all the notifications, read or unread, in a base.</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;listBaseNotifications($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;listBaseNotifications: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/NotificationsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/Base/Api/NotificationsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#markbasenotificationasseen","title":"<code>markBaseNotificationAsSeen()</code>","text":"<pre><code>markBaseNotificationAsSeen($base_uuid, $notification_id, $seen): object\n</code></pre> <p>Mark Notification Read/Unread</p> <p>Mark a specific notification as read or unread.</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$notification_id = 1; // int | The id of the notification.\n$seen = True; // bool | `true` to mark as \\\\\\\"seen\\\\\\\" and `false` as \\\\\\\"unseen\\\\\\\".\n\ntry {\n    $result = $apiInstance-&gt;markBaseNotificationAsSeen($base_uuid, $notification_id, $seen);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;markBaseNotificationAsSeen: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/NotificationsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. notification_id int The id of the notification. seen bool `true` to mark as \\\\\"seen\\\\\" and `false` as \\\\\"unseen\\\\\". [optional]"},{"location":"clients/php/Base/Api/NotificationsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#markbasenotificationsasseen","title":"<code>markBaseNotificationsAsSeen()</code>","text":"<pre><code>markBaseNotificationsAsSeen($base_uuid, $seen): object\n</code></pre> <p>Mark Base Notifications as seen</p> <p>Use this request to mark all the notifications as read.</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$seen = True; // bool | true or false for read or unread. Otherwise invalid.\n\ntry {\n    $result = $apiInstance-&gt;markBaseNotificationsAsSeen($base_uuid, $seen);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;markBaseNotificationsAsSeen: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/NotificationsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. seen bool true or false for read or unread. Otherwise invalid. [optional]"},{"location":"clients/php/Base/Api/NotificationsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/NotificationsApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/","title":"SeaTable\\Client\\RowCommentsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteComment() DELETE /dtable-server/api/v1/dtables/{base_uuid}/comments/{comment_id}/ Delete Comment getComment() GET /dtable-server/api/v1/dtables/{base_uuid}/comments/{comment_id}/ Get Comment getRowCommentsCount() GET /dtable-server/api/v1/dtables/{base_uuid}/comments-count/ Get Row Comments Count listCommentsWithinDays() GET /dtable-server/api/v1/dtables/{base_uuid}/comments-within-days/ List Comments within Days listRowComments() GET /dtable-server/api/v1/dtables/{base_uuid}/comments/ List Row Comments"},{"location":"clients/php/Base/Api/RowCommentsApi/#deletecomment","title":"<code>deleteComment()</code>","text":"<pre><code>deleteComment($base_uuid, $comment_id): object\n</code></pre> <p>Delete Comment</p> <p>Delete a certain comment by its ID.</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowCommentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$comment_id = 1; // int | The id of the comment.\n\ntry {\n    $result = $apiInstance-&gt;deleteComment($base_uuid, $comment_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowCommentsApi-&gt;deleteComment: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowCommentsApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. comment_id int The id of the comment."},{"location":"clients/php/Base/Api/RowCommentsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#getcomment","title":"<code>getComment()</code>","text":"<pre><code>getComment($base_uuid, $comment_id): object\n</code></pre> <p>Get Comment</p> <p>Get the details of a certain comment with its ID.</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowCommentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$comment_id = 1; // int | The id of the comment.\n\ntry {\n    $result = $apiInstance-&gt;getComment($base_uuid, $comment_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowCommentsApi-&gt;getComment: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowCommentsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. comment_id int The id of the comment."},{"location":"clients/php/Base/Api/RowCommentsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#getrowcommentscount","title":"<code>getRowCommentsCount()</code>","text":"<pre><code>getRowCommentsCount($base_uuid, $row_id): object\n</code></pre> <p>Get Row Comments Count</p> <p>Get the number of comments in a certain row. This could be a useful request to check if there's new comments there.</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowCommentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$row_id = YMIviMeERQCUiQhPPqo6Gw; // string | Unique id of a row.\n\ntry {\n    $result = $apiInstance-&gt;getRowCommentsCount($base_uuid, $row_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowCommentsApi-&gt;getRowCommentsCount: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowCommentsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. row_id string Unique id of a row."},{"location":"clients/php/Base/Api/RowCommentsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#listcommentswithindays","title":"<code>listCommentsWithinDays()</code>","text":"<pre><code>listCommentsWithinDays($base_uuid, $days): object\n</code></pre> <p>List Comments within Days</p> <p>List all the comments in a base within a given number of days before today.</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowCommentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$days = 7; // int\n\ntry {\n    $result = $apiInstance-&gt;listCommentsWithinDays($base_uuid, $days);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowCommentsApi-&gt;listCommentsWithinDays: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowCommentsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. days int [optional]"},{"location":"clients/php/Base/Api/RowCommentsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#listrowcomments","title":"<code>listRowComments()</code>","text":"<pre><code>listRowComments($base_uuid, $row_id): object\n</code></pre> <p>List Row Comments</p> <p>List all the comments in a certain row. The returned <code>id</code> value is the ID of each comment.</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowCommentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$row_id = YMIviMeERQCUiQhPPqo6Gw; // string | Unique id of a row.\n\ntry {\n    $result = $apiInstance-&gt;listRowComments($base_uuid, $row_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowCommentsApi-&gt;listRowComments: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowCommentsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. row_id string Unique id of a row."},{"location":"clients/php/Base/Api/RowCommentsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowCommentsApi/#authorization_4","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/","title":"SeaTable\\Client\\RowsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addRow() POST /dtable-server/api/v1/dtables/{base_uuid}/rows/ Add Row appendRows() POST /dtable-server/api/v1/dtables/{base_uuid}/batch-append-rows/ Append Rows deleteRow() DELETE /dtable-server/api/v1/dtables/{base_uuid}/rows/ Delete Row deleteRows() DELETE /dtable-server/api/v1/dtables/{base_uuid}/batch-delete-rows/ Delete Rows getRow() GET /dtable-server/api/v1/dtables/{base_uuid}/rows/{row_id}/ Get Row listFilteredRows() GET /dtable-server/api/v1/dtables/{base_uuid}/filtered-rows/ List Filtered Rows listRows() GET /dtable-server/api/v1/dtables/{base_uuid}/rows/ List Rows lockRows() PUT /dtable-server/api/v1/dtables/{base_uuid}/lock-rows/ Lock Rows querySQL() POST /dtable-db/api/v1/query/{base_uuid}/ List Rows (with SQL) unlockRows() PUT /dtable-server/api/v1/dtables/{base_uuid}/unlock-rows/ Unlock Rows updateRow() PUT /dtable-server/api/v1/dtables/{base_uuid}/rows/ Update Row updateRows() PUT /dtable-server/api/v1/dtables/{base_uuid}/batch-update-rows/ Update Rows"},{"location":"clients/php/Base/Api/RowsApi/#addrow","title":"<code>addRow()</code>","text":"<pre><code>addRow($base_uuid, $add_row_request): object\n</code></pre> <p>Add Row</p> <p>Appends or inserts a single row.  &gt; \ud83d\udcd8 How to define the row object &gt;  &gt; The row object contains key:value pairs with the column name as key and the desired values. Check the page Models to get a better understanding of the row object.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$add_row_request = new \\SeaTable\\Client\\Base\\AddRowRequest(); // \\SeaTable\\Client\\Base\\AddRowRequest\n\ntry {\n    $result = $apiInstance-&gt;addRow($base_uuid, $add_row_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;addRow: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. add_row_request \\SeaTable\\Client\\Base\\AddRowRequest [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#appendrows","title":"<code>appendRows()</code>","text":"<pre><code>appendRows($base_uuid, $append_rows): object\n</code></pre> <p>Append Rows</p> <p>Appends multiple rows.  &gt; \ud83d\udea7 Appends at most 1 000 rows &gt; &gt; A maximum of 1 000 rows can be appended with a single request.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$append_rows = new \\SeaTable\\Client\\Base\\AppendRows(); // \\SeaTable\\Client\\Base\\AppendRows\n\ntry {\n    $result = $apiInstance-&gt;appendRows($base_uuid, $append_rows);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;appendRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. append_rows \\SeaTable\\Client\\Base\\AppendRows [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#deleterow","title":"<code>deleteRow()</code>","text":"<pre><code>deleteRow($base_uuid, $delete_row): object\n</code></pre> <p>Delete Row</p> <p>Deletes a single row.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$delete_row = new \\SeaTable\\Client\\Base\\DeleteRow(); // \\SeaTable\\Client\\Base\\DeleteRow\n\ntry {\n    $result = $apiInstance-&gt;deleteRow($base_uuid, $delete_row);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;deleteRow: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. delete_row \\SeaTable\\Client\\Base\\DeleteRow [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#deleterows","title":"<code>deleteRows()</code>","text":"<pre><code>deleteRows($base_uuid, $delete_rows): object\n</code></pre> <p>Delete Rows</p> <p>Deletes multiple rows. &gt; \ud83d\udea7 Deletes at most 10 000 rows &gt; &gt; A maximum of 10 000 rows can be deleted with a single request.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$delete_rows = new \\SeaTable\\Client\\Base\\DeleteRows(); // \\SeaTable\\Client\\Base\\DeleteRows\n\ntry {\n    $result = $apiInstance-&gt;deleteRows($base_uuid, $delete_rows);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;deleteRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. delete_rows \\SeaTable\\Client\\Base\\DeleteRows [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#getrow","title":"<code>getRow()</code>","text":"<pre><code>getRow($base_uuid, $row_id, $table_name, $convert): object\n</code></pre> <p>Get Row</p> <p>Retrieves a single row.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$row_id = Qtf7xPmoRaiFyQPO1aENTjb; // string | The id of the row.\n$table_name = Table1; // string | The name of the table.\n$convert = true; // bool | If 'true', the column's id will be converted to column names.\n\ntry {\n    $result = $apiInstance-&gt;getRow($base_uuid, $row_id, $table_name, $convert);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;getRow: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. row_id string The id of the row. table_name string The name of the table. convert bool If 'true', the column's id will be converted to column names. [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_4","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#listfilteredrows","title":"<code>listFilteredRows()</code>","text":"<pre><code>listFilteredRows($base_uuid, $table_name, $filtered_rows_filter)\n</code></pre> <p>List Filtered Rows</p> <p>List rows by filter conditions. This is especially useful when you want to filter out records and only see those records. &gt; \ud83d\udea7 Deprecated since version 2.3 &gt;  &gt; This request has been depricated since SeaTable 2.3. This means you can probably still use it, but it will not be maintained and will probably be removed/deactivated any time without further notice in the future. &gt; Please use List rows (with SQL) or List rows instead.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$table_name = Table1; // string | The name of the table.\n$filtered_rows_filter = new \\SeaTable\\Client\\Base\\FilteredRowsFilter(); // \\SeaTable\\Client\\Base\\FilteredRowsFilter\n\ntry {\n    $apiInstance-&gt;listFilteredRows($base_uuid, $table_name, $filtered_rows_filter);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;listFilteredRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. table_name string The name of the table. filtered_rows_filter \\SeaTable\\Client\\Base\\FilteredRowsFilter [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_5","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_5","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#listrows","title":"<code>listRows()</code>","text":"<pre><code>listRows($base_uuid, $table_name, $view_name, $convert_link_id, $order_by, $direction, $start, $limit): object\n</code></pre> <p>List Rows</p> <p>Lists rows in a table (or in a view if provided), ordered according to the filter conditions and sort criteria provided in the request.   &gt; \ud83d\udcd8 Returns no data from the big data backend &gt;  &gt; This request does not return rows stored in the big data backend. To query the big data backend, use the request List Rows (with SQL) instead.  &gt; \ud83d\udea7 Returns at most 1 000 rows &gt; &gt; The request returns a maximum of 1 000 rows regardless of the limit specified in the SQL-statement.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$table_name = Table1; // string | The name of the table.\n$view_name = Default View; // string | The name of the view.\n$convert_link_id = false; // bool | Whether the link column in the returned row is the ID (false) of the linked row or the name (true) of the linked row. If no value is provided, false is the default.\n$order_by = Likes; // string | The name or id of a column that is used to sort the results.\n$direction = desc; // string | The direction of the sort, ascending `asc` or descending `desc`. asc by default. Works only if start and limit are set, too.\n$start = 0; // int | Starting position (number) of the returned rows. 0 by default.\n$limit = 100; // int | Number of rows that should be returned. 1000 by default.\n\ntry {\n    $result = $apiInstance-&gt;listRows($base_uuid, $table_name, $view_name, $convert_link_id, $order_by, $direction, $start, $limit);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;listRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. table_name string The name of the table. view_name string The name of the view. [optional] convert_link_id bool Whether the link column in the returned row is the ID (false) of the linked row or the name (true) of the linked row. If no value is provided, false is the default. [optional] order_by string The name or id of a column that is used to sort the results. [optional] direction string The direction of the sort, ascending `asc` or descending `desc`. asc by default. Works only if start and limit are set, too. [optional] [default to ''] start int Starting position (number) of the returned rows. 0 by default. [optional] limit int Number of rows that should be returned. 1000 by default. [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_6","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#lockrows","title":"<code>lockRows()</code>","text":"<pre><code>lockRows($base_uuid, $table_with_row_ids): object\n</code></pre> <p>Lock Rows</p> <p>Locks a single or multiple rows.   The request ensures that all specified rows are locked. Locked rows are ignored.  &gt; \ud83d\udcd8 Advanced feature &gt;  &gt; Row locking is only available in SeaTable Cloud Plus and Enterprise as well as SeaTable Server Enterprise Edition.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$table_with_row_ids = new \\SeaTable\\Client\\Base\\TableWithRowIds(); // \\SeaTable\\Client\\Base\\TableWithRowIds\n\ntry {\n    $result = $apiInstance-&gt;lockRows($base_uuid, $table_with_row_ids);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;lockRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. table_with_row_ids \\SeaTable\\Client\\Base\\TableWithRowIds [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_7","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#querysql","title":"<code>querySQL()</code>","text":"<pre><code>querySQL($base_uuid, $sql_query): \\SeaTable\\Client\\Base\\SqlQueryResponse\n</code></pre> <p>List Rows (with SQL)</p> <p>Lists rows in a table based on an SQL-query provided in the request. Also returns the metadata of the table.  Typical SQL-statements are supported. Below some basic examples: <code>SELECT name, age, birthday, gender FROM Participants</code> <code>SELECT name, surname FROM Participants ORDER BY name</code> <code>SELECT * FROM Participants LIMIT 25</code> For more details, check the SQL-syntax supported by SeaTable.  &gt; \ud83d\udcd8 Returns also data from the big data backend &gt;  &gt; This request is the only available endpoint that returns rows stored in the big data backend.   &gt; \ud83d\udea7 Returns at most 10 000 rows &gt; &gt; The request returns a maximum of 10 000 rows regardless of the limit specified in the SQL-statement.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$sql_query = new \\SeaTable\\Client\\Base\\SqlQuery(); // \\SeaTable\\Client\\Base\\SqlQuery | description des requestBody\n\ntry {\n    $result = $apiInstance-&gt;querySQL($base_uuid, $sql_query);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;querySQL: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. sql_query \\SeaTable\\Client\\Base\\SqlQuery description des requestBody [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_8","title":"Return type","text":"<p>\\SeaTable\\Client\\Base\\SqlQueryResponse</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_8","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#unlockrows","title":"<code>unlockRows()</code>","text":"<pre><code>unlockRows($base_uuid, $table_with_row_ids): object\n</code></pre> <p>Unlock Rows</p> <p>Unlocks a single or multiple rows.  The request ensures that all specified rows are unlocked. Unlocked rows are ignored.  &gt; \ud83d\udcd8 Advanced feature &gt;  &gt; Row locking is only available in SeaTable Cloud Plus and Enterprise as well as SeaTable Server Enterprise Edition.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_9","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$table_with_row_ids = new \\SeaTable\\Client\\Base\\TableWithRowIds(); // \\SeaTable\\Client\\Base\\TableWithRowIds\n\ntry {\n    $result = $apiInstance-&gt;unlockRows($base_uuid, $table_with_row_ids);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;unlockRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. table_with_row_ids \\SeaTable\\Client\\Base\\TableWithRowIds [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_9","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_9","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#updaterow","title":"<code>updateRow()</code>","text":"<pre><code>updateRow($base_uuid, $update_row): object\n</code></pre> <p>Update Row</p> <p>Updates a single row.  &gt; \ud83d\udcd8 Structure of the row object &gt;  &gt; The row object contains key:value pairs with the column name as key and the desired values. Check the page Models to get a better understanding of the row object.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_10","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$update_row = new \\SeaTable\\Client\\Base\\UpdateRow(); // \\SeaTable\\Client\\Base\\UpdateRow\n\ntry {\n    $result = $apiInstance-&gt;updateRow($base_uuid, $update_row);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;updateRow: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. update_row \\SeaTable\\Client\\Base\\UpdateRow [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_10","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_10","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/RowsApi/#updaterows","title":"<code>updateRows()</code>","text":"<pre><code>updateRows($base_uuid, $update_rows): object\n</code></pre> <p>Update Rows</p> <p>Updates multiple rows. &gt; \ud83d\udea7 Updates at most 1 000 rows &gt; &gt; A maximum of 1 000 rows can be updated with a single request.</p>"},{"location":"clients/php/Base/Api/RowsApi/#example_11","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\RowsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$update_rows = new \\SeaTable\\Client\\Base\\UpdateRows(); // \\SeaTable\\Client\\Base\\UpdateRows\n\ntry {\n    $result = $apiInstance-&gt;updateRows($base_uuid, $update_rows);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling RowsApi-&gt;updateRows: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/RowsApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. update_rows \\SeaTable\\Client\\Base\\UpdateRows [optional]"},{"location":"clients/php/Base/Api/RowsApi/#return-type_11","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/RowsApi/#authorization_11","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/SnapshotsApi/","title":"SeaTable\\Client\\SnapshotsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createSnapshot() POST /dtable-server/api/v1/dtables/{base_uuid}/snapshot/ Create Snapshot"},{"location":"clients/php/Base/Api/SnapshotsApi/#createsnapshot","title":"<code>createSnapshot()</code>","text":"<pre><code>createSnapshot($base_uuid, $generate_snapshot): object\n</code></pre> <p>Create Snapshot</p> <p>Creates a snapshot for the current base. The pre-conditions are, that there's at least one change since the last snapshot and at least 10 minutes have passed.  To get a list of already existing snapshots, use the the request List Snapshots.</p>"},{"location":"clients/php/Base/Api/SnapshotsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\SnapshotsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$generate_snapshot = new \\SeaTable\\Client\\Base\\GenerateSnapshot(); // \\SeaTable\\Client\\Base\\GenerateSnapshot\n\ntry {\n    $result = $apiInstance-&gt;createSnapshot($base_uuid, $generate_snapshot);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SnapshotsApi-&gt;createSnapshot: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/SnapshotsApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. generate_snapshot \\SeaTable\\Client\\Base\\GenerateSnapshot [optional]"},{"location":"clients/php/Base/Api/SnapshotsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/SnapshotsApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/TablesApi/","title":"SeaTable\\Client\\TablesApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createTable() POST /dtable-server/api/v1/dtables/{base_uuid}/tables/ Create Table deleteTable() DELETE /dtable-server/api/v1/dtables/{base_uuid}/tables/ Delete Table duplicateTable() POST /dtable-server/api/v1/dtables/{base_uuid}/tables/duplicate-table/ Duplicate Table renameTable() PUT /dtable-server/api/v1/dtables/{base_uuid}/tables/ Rename Table"},{"location":"clients/php/Base/Api/TablesApi/#createtable","title":"<code>createTable()</code>","text":"<pre><code>createTable($base_uuid, $create_table_request): \\SeaTable\\Client\\Base\\Base\n</code></pre> <p>Create Table</p> <p>Creates a new table in a base. Optionally, you can already add some columns to the base.  &gt; \ud83d\udcd8 The first column is special &gt; &gt; Please be aware, that the first column can only be the column type <code>text</code>, <code>number</code>, <code>date</code>, <code>single select</code>, <code>formula</code> and <code>autonumber</code>.</p>"},{"location":"clients/php/Base/Api/TablesApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\TablesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$create_table_request = new \\SeaTable\\Client\\Base\\CreateTableRequest(); // \\SeaTable\\Client\\Base\\CreateTableRequest\n\ntry {\n    $result = $apiInstance-&gt;createTable($base_uuid, $create_table_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TablesApi-&gt;createTable: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/TablesApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. create_table_request \\SeaTable\\Client\\Base\\CreateTableRequest [optional]"},{"location":"clients/php/Base/Api/TablesApi/#return-type","title":"Return type","text":"<p>\\SeaTable\\Client\\Base\\Base</p>"},{"location":"clients/php/Base/Api/TablesApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/TablesApi/#deletetable","title":"<code>deleteTable()</code>","text":"<pre><code>deleteTable($base_uuid, $delete_table): object\n</code></pre> <p>Delete Table</p> <p>Delete an existing table identified by its name.</p>"},{"location":"clients/php/Base/Api/TablesApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\TablesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$delete_table = new \\SeaTable\\Client\\Base\\DeleteTable(); // \\SeaTable\\Client\\Base\\DeleteTable\n\ntry {\n    $result = $apiInstance-&gt;deleteTable($base_uuid, $delete_table);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TablesApi-&gt;deleteTable: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/TablesApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. delete_table \\SeaTable\\Client\\Base\\DeleteTable [optional]"},{"location":"clients/php/Base/Api/TablesApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/TablesApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/TablesApi/#duplicatetable","title":"<code>duplicateTable()</code>","text":"<pre><code>duplicateTable($base_uuid, $duplicate_table): object\n</code></pre> <p>Duplicate Table</p> <p>Duplicate an existing table in your base with or without the existing data in it.  &gt; \ud83d\udea7 Rename the table in a second step &gt; &gt; If you duplicate one table, the name of this new table will always be the same like the original one plus the appendix (copy). To rename the table, you will need another call.</p>"},{"location":"clients/php/Base/Api/TablesApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\TablesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$duplicate_table = new \\SeaTable\\Client\\Base\\DuplicateTable(); // \\SeaTable\\Client\\Base\\DuplicateTable\n\ntry {\n    $result = $apiInstance-&gt;duplicateTable($base_uuid, $duplicate_table);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TablesApi-&gt;duplicateTable: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/TablesApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. duplicate_table \\SeaTable\\Client\\Base\\DuplicateTable [optional]"},{"location":"clients/php/Base/Api/TablesApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/TablesApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/TablesApi/#renametable","title":"<code>renameTable()</code>","text":"<pre><code>renameTable($base_uuid, $rename_table): object\n</code></pre> <p>Rename Table</p> <p>Rename a table by providing it's original <code>table_name</code> and the desired <code>new_table_name</code>.</p>"},{"location":"clients/php/Base/Api/TablesApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\TablesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$rename_table = new \\SeaTable\\Client\\Base\\RenameTable(); // \\SeaTable\\Client\\Base\\RenameTable\n\ntry {\n    $result = $apiInstance-&gt;renameTable($base_uuid, $rename_table);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TablesApi-&gt;renameTable: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/TablesApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. rename_table \\SeaTable\\Client\\Base\\RenameTable [optional]"},{"location":"clients/php/Base/Api/TablesApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/TablesApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ViewsApi/","title":"SeaTable\\Client\\ViewsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createView() POST /dtable-server/api/v1/dtables/{base_uuid}/views/ Create View deleteView() DELETE /dtable-server/api/v1/dtables/{base_uuid}/views/{view_name}/ Delete View getView() GET /dtable-server/api/v1/dtables/{base_uuid}/views/{view_name}/ Get View listViews() GET /dtable-server/api/v1/dtables/{base_uuid}/views/ List Views updateView() PUT /dtable-server/api/v1/dtables/{base_uuid}/views/{view_name}/ Update View"},{"location":"clients/php/Base/Api/ViewsApi/#createview","title":"<code>createView()</code>","text":"<pre><code>createView($base_uuid, $table_name, $new_view): object\n</code></pre> <p>Create View</p> <p>Create a new view in the current table. In the request body, use <code>name</code> for the name of the new view. After creating the new view, use the request Update View to further define your view.</p>"},{"location":"clients/php/Base/Api/ViewsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ViewsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$table_name = Table1; // string | The name of the table.\n$new_view = new \\SeaTable\\Client\\Base\\NewView(); // \\SeaTable\\Client\\Base\\NewView\n\ntry {\n    $result = $apiInstance-&gt;createView($base_uuid, $table_name, $new_view);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ViewsApi-&gt;createView: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ViewsApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. table_name string The name of the table. new_view \\SeaTable\\Client\\Base\\NewView [optional]"},{"location":"clients/php/Base/Api/ViewsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ViewsApi/#authorization","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ViewsApi/#deleteview","title":"<code>deleteView()</code>","text":"<pre><code>deleteView($base_uuid, $view_name, $table_name): object\n</code></pre> <p>Delete View</p> <p>Delete a view by its name.</p>"},{"location":"clients/php/Base/Api/ViewsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ViewsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$view_name = Default View; // string | The name of the view.\n$table_name = Table1; // string | The name of the table.\n\ntry {\n    $result = $apiInstance-&gt;deleteView($base_uuid, $view_name, $table_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ViewsApi-&gt;deleteView: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ViewsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. view_name string The name of the view. table_name string The name of the table."},{"location":"clients/php/Base/Api/ViewsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ViewsApi/#authorization_1","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ViewsApi/#getview","title":"<code>getView()</code>","text":"<pre><code>getView($base_uuid, $view_name, $table_name): object\n</code></pre> <p>Get View</p> <p>Get the detailed settings of a view by its name.</p>"},{"location":"clients/php/Base/Api/ViewsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ViewsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$view_name = Default View; // string | The name of the view.\n$table_name = Table1; // string | The name of the table.\n\ntry {\n    $result = $apiInstance-&gt;getView($base_uuid, $view_name, $table_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ViewsApi-&gt;getView: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ViewsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. view_name string The name of the view. table_name string The name of the table."},{"location":"clients/php/Base/Api/ViewsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ViewsApi/#authorization_2","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ViewsApi/#listviews","title":"<code>listViews()</code>","text":"<pre><code>listViews($base_uuid, $table_name): object\n</code></pre> <p>List Views</p> <p>List all the views and their settings in a table.</p>"},{"location":"clients/php/Base/Api/ViewsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ViewsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$table_name = Table1; // string | The name of the table.\n\ntry {\n    $result = $apiInstance-&gt;listViews($base_uuid, $table_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ViewsApi-&gt;listViews: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ViewsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. table_name string The name of the table."},{"location":"clients/php/Base/Api/ViewsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ViewsApi/#authorization_3","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Api/ViewsApi/#updateview","title":"<code>updateView()</code>","text":"<pre><code>updateView($base_uuid, $view_name, $table_name, $update_view): object\n</code></pre> <p>Update View</p> <p>Change the settings of a current view by its name. All parameters are optional.   If you don't define a parameter, existing settings for this parameter will not be changed.  To remove existing filters, sortings or groups you have to send an empty object like this: <code>\\\"sorts\\\": [{}]</code></p>"},{"location":"clients/php/Base/Api/ViewsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: BaseTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\Base\\ViewsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$view_name = Default View; // string | The name of the view.\n$table_name = Table1; // string | The name of the table.\n$update_view = new \\SeaTable\\Client\\Base\\UpdateView(); // \\SeaTable\\Client\\Base\\UpdateView\n\ntry {\n    $result = $apiInstance-&gt;updateView($base_uuid, $view_name, $table_name, $update_view);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ViewsApi-&gt;updateView: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/Base/Api/ViewsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. view_name string The name of the view. table_name string The name of the table. update_view \\SeaTable\\Client\\Base\\UpdateView [optional]"},{"location":"clients/php/Base/Api/ViewsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/Base/Api/ViewsApi/#authorization_4","title":"Authorization","text":"<p>BaseTokenAuth</p>"},{"location":"clients/php/Base/Model/AddRowRequest/","title":"# AddRowRequest","text":""},{"location":"clients/php/Base/Model/AddRowRequest/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. row object Pass the set of column names and their values. The column names must be present in your table. Different column types require different ways to input values. For eg: anchor_row_id string Id of the row the new row should be added next to [optional] row_insert_position string Defines if the new row is added below or above anchor row. If this parameter is left blank, `insert_below` is taken as default value. [optional]"},{"location":"clients/php/Base/Model/AddSingleMultipleSelectOptions/","title":"# AddSingleMultipleSelectOptions","text":""},{"location":"clients/php/Base/Model/AddSingleMultipleSelectOptions/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. [optional] column string The name of the column. [optional] options \\SeaTable\\Client\\Base\\AddSingleMultipleSelectOptionsOptionsInner[] [optional]"},{"location":"clients/php/Base/Model/AddSingleMultipleSelectOptionsOptionsInner/","title":"# AddSingleMultipleSelectOptionsOptionsInner","text":""},{"location":"clients/php/Base/Model/AddSingleMultipleSelectOptionsOptionsInner/#properties","title":"Properties","text":"Name Type Description Notes name string [optional] color string [optional] text_color string [optional]"},{"location":"clients/php/Base/Model/AppendColumnsRequest/","title":"# AppendColumnsRequest","text":""},{"location":"clients/php/Base/Model/AppendColumnsRequest/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. [optional] columns \\SeaTable\\Client\\Base\\CreateTableRequestColumnsInner[] [optional]"},{"location":"clients/php/Base/Model/AppendRow/","title":"# AppendRow","text":""},{"location":"clients/php/Base/Model/AppendRow/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. row object Pass the set of column names and their values. The column names must be present in your table. Different column types require different ways to input values. For eg:"},{"location":"clients/php/Base/Model/AppendRows/","title":"# AppendRows","text":""},{"location":"clients/php/Base/Model/AppendRows/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. rows object[] Defines the rows which should be added."},{"location":"clients/php/Base/Model/ArchiveView/","title":"# ArchiveView","text":""},{"location":"clients/php/Base/Model/ArchiveView/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. where string Use an sql-like clause to select the rows you want to archive. If not set, all rows in the table will be archived.  More examples are: &lt;br/&gt; \\`Name\\` = 'Michael' &lt;br/&gt; \\`Gender\\` != 'Michael' &lt;br/&gt; \\`Name of the column\\` ilike '%error%' [optional]"},{"location":"clients/php/Base/Model/ArchivedRowLinks/","title":"# ArchivedRowLinks","text":""},{"location":"clients/php/Base/Model/ArchivedRowLinks/#properties","title":"Properties","text":"Name Type Description Notes table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. other_table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. link_id string Every link column has a `key` and `link_id` in the column object. Use Get Metadata or Get Base Info to get this `link_id`. Don't use the `key` of the link column. other_rows_ids_map array Map of IDs of the target rows which you'd like to link/unlink your source rows. Use a key-to-list like: ``` \\\"other_rows_ids_map\\\": {   \\\"&lt;row1 of table&gt;\\\": [\\\"&lt;row1 of other_table&gt;\\\", \\\"&lt;row2 of other_table&gt;\\\"],   \\\"&lt;row2 of table&gt;\\\": [\\\"&lt;row3 of other_table&gt;\\\"] } ```"},{"location":"clients/php/Base/Model/AutomaticFilterPredicate/","title":"# AutomaticFilterPredicate","text":""},{"location":"clients/php/Base/Model/AutomaticFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/AutonumberColumn/","title":"# AutonumberColumn","text":""},{"location":"clients/php/Base/Model/AutonumberColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\AutonumberColumnFormat [optional]"},{"location":"clients/php/Base/Model/AutonumberColumnFormat/","title":"# AutonumberColumnFormat","text":""},{"location":"clients/php/Base/Model/AutonumberColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes format string"},{"location":"clients/php/Base/Model/AutonumberColumnWithTableName/","title":"# AutonumberColumnWithTableName","text":""},{"location":"clients/php/Base/Model/AutonumberColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\AutonumberColumnFormat [optional]"},{"location":"clients/php/Base/Model/Base/","title":"# Base","text":""},{"location":"clients/php/Base/Model/Base/#properties","title":"Properties","text":"Name Type Description Notes _id string [optional] name string [optional] is_header_locked bool [optional] summary_configs object [optional] columns object [optional] rows string[] [optional] views object [optional] id_row_map object [optional]"},{"location":"clients/php/Base/Model/BaseMetadata/","title":"# BaseMetadata","text":""},{"location":"clients/php/Base/Model/BaseMetadata/#properties","title":"Properties","text":"Name Type Description Notes key string [optional] name string [optional] type string [optional] data \\SeaTable\\Client\\Base\\BaseMetadataData [optional]"},{"location":"clients/php/Base/Model/BaseMetadataData/","title":"# BaseMetadataData","text":""},{"location":"clients/php/Base/Model/BaseMetadataData/#properties","title":"Properties","text":"Name Type Description Notes default_value string [optional] enable_fill_default_value string [optional]"},{"location":"clients/php/Base/Model/ButtonColumn/","title":"# ButtonColumn","text":""},{"location":"clients/php/Base/Model/ButtonColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\ButtonColumnFormat"},{"location":"clients/php/Base/Model/ButtonColumnFormat/","title":"# ButtonColumnFormat","text":""},{"location":"clients/php/Base/Model/ButtonColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes button_type string button_name string button_color string table_id string id of the target table, if `copy_row_to_another_table` is selected. [optional] script_id string [optional] selected_columns \\SeaTable\\Client\\Base\\ButtonColumnFormatSelectedColumnsInner[] [optional]"},{"location":"clients/php/Base/Model/ButtonColumnFormatSelectedColumnsInner/","title":"# ButtonColumnFormatSelectedColumnsInner","text":""},{"location":"clients/php/Base/Model/ButtonColumnFormatSelectedColumnsInner/#properties","title":"Properties","text":"Name Type Description Notes key string [optional] value string [optional]"},{"location":"clients/php/Base/Model/ButtonColumnWithTableName/","title":"# ButtonColumnWithTableName","text":""},{"location":"clients/php/Base/Model/ButtonColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\ButtonColumnFormat"},{"location":"clients/php/Base/Model/CheckboxColumn/","title":"# CheckboxColumn","text":""},{"location":"clients/php/Base/Model/CheckboxColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/CheckboxColumnWithTableName/","title":"# CheckboxColumnWithTableName","text":""},{"location":"clients/php/Base/Model/CheckboxColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/CheckboxFilterPredicate/","title":"# CheckboxFilterPredicate","text":""},{"location":"clients/php/Base/Model/CheckboxFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/CollaboratorColumn/","title":"# CollaboratorColumn","text":""},{"location":"clients/php/Base/Model/CollaboratorColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/CollaboratorColumnWithTableName/","title":"# CollaboratorColumnWithTableName","text":""},{"location":"clients/php/Base/Model/CollaboratorColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/CollaboratorFilterPredicate/","title":"# CollaboratorFilterPredicate","text":""},{"location":"clients/php/Base/Model/CollaboratorFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/CreateRowComment/","title":"# CreateRowComment","text":""},{"location":"clients/php/Base/Model/CreateRowComment/#properties","title":"Properties","text":"Name Type Description Notes comment string [optional]"},{"location":"clients/php/Base/Model/CreateRowLink/","title":"# CreateRowLink","text":""},{"location":"clients/php/Base/Model/CreateRowLink/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. other_table_name string The name of the table. link_id string Every link column has a `key` and `link_id` in the column object. Use Get Metadata or Get Base Info to get this `link_id`. Don't use the `key` of the link column. table_row_id string The id of the row. The id of a row is unique inside a base and is often used to identify one specific row. other_table_row_id string The id of the row. The id of a row is unique inside a base and is often used to identify one specific row."},{"location":"clients/php/Base/Model/CreateRowLinks/","title":"# CreateRowLinks","text":""},{"location":"clients/php/Base/Model/CreateRowLinks/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. other_table_name string The name of the table. link_id string Every link column has a `key` and `link_id` in the column object. Use Get Metadata or Get Base Info to get this `link_id`. Don't use the `key` of the link column. row_id string The id of the row. The id of a row is unique inside a base and is often used to identify one specific row. other_rows_ids string[] ID of the rows [optional]"},{"location":"clients/php/Base/Model/CreateTableRequest/","title":"# CreateTableRequest","text":""},{"location":"clients/php/Base/Model/CreateTableRequest/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. columns \\SeaTable\\Client\\Base\\CreateTableRequestColumnsInner[]"},{"location":"clients/php/Base/Model/CreateTableRequestColumnsInner/","title":"# CreateTableRequestColumnsInner","text":""},{"location":"clients/php/Base/Model/CreateTableRequestColumnsInner/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\ButtonColumnFormat"},{"location":"clients/php/Base/Model/CreatorColumn/","title":"# CreatorColumn","text":""},{"location":"clients/php/Base/Model/CreatorColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/CreatorColumnWithTableName/","title":"# CreatorColumnWithTableName","text":""},{"location":"clients/php/Base/Model/CreatorColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/CreatorFilterPredicate/","title":"# CreatorFilterPredicate","text":""},{"location":"clients/php/Base/Model/CreatorFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/CtimeColumn/","title":"# CtimeColumn","text":""},{"location":"clients/php/Base/Model/CtimeColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/CtimeColumnWithTableName/","title":"# CtimeColumnWithTableName","text":""},{"location":"clients/php/Base/Model/CtimeColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/DateColumn/","title":"# DateColumn","text":""},{"location":"clients/php/Base/Model/DateColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\DateColumnFormat [optional]"},{"location":"clients/php/Base/Model/DateColumnFormat/","title":"# DateColumnFormat","text":""},{"location":"clients/php/Base/Model/DateColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes format string Choose how date values are displayed. Eg: YYYY-MM-DD: ISO-Format M/D/YYYY: US-Format DD/MM/YYYY: European-Format DD.MM.YYYY: German-Format HH Accurate to minute [optional]"},{"location":"clients/php/Base/Model/DateColumnWithTableName/","title":"# DateColumnWithTableName","text":""},{"location":"clients/php/Base/Model/DateColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\DateColumnFormat [optional]"},{"location":"clients/php/Base/Model/DateFilterPredicate/","title":"# DateFilterPredicate","text":""},{"location":"clients/php/Base/Model/DateFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/DateFilterTermModifier/","title":"# DateFilterTermModifier","text":""},{"location":"clients/php/Base/Model/DateFilterTermModifier/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/DeleteColumn/","title":"# DeleteColumn","text":""},{"location":"clients/php/Base/Model/DeleteColumn/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column string The name of the column."},{"location":"clients/php/Base/Model/DeleteRow/","title":"# DeleteRow","text":""},{"location":"clients/php/Base/Model/DeleteRow/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. row_id string The id of the row. The id of a row is unique inside a base and is often used to identify one specific row."},{"location":"clients/php/Base/Model/DeleteRowLink/","title":"# DeleteRowLink","text":""},{"location":"clients/php/Base/Model/DeleteRowLink/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. other_table_name string The name of the table. link_id string Every link column has a `key` and `link_id` in the column object. Use Get Metadata or Get Base Info to get this `link_id`. Don't use the `key` of the link column. table_row_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. other_table_row_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name."},{"location":"clients/php/Base/Model/DeleteRows/","title":"# DeleteRows","text":""},{"location":"clients/php/Base/Model/DeleteRows/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. row_ids string[] Defines the rows which should be updated."},{"location":"clients/php/Base/Model/DeleteSelectOptions/","title":"# DeleteSelectOptions","text":""},{"location":"clients/php/Base/Model/DeleteSelectOptions/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column string The name of the column. option_names string[]"},{"location":"clients/php/Base/Model/DeleteTable/","title":"# DeleteTable","text":""},{"location":"clients/php/Base/Model/DeleteTable/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table."},{"location":"clients/php/Base/Model/DuplicateTable/","title":"# DuplicateTable","text":""},{"location":"clients/php/Base/Model/DuplicateTable/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. is_duplicate_records bool"},{"location":"clients/php/Base/Model/DurationColumn/","title":"# DurationColumn","text":""},{"location":"clients/php/Base/Model/DurationColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\DurationColumnFormat [optional]"},{"location":"clients/php/Base/Model/DurationColumnFormat/","title":"# DurationColumnFormat","text":""},{"location":"clients/php/Base/Model/DurationColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes format string [optional] duration_format string Choose how to save the duration values. Eg: h hours and minutes (1:23) hss: hours, minutes and seconds (1:23:24) [optional]"},{"location":"clients/php/Base/Model/DurationColumnWithTableName/","title":"# DurationColumnWithTableName","text":""},{"location":"clients/php/Base/Model/DurationColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\DurationColumnFormat [optional]"},{"location":"clients/php/Base/Model/EmailColumn/","title":"# EmailColumn","text":""},{"location":"clients/php/Base/Model/EmailColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/EmailColumnWithTableName/","title":"# EmailColumnWithTableName","text":""},{"location":"clients/php/Base/Model/EmailColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/EmailFilterPredicate/","title":"# EmailFilterPredicate","text":""},{"location":"clients/php/Base/Model/EmailFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/FileColumn/","title":"# FileColumn","text":""},{"location":"clients/php/Base/Model/FileColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/FileColumnWithTableName/","title":"# FileColumnWithTableName","text":""},{"location":"clients/php/Base/Model/FileColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/FilterConjunction/","title":"# FilterConjunction","text":""},{"location":"clients/php/Base/Model/FilterConjunction/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/FilteredRowsFilter/","title":"# FilteredRowsFilter","text":""},{"location":"clients/php/Base/Model/FilteredRowsFilter/#properties","title":"Properties","text":"Name Type Description Notes filters \\SeaTable\\Client\\Base\\FilteredRowsFilterFiltersInner[] [optional]"},{"location":"clients/php/Base/Model/FilteredRowsFilterFiltersInner/","title":"# FilteredRowsFilterFiltersInner","text":""},{"location":"clients/php/Base/Model/FilteredRowsFilterFiltersInner/#properties","title":"Properties","text":"Name Type Description Notes column_name string [optional] filter_predicate string [optional] filter_term string [optional] filter_term_modifier string [optional]"},{"location":"clients/php/Base/Model/FiltersAutomatic/","title":"# FiltersAutomatic","text":""},{"location":"clients/php/Base/Model/FiltersAutomatic/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\AutomaticFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersCheckbox/","title":"# FiltersCheckbox","text":""},{"location":"clients/php/Base/Model/FiltersCheckbox/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\CheckboxFilterPredicate [optional] filter_term bool [optional]"},{"location":"clients/php/Base/Model/FiltersCollaborator/","title":"# FiltersCollaborator","text":""},{"location":"clients/php/Base/Model/FiltersCollaborator/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\CollaboratorFilterPredicate [optional] filter_term string[] [optional]"},{"location":"clients/php/Base/Model/FiltersCreated/","title":"# FiltersCreated","text":""},{"location":"clients/php/Base/Model/FiltersCreated/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\DateFilterPredicate [optional] filter_term string [optional] filter_term_modifier \\SeaTable\\Client\\Base\\DateFilterTermModifier [optional]"},{"location":"clients/php/Base/Model/FiltersCreator/","title":"# FiltersCreator","text":""},{"location":"clients/php/Base/Model/FiltersCreator/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\CreatorFilterPredicate [optional] filter_term string[] [optional]"},{"location":"clients/php/Base/Model/FiltersDate/","title":"# FiltersDate","text":""},{"location":"clients/php/Base/Model/FiltersDate/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\DateFilterPredicate [optional] filter_term string [optional] filter_term_modifier \\SeaTable\\Client\\Base\\DateFilterTermModifier [optional]"},{"location":"clients/php/Base/Model/FiltersDateTime/","title":"# FiltersDateTime","text":""},{"location":"clients/php/Base/Model/FiltersDateTime/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\DateFilterPredicate [optional] filter_term string [optional] filter_term_modifier \\SeaTable\\Client\\Base\\DateFilterTermModifier [optional]"},{"location":"clients/php/Base/Model/FiltersDuration/","title":"# FiltersDuration","text":""},{"location":"clients/php/Base/Model/FiltersDuration/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\NumberFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersEditor/","title":"# FiltersEditor","text":""},{"location":"clients/php/Base/Model/FiltersEditor/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\CreatorFilterPredicate [optional] filter_term string[] [optional]"},{"location":"clients/php/Base/Model/FiltersEmail/","title":"# FiltersEmail","text":""},{"location":"clients/php/Base/Model/FiltersEmail/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] email_filter_predicate \\SeaTable\\Client\\Base\\EmailFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersFile/","title":"# FiltersFile","text":""},{"location":"clients/php/Base/Model/FiltersFile/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\ImageFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersFormula/","title":"# FiltersFormula","text":""},{"location":"clients/php/Base/Model/FiltersFormula/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\StringFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersGeolocation/","title":"# FiltersGeolocation","text":""},{"location":"clients/php/Base/Model/FiltersGeolocation/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\EmailFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersImage/","title":"# FiltersImage","text":""},{"location":"clients/php/Base/Model/FiltersImage/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\ImageFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersLink/","title":"# FiltersLink","text":""},{"location":"clients/php/Base/Model/FiltersLink/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\LinkFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersLinkFormula/","title":"# FiltersLinkFormula","text":""},{"location":"clients/php/Base/Model/FiltersLinkFormula/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\LinkFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersLongText/","title":"# FiltersLongText","text":""},{"location":"clients/php/Base/Model/FiltersLongText/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\ImageFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersModified/","title":"# FiltersModified","text":""},{"location":"clients/php/Base/Model/FiltersModified/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\DateFilterPredicate [optional] filter_term string [optional] filter_term_modifier \\SeaTable\\Client\\Base\\DateFilterTermModifier [optional]"},{"location":"clients/php/Base/Model/FiltersMultiSelect/","title":"# FiltersMultiSelect","text":""},{"location":"clients/php/Base/Model/FiltersMultiSelect/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\MultipleSelectFilterPredicate [optional] filter_term string[] [optional]"},{"location":"clients/php/Base/Model/FiltersNumber/","title":"# FiltersNumber","text":""},{"location":"clients/php/Base/Model/FiltersNumber/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\NumberFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersPercentage/","title":"# FiltersPercentage","text":""},{"location":"clients/php/Base/Model/FiltersPercentage/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\NumberFilterPredicate [optional] filter_term int [optional]"},{"location":"clients/php/Base/Model/FiltersRating/","title":"# FiltersRating","text":""},{"location":"clients/php/Base/Model/FiltersRating/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\NumberFilterPredicate [optional] filter_term \\SeaTable\\Client\\Base\\RatingFilterTerm [optional]"},{"location":"clients/php/Base/Model/FiltersSingleSelect/","title":"# FiltersSingleSelect","text":""},{"location":"clients/php/Base/Model/FiltersSingleSelect/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\SingleSelectFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersText/","title":"# FiltersText","text":""},{"location":"clients/php/Base/Model/FiltersText/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\StringFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FiltersUrl/","title":"# FiltersUrl","text":""},{"location":"clients/php/Base/Model/FiltersUrl/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\EmailFilterPredicate [optional] filter_term string [optional]"},{"location":"clients/php/Base/Model/FormulaColumn/","title":"# FormulaColumn","text":""},{"location":"clients/php/Base/Model/FormulaColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\FormulaColumnFormat"},{"location":"clients/php/Base/Model/FormulaColumnFormat/","title":"# FormulaColumnFormat","text":""},{"location":"clients/php/Base/Model/FormulaColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes formula string The formula of this column."},{"location":"clients/php/Base/Model/FormulaColumnWithTableName/","title":"# FormulaColumnWithTableName","text":""},{"location":"clients/php/Base/Model/FormulaColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\FormulaColumnFormat"},{"location":"clients/php/Base/Model/FreezeUnfreezeColumn/","title":"# FreezeUnfreezeColumn","text":""},{"location":"clients/php/Base/Model/FreezeUnfreezeColumn/#properties","title":"Properties","text":"Name Type Description Notes op_type string table_name string The name of the table. column string The name of the column. frozen bool"},{"location":"clients/php/Base/Model/GenerateSnapshot/","title":"# GenerateSnapshot","text":""},{"location":"clients/php/Base/Model/GenerateSnapshot/#properties","title":"Properties","text":"Name Type Description Notes dtable_name string [optional]"},{"location":"clients/php/Base/Model/ImageColumn/","title":"# ImageColumn","text":""},{"location":"clients/php/Base/Model/ImageColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/ImageColumnWithTableName/","title":"# ImageColumnWithTableName","text":""},{"location":"clients/php/Base/Model/ImageColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/ImageFilterPredicate/","title":"# ImageFilterPredicate","text":""},{"location":"clients/php/Base/Model/ImageFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/InsertColumnRequest/","title":"# InsertColumnRequest","text":""},{"location":"clients/php/Base/Model/InsertColumnRequest/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\ButtonColumnFormat"},{"location":"clients/php/Base/Model/InsertRow/","title":"# InsertRow","text":""},{"location":"clients/php/Base/Model/InsertRow/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. anchor_row_id string Id of the row the new row should be added next to [optional] row_insert_position string Defines if the new row is added below or above anchor row. If this parameter is left blank, `insert_below` is taken as default value. [optional] row object Pass the set of column names and their values. The column names must be present in your table. Different column types require different ways to input values. For eg:"},{"location":"clients/php/Base/Model/InsertRowsIntoBigData/","title":"# InsertRowsIntoBigData","text":""},{"location":"clients/php/Base/Model/InsertRowsIntoBigData/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. rows object[]"},{"location":"clients/php/Base/Model/LastModifierColumn/","title":"# LastModifierColumn","text":""},{"location":"clients/php/Base/Model/LastModifierColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/LastModifierColumnWithTableName/","title":"# LastModifierColumnWithTableName","text":""},{"location":"clients/php/Base/Model/LastModifierColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/LinkColumn/","title":"# LinkColumn","text":""},{"location":"clients/php/Base/Model/LinkColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\LinkColumnFormat"},{"location":"clients/php/Base/Model/LinkColumnFormat/","title":"# LinkColumnFormat","text":""},{"location":"clients/php/Base/Model/LinkColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes table string Name of this table. other_table string Name of the other table."},{"location":"clients/php/Base/Model/LinkColumnWithTableName/","title":"# LinkColumnWithTableName","text":""},{"location":"clients/php/Base/Model/LinkColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\LinkColumnFormat"},{"location":"clients/php/Base/Model/LinkFilterPredicate/","title":"# LinkFilterPredicate","text":""},{"location":"clients/php/Base/Model/LinkFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/LinkFormulaColumn/","title":"# LinkFormulaColumn","text":""},{"location":"clients/php/Base/Model/LinkFormulaColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\LinkFormulaColumnColumnData"},{"location":"clients/php/Base/Model/LinkFormulaColumnColumnData/","title":"# LinkFormulaColumnColumnData","text":""},{"location":"clients/php/Base/Model/LinkFormulaColumnColumnData/#properties","title":"Properties","text":"Name Type Description Notes formula string The formula of this column. link_column string Name of the link column. level1_linked_column string Name of the column in the linked table to look up. summary_column string The column in the linked table to be summarized. summary_method string searched_column string The column in the linked table to look up. comparison_column string The column in the linked table to be evaluated."},{"location":"clients/php/Base/Model/LinkFormulaColumnCountLinksFormat/","title":"# LinkFormulaColumnCountLinksFormat","text":""},{"location":"clients/php/Base/Model/LinkFormulaColumnCountLinksFormat/#properties","title":"Properties","text":"Name Type Description Notes formula string The formula of this column. link_column string Name of the link column."},{"location":"clients/php/Base/Model/LinkFormulaColumnFindmaxFormat/","title":"# LinkFormulaColumnFindmaxFormat","text":""},{"location":"clients/php/Base/Model/LinkFormulaColumnFindmaxFormat/#properties","title":"Properties","text":"Name Type Description Notes formula string The formula of this column. link_column string Name of the link column. searched_column string The column in the linked table to look up. comparison_column string The column in the linked table to be evaluated."},{"location":"clients/php/Base/Model/LinkFormulaColumnFindminFormat/","title":"# LinkFormulaColumnFindminFormat","text":""},{"location":"clients/php/Base/Model/LinkFormulaColumnFindminFormat/#properties","title":"Properties","text":"Name Type Description Notes formula string The formula of this column. link_column string Name of the link column. searched_column string The column in the linked table to look up. comparison_column string The column in the linked table to be evaluated."},{"location":"clients/php/Base/Model/LinkFormulaColumnLookupFormat/","title":"# LinkFormulaColumnLookupFormat","text":""},{"location":"clients/php/Base/Model/LinkFormulaColumnLookupFormat/#properties","title":"Properties","text":"Name Type Description Notes formula string The formula of this column. link_column string Name of the link column. level1_linked_column string Name of the column in the linked table to look up."},{"location":"clients/php/Base/Model/LinkFormulaColumnRollupFormat/","title":"# LinkFormulaColumnRollupFormat","text":""},{"location":"clients/php/Base/Model/LinkFormulaColumnRollupFormat/#properties","title":"Properties","text":"Name Type Description Notes formula string The formula of this column. link_column string Name of the link column. summary_column string The column in the linked table to be summarized. summary_method string"},{"location":"clients/php/Base/Model/LinkFormulaColumnWithTableName/","title":"# LinkFormulaColumnWithTableName","text":""},{"location":"clients/php/Base/Model/LinkFormulaColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\LinkFormulaColumnColumnData"},{"location":"clients/php/Base/Model/ListRowLinks/","title":"# ListRowLinks","text":""},{"location":"clients/php/Base/Model/ListRowLinks/#properties","title":"Properties","text":"Name Type Description Notes table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. link_column string This is the key of the link column. Do not use the `link_id` of the link column here. rows \\SeaTable\\Client\\Base\\ListRowLinksRowsInner[] the rows you want to get the links for. [optional]"},{"location":"clients/php/Base/Model/ListRowLinksRowsInner/","title":"# ListRowLinksRowsInner","text":""},{"location":"clients/php/Base/Model/ListRowLinksRowsInner/#properties","title":"Properties","text":"Name Type Description Notes row_id string The id of the row. The id of a row is unique inside a base and is often used to identify one specific row. [optional] offset int offset is the beginning number of your query. If your record is linked to multiple records, use e.g. 0 to start quering from the 1st element or e.g. 5 to start querying from the 6th element, etc. Attention: The returned list of linked rows is not ordered by its original order on the web interface, but rather by created time (ctime). [optional] limit int limit lets you to set a limit to the number of records returned. Use e.g. 10 to return no more than 10 records. [optional]"},{"location":"clients/php/Base/Model/LongTextColumn/","title":"# LongTextColumn","text":""},{"location":"clients/php/Base/Model/LongTextColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/LongTextColumnWithTableName/","title":"# LongTextColumnWithTableName","text":""},{"location":"clients/php/Base/Model/LongTextColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/MoveColumn/","title":"# MoveColumn","text":""},{"location":"clients/php/Base/Model/MoveColumn/#properties","title":"Properties","text":"Name Type Description Notes op_type string table_name string The name of the table. column string The name of the column. target_column string"},{"location":"clients/php/Base/Model/MtimeColumn/","title":"# MtimeColumn","text":""},{"location":"clients/php/Base/Model/MtimeColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/MtimeColumnWithTableName/","title":"# MtimeColumnWithTableName","text":""},{"location":"clients/php/Base/Model/MtimeColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/MultipleSelectColumn/","title":"# MultipleSelectColumn","text":""},{"location":"clients/php/Base/Model/MultipleSelectColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\SelectColumnFormat [optional]"},{"location":"clients/php/Base/Model/MultipleSelectColumnWithTableName/","title":"# MultipleSelectColumnWithTableName","text":""},{"location":"clients/php/Base/Model/MultipleSelectColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\SelectColumnFormat [optional]"},{"location":"clients/php/Base/Model/MultipleSelectFilterPredicate/","title":"# MultipleSelectFilterPredicate","text":""},{"location":"clients/php/Base/Model/MultipleSelectFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/NewView/","title":"# NewView","text":""},{"location":"clients/php/Base/Model/NewView/#properties","title":"Properties","text":"Name Type Description Notes name string Name of the new view. type string Type of the view, either normal view or a big data view. The default value is table. is_locked bool [optional]"},{"location":"clients/php/Base/Model/NumberColumn/","title":"# NumberColumn","text":""},{"location":"clients/php/Base/Model/NumberColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\NumberColumnFormat [optional]"},{"location":"clients/php/Base/Model/NumberColumnFormat/","title":"# NumberColumnFormat","text":""},{"location":"clients/php/Base/Model/NumberColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes format string Choose what kind of number this column should contain. [optional] decimal string Choose how decimals are shown: 1.00 or 1,00 [optional] thousands string Choose how bigger numbers are displayed. Eg: no: 1000000 dot: 1.000.000 comma: 1,000,000 [optional]"},{"location":"clients/php/Base/Model/NumberColumnWithTableName/","title":"# NumberColumnWithTableName","text":""},{"location":"clients/php/Base/Model/NumberColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\NumberColumnFormat [optional]"},{"location":"clients/php/Base/Model/NumberFilterPredicate/","title":"# NumberFilterPredicate","text":""},{"location":"clients/php/Base/Model/NumberFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/RatingColumn/","title":"# RatingColumn","text":""},{"location":"clients/php/Base/Model/RatingColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\RatingColumnFormat"},{"location":"clients/php/Base/Model/RatingColumnFormat/","title":"# RatingColumnFormat","text":""},{"location":"clients/php/Base/Model/RatingColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes rate_max_number int [optional] rate_style_color string [optional] rate_style_type string [optional]"},{"location":"clients/php/Base/Model/RatingColumnWithTableName/","title":"# RatingColumnWithTableName","text":""},{"location":"clients/php/Base/Model/RatingColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\RatingColumnFormat"},{"location":"clients/php/Base/Model/RatingFilterTerm/","title":"# RatingFilterTerm","text":""},{"location":"clients/php/Base/Model/RatingFilterTerm/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/RenameColumn/","title":"# RenameColumn","text":""},{"location":"clients/php/Base/Model/RenameColumn/#properties","title":"Properties","text":"Name Type Description Notes op_type string table_name string The name of the table. column string The name of the column. new_column_name string"},{"location":"clients/php/Base/Model/RenameTable/","title":"# RenameTable","text":""},{"location":"clients/php/Base/Model/RenameTable/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. new_table_name string"},{"location":"clients/php/Base/Model/ResizeColumn/","title":"# ResizeColumn","text":""},{"location":"clients/php/Base/Model/ResizeColumn/#properties","title":"Properties","text":"Name Type Description Notes op_type string table_name string The name of the table. column string The name of the column. new_column_width int"},{"location":"clients/php/Base/Model/Rows/","title":"# Rows","text":""},{"location":"clients/php/Base/Model/Rows/#properties","title":"Properties","text":"Name Type Description Notes rows object[]"},{"location":"clients/php/Base/Model/RowsWithTableName/","title":"# RowsWithTableName","text":""},{"location":"clients/php/Base/Model/RowsWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. rows object[]"},{"location":"clients/php/Base/Model/SelectColumnFormat/","title":"# SelectColumnFormat","text":""},{"location":"clients/php/Base/Model/SelectColumnFormat/#properties","title":"Properties","text":"Name Type Description Notes options \\SeaTable\\Client\\Base\\SelectColumnFormatOptionsInner[] [optional]"},{"location":"clients/php/Base/Model/SelectColumnFormatOptionsInner/","title":"# SelectColumnFormatOptionsInner","text":""},{"location":"clients/php/Base/Model/SelectColumnFormatOptionsInner/#properties","title":"Properties","text":"Name Type Description Notes id int Select any unique id. [optional] name string The name of your option. [optional] color string select your code-code for the background. [optional] text_color string select your color-code for the text. [optional]"},{"location":"clients/php/Base/Model/SingleSelectColumn/","title":"# SingleSelectColumn","text":""},{"location":"clients/php/Base/Model/SingleSelectColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\SelectColumnFormat [optional]"},{"location":"clients/php/Base/Model/SingleSelectColumnWithTableName/","title":"# SingleSelectColumnWithTableName","text":""},{"location":"clients/php/Base/Model/SingleSelectColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional] column_data \\SeaTable\\Client\\Base\\SelectColumnFormat [optional]"},{"location":"clients/php/Base/Model/SingleSelectFilterPredicate/","title":"# SingleSelectFilterPredicate","text":""},{"location":"clients/php/Base/Model/SingleSelectFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/SortType/","title":"# SortType","text":""},{"location":"clients/php/Base/Model/SortType/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/SortsInner/","title":"# SortsInner","text":""},{"location":"clients/php/Base/Model/SortsInner/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] sort_type \\SeaTable\\Client\\Base\\SortType [optional]"},{"location":"clients/php/Base/Model/SqlQuery/","title":"# SqlQuery","text":""},{"location":"clients/php/Base/Model/SqlQuery/#properties","title":"Properties","text":"Name Type Description Notes sql string SQL-Query to get rows from base convert_keys bool Determines if the columns are returned as their keys (true) or their names (false by default)."},{"location":"clients/php/Base/Model/SqlQueryResponse/","title":"# SqlQueryResponse","text":""},{"location":"clients/php/Base/Model/SqlQueryResponse/#properties","title":"Properties","text":"Name Type Description Notes metadata array [optional] results array [optional] success bool [optional]"},{"location":"clients/php/Base/Model/StringFilterPredicate/","title":"# StringFilterPredicate","text":""},{"location":"clients/php/Base/Model/StringFilterPredicate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/Base/Model/TableNameObject/","title":"# TableNameObject","text":""},{"location":"clients/php/Base/Model/TableNameObject/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table."},{"location":"clients/php/Base/Model/TableWithRowIds/","title":"# TableWithRowIds","text":""},{"location":"clients/php/Base/Model/TableWithRowIds/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. row_ids string[] ID of the rows"},{"location":"clients/php/Base/Model/TextColumn/","title":"# TextColumn","text":""},{"location":"clients/php/Base/Model/TextColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/TextColumnWithTableName/","title":"# TextColumnWithTableName","text":""},{"location":"clients/php/Base/Model/TextColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/UpdateColumn/","title":"# UpdateColumn","text":""},{"location":"clients/php/Base/Model/UpdateColumn/#properties","title":"Properties","text":"Name Type Description Notes op_type string table_name string The name of the table. column string The name of the column. new_column_type string new_column_name string new_column_width int target_column string frozen bool"},{"location":"clients/php/Base/Model/UpdateColumnType/","title":"# UpdateColumnType","text":""},{"location":"clients/php/Base/Model/UpdateColumnType/#properties","title":"Properties","text":"Name Type Description Notes op_type string table_name string The name of the table. column string The name of the column. new_column_type string"},{"location":"clients/php/Base/Model/UpdateComment/","title":"# UpdateComment","text":""},{"location":"clients/php/Base/Model/UpdateComment/#properties","title":"Properties","text":"Name Type Description Notes options \\SeaTable\\Client\\Base\\UpdateCommentOptions"},{"location":"clients/php/Base/Model/UpdateCommentOptions/","title":"# UpdateCommentOptions","text":""},{"location":"clients/php/Base/Model/UpdateCommentOptions/#properties","title":"Properties","text":"Name Type Description Notes comment string [optional] resolved string [optional]"},{"location":"clients/php/Base/Model/UpdateLinks/","title":"# UpdateLinks","text":""},{"location":"clients/php/Base/Model/UpdateLinks/#properties","title":"Properties","text":"Name Type Description Notes table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. other_table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. link_id string Every link column has a `key` and `link_id` in the column object. Use Get Metadata or Get Base Info to get this `link_id`. Don't use the `key` of the link column. row_id_list string[] List of the source rows IDs whose links you'd like to update. other_rows_ids_map string[] Map of IDs of the target rows which you'd like to link your source rows to."},{"location":"clients/php/Base/Model/UpdateRow/","title":"# UpdateRow","text":""},{"location":"clients/php/Base/Model/UpdateRow/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. row_id string The id of the row. The id of a row is unique inside a base and is often used to identify one specific row. row object Pass the set of column names and their values. The column names must be present in your table. Different column types require different ways to input values. For eg:"},{"location":"clients/php/Base/Model/UpdateRows/","title":"# UpdateRows","text":""},{"location":"clients/php/Base/Model/UpdateRows/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. updates \\SeaTable\\Client\\Base\\UpdateRowsUpdatesInner[] Defines the rows which should be updated."},{"location":"clients/php/Base/Model/UpdateRowsUpdatesInner/","title":"# UpdateRowsUpdatesInner","text":""},{"location":"clients/php/Base/Model/UpdateRowsUpdatesInner/#properties","title":"Properties","text":"Name Type Description Notes row_id string The id of the row. The id of a row is unique inside a base and is often used to identify one specific row. [optional] row object Pass the set of column names and their values. The column names must be present in your table. Different column types require different ways to input values. For eg: [optional]"},{"location":"clients/php/Base/Model/UpdateSingleMultipleSelectOptions/","title":"# UpdateSingleMultipleSelectOptions","text":""},{"location":"clients/php/Base/Model/UpdateSingleMultipleSelectOptions/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. [optional] column string The name of the column. [optional] options \\SeaTable\\Client\\Base\\UpdateSingleMultipleSelectOptionsOptionsInner[] [optional] return_options bool [optional]"},{"location":"clients/php/Base/Model/UpdateSingleMultipleSelectOptionsOptionsInner/","title":"# UpdateSingleMultipleSelectOptionsOptionsInner","text":""},{"location":"clients/php/Base/Model/UpdateSingleMultipleSelectOptionsOptionsInner/#properties","title":"Properties","text":"Name Type Description Notes id string color string [optional] text_color string [optional] name string [optional]"},{"location":"clients/php/Base/Model/UpdateView/","title":"# UpdateView","text":""},{"location":"clients/php/Base/Model/UpdateView/#properties","title":"Properties","text":"Name Type Description Notes name string The new name of the view, if you want to give the view a new name. [optional] is_locked bool [optional] filters \\SeaTable\\Client\\Base\\UpdateViewFiltersInner[] filter of your view [optional] filter_conjunction \\SeaTable\\Client\\Base\\FilterConjunction [optional] sorts \\SeaTable\\Client\\Base\\SortsInner[] sorting of your view [optional] groupbys \\SeaTable\\Client\\Base\\SortsInner[] grouping of your view [optional] hidden_columns string[] IDs of the rows that should be hidden [optional]"},{"location":"clients/php/Base/Model/UpdateViewFiltersInner/","title":"# UpdateViewFiltersInner","text":""},{"location":"clients/php/Base/Model/UpdateViewFiltersInner/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate \\SeaTable\\Client\\Base\\EmailFilterPredicate [optional] filter_term string [optional] filter_term_modifier \\SeaTable\\Client\\Base\\DateFilterTermModifier [optional] email_filter_predicate \\SeaTable\\Client\\Base\\EmailFilterPredicate [optional]"},{"location":"clients/php/Base/Model/UrlColumn/","title":"# UrlColumn","text":""},{"location":"clients/php/Base/Model/UrlColumn/#properties","title":"Properties","text":"Name Type Description Notes column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/Base/Model/UrlColumnWithTableName/","title":"# UrlColumnWithTableName","text":""},{"location":"clients/php/Base/Model/UrlColumnWithTableName/#properties","title":"Properties","text":"Name Type Description Notes table_name string The name of the table. column_name string The name of the column. column_type string anchor_column string Give the name or the key of a column after you would like to add this new column. If you leave this empty, the new column will be created at the end. [optional]"},{"location":"clients/php/File/Api/FilesImagesApi/","title":"SeaTable\\Client\\FilesImagesApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getFileDownloadLink() GET /api/v2.1/dtable/app-download-link/ Get File Download Link getUploadLink() GET /api/v2.1/dtable/app-upload-link/ Get Upload Link uploadFile() POST /seafhttp/upload-api/{upload_link}?ret-json=1 Upload File (or Image)"},{"location":"clients/php/File/Api/FilesImagesApi/#getfiledownloadlink","title":"<code>getFileDownloadLink()</code>","text":"<pre><code>getFileDownloadLink($path): object\n</code></pre> <p>Get File Download Link</p> <p>Get the file download link of a base's attachment.</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: ApiTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\File\\FilesImagesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$path = /images/2021-03/test.png; // string | Path to the file\n\ntry {\n    $result = $apiInstance-&gt;getFileDownloadLink($path);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FilesImagesApi-&gt;getFileDownloadLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/File/Api/FilesImagesApi/#parameters","title":"Parameters","text":"Name Type Description Notes path string Path to the file"},{"location":"clients/php/File/Api/FilesImagesApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#authorization","title":"Authorization","text":"<p>ApiTokenAuth</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#getuploadlink","title":"<code>getUploadLink()</code>","text":"<pre><code>getUploadLink(): object\n</code></pre> <p>Get Upload Link</p> <p>With the API token (not the Base Token), you can generate an upload link, the parent- and the relative path. These information are needed to upload a file / an image to a bases. Then this file/image can be attached to a file/image column.   &gt; \ud83d\udcd8 The upload link is only valid for a short time &gt;  &gt; The upload link is only valid for some minutes. After that the upload link must be created again.</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: ApiTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\File\\FilesImagesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;getUploadLink();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FilesImagesApi-&gt;getUploadLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/File/Api/FilesImagesApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#authorization_1","title":"Authorization","text":"<p>ApiTokenAuth</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#uploadfile","title":"<code>uploadFile()</code>","text":"<pre><code>uploadFile($upload_link, $file, $parent_dir, $relative_path, $replace): object\n</code></pre> <p>Upload File (or Image)</p> <p>Upload a file or an image as an attachment to a base. To execute this request you need to generate an upload link first.   &gt; \ud83d\udcd8 Three steps to add a file/an image to a base &gt;  &gt; To add an image or a file to a base, three steps are necessary:  &gt; 1. Generate an upload link. &gt; 2. Upload the file to the base as an attachment. (this article) &gt; 3. Update a row and attach the file/the image to a file or image column.   &gt; \ud83d\udcd8 Different variable names &gt;  &gt; Pay attention that the return values of upload link have slightly different names, so <code>parent_path</code> is <code>parent_dir</code> in this call.  ## Attach the file/image to a file or image column  After uploading the file/image to a base, SeaTable saves the uploaded file at non-public URL in the form: <code>/workspace/{workspace_id}</code>+<code>parent_dir</code>+<code>relative_path</code>+<code>name</code>.   Here is an example how this might look like: <code>https://cloud.seatable.io/workspace/24/asset/55f2f056-5da1-4095-b5f8-791bb51b991e/images/2023-07/party.png</code> If you are logged in with your browser, you can access this file. Otherwise you will see the login screen.  Knowing this URL, you can add a new row or update an existing row and use the URL to add this attachment to your file/image column. <code># Example how to add an already uploaded image to a row: \\\"row\\\": {   \\\"My Image Column\\\": [\\\"/workspace/24/asset/55f2f056-5da1-4095-b5f8-791bb51b991e/images/2023-07/party.png`\\\"] }  # Example how to add an already uploaded file to a row: \\\"row\\\": {   \\\"File Column\\\": [{     \\\"name\\\": \\\"invoice.pdf\\\",      \\\"size\\\": 101454,      \\\"type\\\": \\\"file\\\",      \\\"url\\\": \\\"/workspace/24/asset/55f2f056-5da1-4095-b5f8-791bb51b991e/images/2023-07/invoice.pdf\\\"   }] }</code> &gt; \ud83d\udea7 File requires the input variables size, type and url &gt;  &gt; As you can see, in the case of an image the URL is sufficient to attach the image to an image column. In case of a file, you have to provide all four input values.</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: ApiTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\File\\FilesImagesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$upload_link = 5e666848-4152-45e5-990e-d686960f2a05; // string | This is the value you got from the call Get File/Image Upload Link via API Token.\n$file = \"/path/to/file.txt\"; // \\SplFileObject | The file or image you'd like to upload from your local drive.\n$parent_dir = 'parent_dir_example'; // string | This is the value of the `parent_path` you got from the call **Get File/Image Upload Link via API Token**.\n$relative_path = 'relative_path_example'; // string | If you are uploading a file, use the value of the `file_relative_path` returned in the call **Get File/Image Upload Link via API Token**; or the `img_relative_path` for image.\n$replace = 'replace_example'; // string | Do you want to overwrite a file/image with the same name? `0` - No, `1` - Yes. Optional. `0` by default. If existing file is not overwritten, the uploaded file will be renamed as `filename(1).xxx`.\n\ntry {\n    $result = $apiInstance-&gt;uploadFile($upload_link, $file, $parent_dir, $relative_path, $replace);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FilesImagesApi-&gt;uploadFile: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/File/Api/FilesImagesApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes upload_link string This is the value you got from the call Get File/Image Upload Link via API Token. file \\SplFileObject\\SplFileObject The file or image you'd like to upload from your local drive. parent_dir string This is the value of the `parent_path` you got from the call Get File/Image Upload Link via API Token. relative_path string If you are uploading a file, use the value of the `file_relative_path` returned in the call Get File/Image Upload Link via API Token; or the `img_relative_path` for image. replace string Do you want to overwrite a file/image with the same name? `0` - No, `1` - Yes. Optional. `0` by default. If existing file is not overwritten, the uploaded file will be renamed as `filename(1).xxx`. [optional]"},{"location":"clients/php/File/Api/FilesImagesApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/File/Api/FilesImagesApi/#authorization_2","title":"Authorization","text":"<p>ApiTokenAuth</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/","title":"SeaTable\\Client\\FilesImagesCustomFolderApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getCustomDownloadLink() GET /api/v2.1/dtable/custom/app-download-link Get Download Link getCustomFileMetadata() GET /api/v2.1/dtable/custom/app-asset-file/ Get File Metadata getCustomFiles() GET /api/v2.1/dtable/custom/app-asset-dir/ Get Files from Folder getCustomUploadLink() GET /api/v2.1/dtable/custom/app-upload-link/ Get Upload Link"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#getcustomdownloadlink","title":"<code>getCustomDownloadLink()</code>","text":"<pre><code>getCustomDownloadLink($path): object\n</code></pre> <p>Get Download Link</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: ApiTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\File\\FilesImagesCustomFolderApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$path = /supplierOne/b374.pdf; // string | Path and name of the file in the custom folder\n\ntry {\n    $result = $apiInstance-&gt;getCustomDownloadLink($path);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FilesImagesCustomFolderApi-&gt;getCustomDownloadLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#parameters","title":"Parameters","text":"Name Type Description Notes path string Path and name of the file in the custom folder"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#authorization","title":"Authorization","text":"<p>ApiTokenAuth</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#getcustomfilemetadata","title":"<code>getCustomFileMetadata()</code>","text":"<pre><code>getCustomFileMetadata($path, $name): object\n</code></pre> <p>Get File Metadata</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: ApiTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\File\\FilesImagesCustomFolderApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$path = /; // string | Path of the custom folder\n$name = b374.pdf; // string | Name of the file in the custom folder\n\ntry {\n    $result = $apiInstance-&gt;getCustomFileMetadata($path, $name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FilesImagesCustomFolderApi-&gt;getCustomFileMetadata: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes path string Path of the custom folder name string Name of the file in the custom folder"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#authorization_1","title":"Authorization","text":"<p>ApiTokenAuth</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#getcustomfiles","title":"<code>getCustomFiles()</code>","text":"<pre><code>getCustomFiles($path): object\n</code></pre> <p>Get Files from Folder</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: ApiTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\File\\FilesImagesCustomFolderApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$path = /; // string | Path of the custom folder\n\ntry {\n    $result = $apiInstance-&gt;getCustomFiles($path);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FilesImagesCustomFolderApi-&gt;getCustomFiles: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes path string Path of the custom folder"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#authorization_2","title":"Authorization","text":"<p>ApiTokenAuth</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#getcustomuploadlink","title":"<code>getCustomUploadLink()</code>","text":"<pre><code>getCustomUploadLink($path): object\n</code></pre> <p>Get Upload Link</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: ApiTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\File\\FilesImagesCustomFolderApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$path = /; // string | Path of the custom folder\n\ntry {\n    $result = $apiInstance-&gt;getCustomUploadLink($path);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FilesImagesCustomFolderApi-&gt;getCustomUploadLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes path string Path of the custom folder"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/File/Api/FilesImagesCustomFolderApi/#authorization_3","title":"Authorization","text":"<p>ApiTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/","title":"SeaTable\\Client\\AutomationsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteAutomation() DELETE /api/v2.1/admin/automation-rules/{automation_rule_id}/ Delete Automation deleteInvalidAutomations() DELETE /api/v2.1/admin/invalid-automation-rules/ Delete Invalid Automations listAutomations() GET /api/v2.1/admin/automation-rules/ List Automations listInvalidAutomations() GET /api/v2.1/admin/invalid-automation-rules/ List Invalid Automations"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#deleteautomation","title":"<code>deleteAutomation()</code>","text":"<pre><code>deleteAutomation($automation_rule_id): object\n</code></pre> <p>Delete Automation</p> <p>As system administrator, you can delete any automation rule existing in the current system. Attention - This operation cannot be undone!</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\AutomationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$automation_rule_id = 10; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteAutomation($automation_rule_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AutomationsApi-&gt;deleteAutomation: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#parameters","title":"Parameters","text":"Name Type Description Notes automation_rule_id int"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#deleteinvalidautomations","title":"<code>deleteInvalidAutomations()</code>","text":"<pre><code>deleteInvalidAutomations(): object\n</code></pre> <p>Delete Invalid Automations</p> <p>If you don't want to delete the invalid automation rules one by one, you can use this request to delete them all at once.</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\AutomationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;deleteInvalidAutomations();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AutomationsApi-&gt;deleteInvalidAutomations: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#listautomations","title":"<code>listAutomations()</code>","text":"<pre><code>listAutomations($page, $per_page): object\n</code></pre> <p>List Automations</p> <p>List all the existing base automation rules in the current system.</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\AutomationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listAutomations($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AutomationsApi-&gt;listAutomations: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#listinvalidautomations","title":"<code>listInvalidAutomations()</code>","text":"<pre><code>listInvalidAutomations($page, $per_page): object\n</code></pre> <p>List Invalid Automations</p> <p>When an automation rule's dependent base, row or column doesn't exist any more, it may become invalid. In this case, the system administrator can list all the invalid automation rules and eventually delete them.</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\AutomationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listInvalidAutomations($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AutomationsApi-&gt;listInvalidAutomations: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/AutomationsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/","title":"SeaTable\\Client\\BasesApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteBase() DELETE /api/v2.1/admin/dtable/{base_uuid}/ Delete Base deleteBasePassword() PUT /api/v2.1/admin/dtable/{base_uuid}/unset-password/ Delete Base Password listAllBases() GET /api/v2.1/admin/dtables/ List All Bases listBaseNotifications() GET /api/v2.1/admin/dtable-notifications/ List Notifications listTrashedBases() GET /api/v2.1/admin/trash-dtables/ List Trashed Bases listUsersBases() GET /api/v2.1/admin/users/{user_id}/dtables/ List User's Bases restoreTrashedBase() PUT /api/v2.1/admin/trash-dtables/{base_id}/ Restore Trashed Base"},{"location":"clients/php/SysAdmin/Api/BasesApi/#deletebase","title":"<code>deleteBase()</code>","text":"<pre><code>deleteBase($base_uuid): object\n</code></pre> <p>Delete Base</p> <p>Delete a base. This will move this base to its team's trash.</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;deleteBase($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;deleteBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/SysAdmin/Api/BasesApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#deletebasepassword","title":"<code>deleteBasePassword()</code>","text":"<pre><code>deleteBasePassword($base_uuid): object\n</code></pre> <p>Delete Base Password</p> <p>In the case that a user has forgotten their base password, the system admin can unset the base password with this API request. The returned value of <code>is_encrypted</code> indicates that the base's password has been unset.</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;deleteBasePassword($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;deleteBasePassword: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/SysAdmin/Api/BasesApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#listallbases","title":"<code>listAllBases()</code>","text":"<pre><code>listAllBases($per_page, $page)\n</code></pre> <p>List All Bases</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n\ntry {\n    $apiInstance-&gt;listAllBases($per_page, $page);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listAllBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional] page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional]"},{"location":"clients/php/SysAdmin/Api/BasesApi/#return-type_2","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#listbasenotifications","title":"<code>listBaseNotifications()</code>","text":"<pre><code>listBaseNotifications($dtable_uuid, $username, $contact_email, $seen, $page, $per_page): object\n</code></pre> <p>List Notifications</p> <p>As the system administrator, you can inspect a certain user's notifications inside of a certain base. To enquire these notifications, you'll need the base's UUID and the user's contact email or their username. You can also filter the result by read or unread status.</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dtable_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$username = 'username_example'; // string | Who you want to get the notifications of, optional\n$contact_email = test013@fun-mail.net; // string | The contact email of the user you're querying. Optional if `username` is defined.\n$seen = 56; // int | Seen status, whether seen or not, 0/1, optional\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listBaseNotifications($dtable_uuid, $username, $contact_email, $seen, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listBaseNotifications: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes dtable_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. username string Who you want to get the notifications of, optional [optional] contact_email string The contact email of the user you're querying. Optional if `username` is defined. [optional] seen int Seen status, whether seen or not, 0/1, optional [optional] page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/BasesApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#listtrashedbases","title":"<code>listTrashedBases()</code>","text":"<pre><code>listTrashedBases($page, $per_page): object\n</code></pre> <p>List Trashed Bases</p> <p>List all the trashed bases of all teams in the system.</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listTrashedBases($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listTrashedBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/BasesApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#listusersbases","title":"<code>listUsersBases()</code>","text":"<pre><code>listUsersBases($user_id, $page, $per_page): object\n</code></pre> <p>List User's Bases</p> <p>List all the bases of a certain user by the user's ID.</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listUsersBases($user_id, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listUsersBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/BasesApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#restoretrashedbase","title":"<code>restoreTrashedBase()</code>","text":"<pre><code>restoreTrashedBase($base_id): object\n</code></pre> <p>Restore Trashed Base</p> <p>Restore a deleted base from the trash bin and put it back where it was. If a base already exists there with the same name, the operation will fail and return an error.</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_id = base_id; // string | The id of the base. This is not the base_uuid.\n\ntry {\n    $result = $apiInstance-&gt;restoreTrashedBase($base_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;restoreTrashedBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes base_id string The id of the base. This is not the base_uuid."},{"location":"clients/php/SysAdmin/Api/BasesApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/BasesApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/","title":"SeaTable\\Client\\CommonDatasetApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteInvalidSync() DELETE /api/v2.1/admin/common-dataset/sync/{sync_id}/ Delete Invalid Sync deleteInvalidSyncs() DELETE /api/v2.1/admin/common-dataset/invalid-syncs/ Delete Invalid Syncs listCommonDataset() GET /api/v2.1/admin/common-datasets/ List Common Dataset listCommonDatasetSyncs() GET /api/v2.1/admin/common-dataset/periodical-syncs/ List Common Dataset Syncs listInvalidSyncs() GET /api/v2.1/admin/common-dataset/invalid-syncs/ List invalid Syncs"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#deleteinvalidsync","title":"<code>deleteInvalidSync()</code>","text":"<pre><code>deleteInvalidSync($sync_id): object\n</code></pre> <p>Delete Invalid Sync</p> <p>Delete an invalid common dataset synchronization configuration with its ID retrieved from the previous request.</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$sync_id = 2; // int | The ID of the invalid synchronization, retrievable from the previous call.\n\ntry {\n    $result = $apiInstance-&gt;deleteInvalidSync($sync_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;deleteInvalidSync: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#parameters","title":"Parameters","text":"Name Type Description Notes sync_id int The ID of the invalid synchronization, retrievable from the previous call."},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#deleteinvalidsyncs","title":"<code>deleteInvalidSyncs()</code>","text":"<pre><code>deleteInvalidSyncs(): object\n</code></pre> <p>Delete Invalid Syncs</p> <p>Use this request to delete all invalid common dataset synchronization configurations at once.</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;deleteInvalidSyncs();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;deleteInvalidSyncs: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#listcommondataset","title":"<code>listCommonDataset()</code>","text":"<pre><code>listCommonDataset($page, $per_page): object\n</code></pre> <p>List Common Dataset</p> <p>List all the common datasets in the current system. In the response, you can see *   The name of the common datasets, *   The source base's name, *   The creator's name, and *   The time of the creation.</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listCommonDataset($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;listCommonDataset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#listcommondatasetsyncs","title":"<code>listCommonDatasetSyncs()</code>","text":"<pre><code>listCommonDatasetSyncs($page, $per_page): object\n</code></pre> <p>List Common Dataset Syncs</p> <p>Use this request to explicitly list off the periodically synchronized common datasets in the system.</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listCommonDatasetSyncs($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;listCommonDatasetSyncs: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#listinvalidsyncs","title":"<code>listInvalidSyncs()</code>","text":"<pre><code>listInvalidSyncs($page, $per_page): object\n</code></pre> <p>List invalid Syncs</p> <p>In some cases, a common dataset synchronization configuration becomes invalid. Such cases happen when, for example, the source or destination tables are deleted. Use this request to list off all the invalid common dataset synchronization configurations in the system.</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listInvalidSyncs($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;listInvalidSyncs: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/CommonDatasetApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/","title":"SeaTable\\Client\\DepartmentsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addDepartment() POST /api/v2.1/admin/address-book/groups/ Add Department deleteDepartment() DELETE /api/v2.1/admin/address-book/groups/{department_id}/ Delete Department getDepartments() GET /api/v2.1/admin/address-book/groups/{department_id}/ Get Department listDepartments() GET /api/v2.1/admin/address-book/groups/{parent_department_id}/ List Departments"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#adddepartment","title":"<code>addDepartment()</code>","text":"<pre><code>addDepartment($add_department_request): object\n</code></pre> <p>Add Department</p> <p>Add a new department with a desired name and, by optional, in a parent department.</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\DepartmentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$add_department_request = new \\SeaTable\\Client\\SysAdmin/Model\\AddDepartmentRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\AddDepartmentRequest\n\ntry {\n    $result = $apiInstance-&gt;addDepartment($add_department_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling DepartmentsApi-&gt;addDepartment: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#parameters","title":"Parameters","text":"Name Type Description Notes add_department_request \\SeaTable\\Client\\SysAdmin/Model\\AddDepartmentRequest [optional]"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#deletedepartment","title":"<code>deleteDepartment()</code>","text":"<pre><code>deleteDepartment($department_id): object\n</code></pre> <p>Delete Department</p> <p>Delete a department by its ID.</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\DepartmentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$department_id = 1; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteDepartment($department_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling DepartmentsApi-&gt;deleteDepartment: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes department_id string"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#getdepartments","title":"<code>getDepartments()</code>","text":"<pre><code>getDepartments($department_id, $return_ancestors): object\n</code></pre> <p>Get Department</p> <p>Get the information of a certain department by its ID.</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\DepartmentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$department_id = 1; // string\n$return_ancestors = true; // bool\n\ntry {\n    $result = $apiInstance-&gt;getDepartments($department_id, $return_ancestors);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling DepartmentsApi-&gt;getDepartments: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes department_id string return_ancestors bool [optional]"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#listdepartments","title":"<code>listDepartments()</code>","text":"<pre><code>listDepartments($parent_department_id): object\n</code></pre> <p>List Departments</p> <p>List all the departments in the current level. The parameter <code>parent_department_id</code> in the URL is optional. If not given, the default of <code>-1</code> is taken. In this example, the parent department has the ID of <code>1</code>, and there are two departments with the IDs of <code>2</code> and <code>3</code> in it.</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\DepartmentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$parent_department_id = 1; // int | Optional. -1 by default.\n\ntry {\n    $result = $apiInstance-&gt;listDepartments($parent_department_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling DepartmentsApi-&gt;listDepartments: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes parent_department_id int Optional. -1 by default."},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/DepartmentsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/ExportApi/","title":"SeaTable\\Client\\ExportApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description exportBase() GET /api/v2.1/admin/dtables/{base_uuid}/synchronous-export/export-dtable/ Export base"},{"location":"clients/php/SysAdmin/Api/ExportApi/#exportbase","title":"<code>exportBase()</code>","text":"<pre><code>exportBase($base_uuid, $ignore_asset)\n</code></pre> <p>Export base</p> <p>Use this request to export a base as System Admin.</p>"},{"location":"clients/php/SysAdmin/Api/ExportApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\ExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$ignore_asset = false; // bool | Set this to `true` to export the base without assets. Default is `false`.\n\ntry {\n    $apiInstance-&gt;exportBase($base_uuid, $ignore_asset);\n} catch (Exception $e) {\n    echo 'Exception when calling ExportApi-&gt;exportBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/ExportApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. ignore_asset bool Set this to `true` to export the base without assets. Default is `false`. [optional]"},{"location":"clients/php/SysAdmin/Api/ExportApi/#return-type","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/SysAdmin/Api/ExportApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/","title":"SeaTable\\Client\\FormsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteDataCollectionForms() DELETE /api/v2.1/admin/collection-tables/{collection_table_token}/ Delete Data Collection Forms deleteForm() DELETE /api/v2.1/admin/forms/{form_token}/ Delete Form listDataCollectionForms() GET /api/v2.1/admin/collection-tables/ List Data Collection Forms listForms() GET /api/v2.1/admin/forms/ List Forms"},{"location":"clients/php/SysAdmin/Api/FormsApi/#deletedatacollectionforms","title":"<code>deleteDataCollectionForms()</code>","text":"<pre><code>deleteDataCollectionForms($collection_table_token): object\n</code></pre> <p>Delete Data Collection Forms</p> <p>Delete a data collection table with its token. The token can be retrieved with the call List Data Collection Tables, or from the table's URL as its suffix.</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$collection_table_token = 12345678-d378-4c12-8d7a-6da0fb48ee83; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteDataCollectionForms($collection_table_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;deleteDataCollectionForms: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#parameters","title":"Parameters","text":"Name Type Description Notes collection_table_token string"},{"location":"clients/php/SysAdmin/Api/FormsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#deleteform","title":"<code>deleteForm()</code>","text":"<pre><code>deleteForm($form_token): object\n</code></pre> <p>Delete Form</p> <p>Delete a form with its token. Get a form's token with the call List Forms.</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$form_token = 12345678-d378-4c12-8d7a-6da0fb48ee83; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteForm($form_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;deleteForm: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes form_token string"},{"location":"clients/php/SysAdmin/Api/FormsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#listdatacollectionforms","title":"<code>listDataCollectionForms()</code>","text":"<pre><code>listDataCollectionForms(): object\n</code></pre> <p>List Data Collection Forms</p> <p>List all the data collection forms generated in the system.</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listDataCollectionForms();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;listDataCollectionForms: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#parameters_2","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#listforms","title":"<code>listForms()</code>","text":"<pre><code>listForms(): object\n</code></pre> <p>List Forms</p> <p>List all the forms in the current system. The returned <code>id</code> value is the ID of the form, and the <code>token</code> is the form's token.</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listForms();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;listForms: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#parameters_3","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/FormsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/","title":"SeaTable\\Client\\GroupsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createGroup() POST /api/v2.1/admin/groups/ Create Group deleteGroup() DELETE /api/v2.1/admin/groups/{group_id}/ Delete Group listGroups() GET /api/v2.1/admin/groups/ List Groups transferGroup() PUT /api/v2.1/admin/groups/{group_id}/ Transfer Group"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#creategroup","title":"<code>createGroup()</code>","text":"<pre><code>createGroup($create_group_request): object\n</code></pre> <p>Create Group</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$create_group_request = new \\SeaTable\\Client\\SysAdmin/Model\\CreateGroupRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\CreateGroupRequest\n\ntry {\n    $result = $apiInstance-&gt;createGroup($create_group_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;createGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#parameters","title":"Parameters","text":"Name Type Description Notes create_group_request \\SeaTable\\Client\\SysAdmin/Model\\CreateGroupRequest [optional]"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#deletegroup","title":"<code>deleteGroup()</code>","text":"<pre><code>deleteGroup($group_id): object\n</code></pre> <p>Delete Group</p> <p>Delete a group with its ID.</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 48; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteGroup($group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;deleteGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes group_id int"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#listgroups","title":"<code>listGroups()</code>","text":"<pre><code>listGroups($page, $per_page, $name): object\n</code></pre> <p>List Groups</p> <p>Shows a list of all groups of the system. You can also search for a group by his name.</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n$name = 'name_example'; // string | Enter any query string from the name of the group.\n\ntry {\n    $result = $apiInstance-&gt;listGroups($page, $per_page, $name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;listGroups: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional] name string Enter any query string from the name of the group. [optional]"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#transfergroup","title":"<code>transferGroup()</code>","text":"<pre><code>transferGroup($group_id, $transfer_group_request): object\n</code></pre> <p>Transfer Group</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 48; // int\n$transfer_group_request = new \\SeaTable\\Client\\SysAdmin/Model\\TransferGroupRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\TransferGroupRequest\n\ntry {\n    $result = $apiInstance-&gt;transferGroup($group_id, $transfer_group_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;transferGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes group_id int transfer_group_request \\SeaTable\\Client\\SysAdmin/Model\\TransferGroupRequest [optional]"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/GroupsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/","title":"SeaTable\\Client\\LogsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description listAbuseReports() GET /api/v2.1/admin/abuse-reports/ List Abuse Reports listEmailLogs() GET /api/v2.1/admin/email-sending-logs/ List Email Logs listLoginLogs() GET /api/v2.1/admin/logs/login-logs/ List Login Logs listRegistrationLogs() GET /api/v2.1/admin/registration-logs/ List Registration Logs updateAbuseReport() PUT /api/v2.1/admin/abuse-reports/{abuse_report_id}/ Update Abuse Report"},{"location":"clients/php/SysAdmin/Api/LogsApi/#listabusereports","title":"<code>listAbuseReports()</code>","text":"<pre><code>listAbuseReports(): object\n</code></pre> <p>List Abuse Reports</p> <p>As system administrator, use this API request to list current abuse reports in the system.  The returned <code>id</code> param is the ID of each abuse report.</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\LogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listAbuseReports();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LogsApi-&gt;listAbuseReports: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#listemaillogs","title":"<code>listEmailLogs()</code>","text":"<pre><code>listEmailLogs($page, $per_page): object\n</code></pre> <p>List Email Logs</p> <p>List the email sending logs in the system. The emails sent via 3rd party email accounts are listed here.</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\LogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listEmailLogs($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LogsApi-&gt;listEmailLogs: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/LogsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#listloginlogs","title":"<code>listLoginLogs()</code>","text":"<pre><code>listLoginLogs($page, $per_page): object\n</code></pre> <p>List Login Logs</p> <p>List the logins of all users in the system.</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\LogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listLoginLogs($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LogsApi-&gt;listLoginLogs: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/LogsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#listregistrationlogs","title":"<code>listRegistrationLogs()</code>","text":"<pre><code>listRegistrationLogs()\n</code></pre> <p>List Registration Logs</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\LogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $apiInstance-&gt;listRegistrationLogs();\n} catch (Exception $e) {\n    echo 'Exception when calling LogsApi-&gt;listRegistrationLogs: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#parameters_3","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#return-type_3","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#updateabusereport","title":"<code>updateAbuseReport()</code>","text":"<pre><code>updateAbuseReport($abuse_report_id, $update_abuse_report_request): object\n</code></pre> <p>Update Abuse Report</p> <p>As system administrator, use this API request to list current abuse reports in the system. In the request URL, type in the <code>abuse_report_id</code> that you got from the call to list abuse reports.</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\LogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$abuse_report_id = 1; // int\n$update_abuse_report_request = new \\SeaTable\\Client\\SysAdmin/Model\\UpdateAbuseReportRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\UpdateAbuseReportRequest\n\ntry {\n    $result = $apiInstance-&gt;updateAbuseReport($abuse_report_id, $update_abuse_report_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling LogsApi-&gt;updateAbuseReport: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes abuse_report_id int update_abuse_report_request \\SeaTable\\Client\\SysAdmin/Model\\UpdateAbuseReportRequest [optional]"},{"location":"clients/php/SysAdmin/Api/LogsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/LogsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/","title":"SeaTable\\Client\\NotificationsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteInvalidNotifications() DELETE /api/v2.1/admin/invalid-notification-rules/ Delete Invalid Notifications deleteNotificationRule() DELETE /api/v2.1/admin/notification-rules/{notification_rule_id}/ Delete Notification listInvalidNotifications() GET /api/v2.1/admin/invalid-notification-rules/ List Invalid Notifications listNotificationRules() GET /api/v2.1/admin/notification-rules/ List Notification Rules"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#deleteinvalidnotifications","title":"<code>deleteInvalidNotifications()</code>","text":"<pre><code>deleteInvalidNotifications(): object\n</code></pre> <p>Delete Invalid Notifications</p> <p>Delete all the notification rules that are invalid.</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;deleteInvalidNotifications();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;deleteInvalidNotifications: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#deletenotificationrule","title":"<code>deleteNotificationRule()</code>","text":"<pre><code>deleteNotificationRule($notification_rule_id): object\n</code></pre> <p>Delete Notification</p> <p>Delete a notification rule by its ID.</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$notification_rule_id = 2; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteNotificationRule($notification_rule_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;deleteNotificationRule: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes notification_rule_id int"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#listinvalidnotifications","title":"<code>listInvalidNotifications()</code>","text":"<pre><code>listInvalidNotifications($page, $per_page): object\n</code></pre> <p>List Invalid Notifications</p> <p>The system can detect notification rules that are invalid. You can list all the invalid notification rules here.</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listInvalidNotifications($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;listInvalidNotifications: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#listnotificationrules","title":"<code>listNotificationRules()</code>","text":"<pre><code>listNotificationRules($page, $per_page): object\n</code></pre> <p>List Notification Rules</p> <p>List all the existing notification rules in the system. The returned <code>id</code> values are the IDs of each notification rule.</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listNotificationRules($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;listNotificationRules: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/NotificationsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/","title":"SeaTable\\Client\\PluginsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addPlugin() POST /api/v2.1/admin/dtable-system-plugins/ Add Plugin deletePlugin() DELETE /api/v2.1/admin/dtable-system-plugins/{plugin_id}/ Delete Plugin listPlugins() GET /api/v2.1/admin/dtable-system-plugins/ List Plugins listPluginsInstallCount() GET /api/v2.1/admin/plugins-install-count/ List Plugins Install Count updatePlugin() PUT /api/v2.1/admin/dtable-system-plugins/{plugin_id}/ Update Plugin"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#addplugin","title":"<code>addPlugin()</code>","text":"<pre><code>addPlugin($content_type, $plugin): object\n</code></pre> <p>Add Plugin</p> <p>Add a plugin with a .zip file. This file could be retrieved from the internet, for example, from the SeaTable Plugins Market.</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\PluginsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$content_type = multipart/form-data;; // string\n$plugin = \"/path/to/file.txt\"; // \\SplFileObject | Path and file name to the plugin file.\n\ntry {\n    $result = $apiInstance-&gt;addPlugin($content_type, $plugin);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling PluginsApi-&gt;addPlugin: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#parameters","title":"Parameters","text":"Name Type Description Notes content_type string [optional] plugin \\SplFileObject\\SplFileObject Path and file name to the plugin file. [optional]"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#deleteplugin","title":"<code>deletePlugin()</code>","text":"<pre><code>deletePlugin($plugin_id): object\n</code></pre> <p>Delete Plugin</p> <p>Delete a plugin via its ID (retrieved from the call List Plugins).</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\PluginsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$plugin_id = 5; // int\n\ntry {\n    $result = $apiInstance-&gt;deletePlugin($plugin_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling PluginsApi-&gt;deletePlugin: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes plugin_id int"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#listplugins","title":"<code>listPlugins()</code>","text":"<pre><code>listPlugins(): object\n</code></pre> <p>List Plugins</p> <p>List all the plugins currently available in the system.</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\PluginsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listPlugins();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling PluginsApi-&gt;listPlugins: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#parameters_2","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#listpluginsinstallcount","title":"<code>listPluginsInstallCount()</code>","text":"<pre><code>listPluginsInstallCount()\n</code></pre> <p>List Plugins Install Count</p> <p>List plugins install count logs</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\PluginsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $apiInstance-&gt;listPluginsInstallCount();\n} catch (Exception $e) {\n    echo 'Exception when calling PluginsApi-&gt;listPluginsInstallCount: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#parameters_3","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#return-type_3","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#updateplugin","title":"<code>updatePlugin()</code>","text":"<pre><code>updatePlugin($plugin_id, $content_type, $plugin): object\n</code></pre> <p>Update Plugin</p> <p>Update a plugin via its ID (retrieved from the call List Plugins) with a .zip file.</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\PluginsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$plugin_id = 5; // int\n$content_type = multipart/form-data; boundary; // string\n$plugin = \"/path/to/file.txt\"; // \\SplFileObject | Path and file name to the plugin file.\n\ntry {\n    $result = $apiInstance-&gt;updatePlugin($plugin_id, $content_type, $plugin);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling PluginsApi-&gt;updatePlugin: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes plugin_id int content_type string [optional] plugin \\SplFileObject\\SplFileObject Path and file name to the plugin file. [optional]"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/PluginsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/","title":"SeaTable\\Client\\SharingLinksApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteBaseExternalLink() DELETE /api/v2.1/admin/external-links/{external_link_token}/ Delete Base External Link deleteViewExternalLink() DELETE /api/v2.1/admin/view-external-links/{view_external_link_token}/ Delete View External Link listBaseExternalLinks() GET /api/v2.1/admin/dtable/{base_id}/external-links/ List Base External Links listExternalLinks() GET /api/v2.1/admin/external-links/ List External Links listViewExternalLinks() GET /api/v2.1/admin/view-external-links/ List View External Links"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#deletebaseexternallink","title":"<code>deleteBaseExternalLink()</code>","text":"<pre><code>deleteBaseExternalLink($external_link_token): object\n</code></pre> <p>Delete Base External Link</p> <p>A base external link can be deleted by its token.</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$external_link_token = fleischkaesebroetchen; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteBaseExternalLink($external_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;deleteBaseExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#parameters","title":"Parameters","text":"Name Type Description Notes external_link_token string"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#deleteviewexternallink","title":"<code>deleteViewExternalLink()</code>","text":"<pre><code>deleteViewExternalLink($view_external_link_token): object\n</code></pre> <p>Delete View External Link</p> <p>Delete a view external link with its token.</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$view_external_link_token = 1f0447eab4df4343ab6d; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteViewExternalLink($view_external_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;deleteViewExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes view_external_link_token string"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#listbaseexternallinks","title":"<code>listBaseExternalLinks()</code>","text":"<pre><code>listBaseExternalLinks($base_id): object\n</code></pre> <p>List Base External Links</p> <p>List all the external links and view external links of a base. For this request, you'll need the base's <code>base_id</code>, which is to be distinguished from the base's <code>base_uuid</code>. You can retrieve a base's <code>base_id</code> with the API request e.g. List User's Bases.</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_id = base_id; // string | The id of the base. This is not the base_uuid.\n\ntry {\n    $result = $apiInstance-&gt;listBaseExternalLinks($base_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;listBaseExternalLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_id string The id of the base. This is not the base_uuid."},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#listexternallinks","title":"<code>listExternalLinks()</code>","text":"<pre><code>listExternalLinks($page, $per_page): object\n</code></pre> <p>List External Links</p> <p>List all the base external links generated in the system.  In the returned objects, you can see the creator of the links, and how many times these links have been viewed.</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listExternalLinks($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;listExternalLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#listviewexternallinks","title":"<code>listViewExternalLinks()</code>","text":"<pre><code>listViewExternalLinks(): object\n</code></pre> <p>List View External Links</p> <p>Use this request to list all the view external links generated in the current system.</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listViewExternalLinks();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;listViewExternalLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#parameters_4","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SharingLinksApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/","title":"SeaTable\\Client\\StatisticsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getActiveUsersPerDay() GET /api/v2.1/admin/statistics/active-users/ Get Active Users (per Day) getAutomationRules() GET /api/v2.1/admin/statistics/auto-rules/ Get Automation Rules getExternalApps() GET /api/v2.1/admin/statistics/external-apps/ Get External Apps getScriptRunningCountByUser() GET /api/v2.1/admin/statistics/scripts-running/ Get Script Running Count by User listActiveUsersByDay() GET /api/v2.1/admin/daily-active-users/ List Active Users (one Day) listScriptTasks() GET /api/v2.1/admin/scripts-tasks/ List Scripts Tasks"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#getactiveusersperday","title":"<code>getActiveUsersPerDay()</code>","text":"<pre><code>getActiveUsersPerDay($start, $end): object\n</code></pre> <p>Get Active Users (per Day)</p> <p>List the number of daily active users in a given period of time.</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\StatisticsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$start = 2021-02-21+00:00:00; // string | Starting time of the statistics in ISO format like in the example. Required.\n$end = 2021-02-24+00:00:00; // string | Ending time of the statistics in ISO format like in the example. Required.\n\ntry {\n    $result = $apiInstance-&gt;getActiveUsersPerDay($start, $end);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StatisticsApi-&gt;getActiveUsersPerDay: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#parameters","title":"Parameters","text":"Name Type Description Notes start string Starting time of the statistics in ISO format like in the example. Required. [optional] end string Ending time of the statistics in ISO format like in the example. Required. [optional]"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#getautomationrules","title":"<code>getAutomationRules()</code>","text":"<pre><code>getAutomationRules($is_user, $month): object\n</code></pre> <p>Get Automation Rules</p> <p>The system documents automation rules by single users (users who are not in any teams) or by teams. In most cases, especially on cloud.seatable.io, there're no such scenario that a single user could exist, so the usage of the param <code>is_user</code> as <code>true</code> is seldom. As this API request is developed in SeaTable 2.4.2 which came out in September 2021, automation rules statistics before September 2021 could not be correctly summarized with this call.</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\StatisticsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$is_user = false; // bool | Whether you'd like to list automation rules triggered by single users who are not in any teams (`true`) or by teams (`false`).  The usage of `true` here is seldom meaningful for cloud.seatable.io as all the users in the SeaTable Cloud are team users.\n$month = 202109; // int | For which month you'd like to list the statistics in the format of YYYYMM. Statistics of automation rules before 202109 are not correctly summarized.\n\ntry {\n    $result = $apiInstance-&gt;getAutomationRules($is_user, $month);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StatisticsApi-&gt;getAutomationRules: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes is_user bool Whether you'd like to list automation rules triggered by single users who are not in any teams (`true`) or by teams (`false`).  The usage of `true` here is seldom meaningful for cloud.seatable.io as all the users in the SeaTable Cloud are team users. month int For which month you'd like to list the statistics in the format of YYYYMM. Statistics of automation rules before 202109 are not correctly summarized. [optional]"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#getexternalapps","title":"<code>getExternalApps()</code>","text":"<pre><code>getExternalApps($is_user, $month, $page, $per_page): object\n</code></pre> <p>Get External Apps</p> <p>As system admin, you can have an overview of the external apps statistics with this API request. The result can be queried by user or by team.  In the request parameter:  *   <code>is_user</code> is <code>true</code> by default. If you need to see the results by team, use this param and let it be <code>false</code>. *   <code>month</code> is the time filter, and it lets you see the result by month. Use e.g. 202207 for July, 2022. *   <code>page</code> and <code>per_page</code> are your controls of the returned pages and results per page.</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\StatisticsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$is_user = false; // bool | Whether you'd like to list automation rules triggered by single users who are not in any teams (`true`) or by teams (`false`).  The usage of `true` here is seldom meaningful for cloud.seatable.io as all the users in the SeaTable Cloud are team users.\n$month = 202109; // int | For which month you'd like to list the statistics in the format of YYYYMM. Statistics of automation rules before 202109 are not correctly summarized.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;getExternalApps($is_user, $month, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StatisticsApi-&gt;getExternalApps: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes is_user bool Whether you'd like to list automation rules triggered by single users who are not in any teams (`true`) or by teams (`false`).  The usage of `true` here is seldom meaningful for cloud.seatable.io as all the users in the SeaTable Cloud are team users. month int For which month you'd like to list the statistics in the format of YYYYMM. Statistics of automation rules before 202109 are not correctly summarized. [optional] page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#getscriptrunningcountbyuser","title":"<code>getScriptRunningCountByUser()</code>","text":"<pre><code>getScriptRunningCountByUser($is_user, $owner, $month): object\n</code></pre> <p>Get Script Running Count by User</p> <p>Use this request to overview the scripts running statistics of a certain user, or all the users in your system.  In the response:  *   <code>total_run_count</code> is the total number of runs; *   <code>total_run_time</code> is the total time of runs, in seconds.</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\StatisticsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$is_user = false; // bool | Whether you'd like to list automation rules triggered by single users who are not in any teams (`true`) or by teams (`false`).  The usage of `true` here is seldom meaningful for cloud.seatable.io as all the users in the SeaTable Cloud are team users.\n$owner = 123abc456def789ghi123jkl456mno789@auth.local; // string | The ID of the user you are querying. Optional. If you don't define a user, all the users are queried.\n$month = 202109; // int | For which month you'd like to list the statistics in the format of YYYYMM. Statistics of automation rules before 202109 are not correctly summarized.\n\ntry {\n    $result = $apiInstance-&gt;getScriptRunningCountByUser($is_user, $owner, $month);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StatisticsApi-&gt;getScriptRunningCountByUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes is_user bool Whether you'd like to list automation rules triggered by single users who are not in any teams (`true`) or by teams (`false`).  The usage of `true` here is seldom meaningful for cloud.seatable.io as all the users in the SeaTable Cloud are team users. owner string The ID of the user you are querying. Optional. If you don't define a user, all the users are queried. [optional] month int For which month you'd like to list the statistics in the format of YYYYMM. Statistics of automation rules before 202109 are not correctly summarized. [optional]"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#listactiveusersbyday","title":"<code>listActiveUsersByDay()</code>","text":"<pre><code>listActiveUsersByDay($date, $page, $per_page): object\n</code></pre> <p>List Active Users (one Day)</p> <p>List the active users' details on a given day.</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\StatisticsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$date = 2020-06-19+00:00:00; // string | The date in ISO format. Required.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listActiveUsersByDay($date, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StatisticsApi-&gt;listActiveUsersByDay: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes date string The date in ISO format. Required. [optional] page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#listscripttasks","title":"<code>listScriptTasks()</code>","text":"<pre><code>listScriptTasks($page, $per_page): object\n</code></pre> <p>List Scripts Tasks</p> <p>List off all the scheduled scripts tasks in the current system.</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\StatisticsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listScriptTasks($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StatisticsApi-&gt;listScriptTasks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/StatisticsApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/","title":"SeaTable\\Client\\SystemInfoCustomizingApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getSystemInformation() GET /api/v2.1/admin/sysinfo/ Get system information updateFavicon() POST /api/v2.1/admin/favicon/ Update Favicon updateGeneralSettings() PUT /api/v2.1/admin/web-settings/ Update General Settings updateLoginBackgroundImage() POST /api/v2.1/admin/login-background-image/ Update Login Background Image updateLogo() POST /api/v2.1/admin/logo/ Update Logo"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#getsysteminformation","title":"<code>getSystemInformation()</code>","text":"<pre><code>getSystemInformation(): object\n</code></pre> <p>Get system information</p> <p>Get the general system information with this request as system administrator.</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SystemInfoCustomizingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;getSystemInformation();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemInfoCustomizingApi-&gt;getSystemInformation: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#updatefavicon","title":"<code>updateFavicon()</code>","text":"<pre><code>updateFavicon($favicon, $with_notify): object\n</code></pre> <p>Update Favicon</p> <p>Upload an image (.png with a transparent background is recommended) as the favicon of your SeaTable installation. As per the <code>with_notify</code> param in the request body: you can use this API request twice to upload two favicons: - one is the \\\"normal\\\" favicon\uff08leave <code>with_nofity</code> blank). - the other one is the \\\"notifying\\\" favicon which should have something like a \\\"notifying\\\" red dot on it (set <code>with_notify</code> to <code>true</code>). </p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SystemInfoCustomizingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$favicon = \"/path/to/file.txt\"; // \\SplFileObject | The path and filename of the image file of your favicon.\n$with_notify = True; // bool | Leave this param as its default (`false`) to upload your favicon, and use this param as `true` to upload a favicon with a notification sign.\n\ntry {\n    $result = $apiInstance-&gt;updateFavicon($favicon, $with_notify);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemInfoCustomizingApi-&gt;updateFavicon: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes favicon \\SplFileObject\\SplFileObject The path and filename of the image file of your favicon. [optional] with_notify bool Leave this param as its default (`false`) to upload your favicon, and use this param as `true` to upload a favicon with a notification sign. [optional]"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#updategeneralsettings","title":"<code>updateGeneralSettings()</code>","text":"<pre><code>updateGeneralSettings($update_general_settings_request): object\n</code></pre> <p>Update General Settings</p> <p>Change the general settings of your system. For details, see the description for each parameter in the request body. Just like the settings via web interface, these settings via API request are also saved in the database table (dtable-db/constance_config). They have a higher priority over the settings in the config files. However, in the <code>dtable_web_settings</code> you'll find more setting options. For details, visit the SeaTable Admin Manual.</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SystemInfoCustomizingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$update_general_settings_request = new \\SeaTable\\Client\\SysAdmin/Model\\UpdateGeneralSettingsRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\UpdateGeneralSettingsRequest\n\ntry {\n    $result = $apiInstance-&gt;updateGeneralSettings($update_general_settings_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemInfoCustomizingApi-&gt;updateGeneralSettings: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes update_general_settings_request \\SeaTable\\Client\\SysAdmin/Model\\UpdateGeneralSettingsRequest [optional]"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#updateloginbackgroundimage","title":"<code>updateLoginBackgroundImage()</code>","text":"<pre><code>updateLoginBackgroundImage($login_bg_image): object\n</code></pre> <p>Update Login Background Image</p> <p>Change the background image shown on the login mask.</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SystemInfoCustomizingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$login_bg_image = \"/path/to/file.txt\"; // \\SplFileObject | The path and filename of the background image.\n\ntry {\n    $result = $apiInstance-&gt;updateLoginBackgroundImage($login_bg_image);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemInfoCustomizingApi-&gt;updateLoginBackgroundImage: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes login_bg_image \\SplFileObject\\SplFileObject The path and filename of the background image. [optional]"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#updatelogo","title":"<code>updateLogo()</code>","text":"<pre><code>updateLogo($logo): object\n</code></pre> <p>Update Logo</p> <p>Upload an image (.png with a transparent background is recommended) as the logo of your SeaTable installation.</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SystemInfoCustomizingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$logo = \"/path/to/file.txt\"; // \\SplFileObject | The path and filename of the image file of your logo.\n\ntry {\n    $result = $apiInstance-&gt;updateLogo($logo);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemInfoCustomizingApi-&gt;updateLogo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes logo \\SplFileObject\\SplFileObject The path and filename of the image file of your logo. [optional]"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SystemInfoCustomizingApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/","title":"SeaTable\\Client\\SystemNotificationsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addNotificationToUser() POST /api/v2.1/admin/sys-user-notifications/ Add Notification to User deleteNotification() DELETE /api/v2.1/admin/sys-user-notifications/{sys_notification_id}/ Delete Notification listNotifications() GET /api/v2.1/admin/sys-user-notifications/ List Notifications"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#addnotificationtouser","title":"<code>addNotificationToUser()</code>","text":"<pre><code>addNotificationToUser($add_notification_to_user_request): object\n</code></pre> <p>Add Notification to User</p> <p>Add a system notification to a specific user with their ID.</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SystemNotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$add_notification_to_user_request = new \\SeaTable\\Client\\SysAdmin/Model\\AddNotificationToUserRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\AddNotificationToUserRequest\n\ntry {\n    $result = $apiInstance-&gt;addNotificationToUser($add_notification_to_user_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemNotificationsApi-&gt;addNotificationToUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#parameters","title":"Parameters","text":"Name Type Description Notes add_notification_to_user_request \\SeaTable\\Client\\SysAdmin/Model\\AddNotificationToUserRequest [optional]"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#deletenotification","title":"<code>deleteNotification()</code>","text":"<pre><code>deleteNotification($sys_notification_id): object\n</code></pre> <p>Delete Notification</p> <p>Delete a system notification with its ID.</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SystemNotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$sys_notification_id = 1; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteNotification($sys_notification_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemNotificationsApi-&gt;deleteNotification: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes sys_notification_id int"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#listnotifications","title":"<code>listNotifications()</code>","text":"<pre><code>listNotifications($page, $per_page): object\n</code></pre> <p>List Notifications</p> <p>List all the system notifications sent to the users.</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\SystemNotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listNotifications($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemNotificationsApi-&gt;listNotifications: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/SystemNotificationsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/","title":"SeaTable\\Client\\TeamsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addTeam() POST /api/v2.1/admin/organizations/ Add Team addTeamUser() POST /api/v2.1/admin/organizations/{org_id}/users/ Add Team User deleteTeam() DELETE /api/v2.1/admin/organizations/{org_id}/ Delete Team deleteTeamGroup() DELETE /api/v2.1/admin/organizations/{org_id}/groups/{group_id}/ Delete Group deleteTeamUser() DELETE /api/v2.1/admin/organizations/{org_id}/users/{user_id}/ Delete Team User getOrganizationNames() GET /api/v2.1/admin/organizations-basic-info/ Get Organization Names listTeamBases() GET /api/v2.1/admin/organizations/{org_id}/dtables/ List Team Bases listTeamGroups() GET /api/v2.1/admin/organizations/{org_id}/groups/ List Team Groups listTeamUsers() GET /api/v2.1/admin/organizations/{org_id}/users/ List Team Users listTeams() GET /api/v2.1/admin/organizations/ List Teams searchTeam() GET /api/v2.1/admin/organizations/{org_id}/ Search Team updateTeam() PUT /api/v2.1/admin/organizations/{org_id}/ Update Team updateTeamUser() PUT /api/v2.1/admin/organizations/{org_id}/users/{user_id}/ Update Team User"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#addteam","title":"<code>addTeam()</code>","text":"<pre><code>addTeam($add_team_request): object\n</code></pre> <p>Add Team</p> <p>Add a team (organization) with its name and admin credentials. In the request body, define the new team admin's <code>admin_email</code>, <code>admin_name</code> and <code>password</code>. SeaTable does not automatically create a workspace for a newly added user: the <code>with_workspace</code> parameter is <code>false</code> by default. If you would like your new user to have a workspace when they are added (so that they can start operating workspaces and bases right away with API requests), make sure you set <code>true</code> for this parameter. Otherwise, their workspace will only be created when they login to the SeaTable web interface for the first time.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$add_team_request = new \\SeaTable\\Client\\SysAdmin/Model\\AddTeamRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\AddTeamRequest\n\ntry {\n    $result = $apiInstance-&gt;addTeam($add_team_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;addTeam: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters","title":"Parameters","text":"Name Type Description Notes add_team_request \\SeaTable\\Client\\SysAdmin/Model\\AddTeamRequest [optional]"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#addteamuser","title":"<code>addTeamUser()</code>","text":"<pre><code>addTeamUser($org_id, $add_team_user_request): object\n</code></pre> <p>Add Team User</p> <p>Add a new team user with desired details. In the request body: \\ <code>email</code> is the contact email address of your new user; \\ <code>password</code> could be an initial login password you asign to them; \\ <code>name</code> is the display name of your new user; \\ <code>with_workspace</code> should be set to <code>true</code> if you want your new user to acquire a <code>workspace_id</code> immediately after adding them. The default value is <code>false</code>, which means they won't have a <code>workspace_id</code> until they login for the first time.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$add_team_user_request = new \\SeaTable\\Client\\SysAdmin/Model\\AddTeamUserRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\AddTeamUserRequest\n\ntry {\n    $result = $apiInstance-&gt;addTeamUser($org_id, $add_team_user_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;addTeamUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin. add_team_user_request \\SeaTable\\Client\\SysAdmin/Model\\AddTeamUserRequest [optional]"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#deleteteam","title":"<code>deleteTeam()</code>","text":"<pre><code>deleteTeam($org_id): object\n</code></pre> <p>Delete Team</p> <p>Delete a team (organization) with its ID. This will eliminate the team! However, this won't delete the team users - but all its members will become team-less users in the system.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $result = $apiInstance-&gt;deleteTeam($org_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;deleteTeam: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#deleteteamgroup","title":"<code>deleteTeamGroup()</code>","text":"<pre><code>deleteTeamGroup($org_id, $group_id): object\n</code></pre> <p>Delete Group</p> <p>Delete a group with its group_id. As system administrator, you can delete any group in the system by their ID, no matter in which team they are.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_id = 48; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteTeamGroup($org_id, $group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;deleteTeamGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin. group_id int"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#deleteteamuser","title":"<code>deleteTeamUser()</code>","text":"<pre><code>deleteTeamUser($org_id, $user_id): object\n</code></pre> <p>Delete Team User</p> <p>Delete a team user with this request.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;deleteTeamUser($org_id, $user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;deleteTeamUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#getorganizationnames","title":"<code>getOrganizationNames()</code>","text":"<pre><code>getOrganizationNames($org_ids)\n</code></pre> <p>Get Organization Names</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_ids = 2; // string[]\n\ntry {\n    $apiInstance-&gt;getOrganizationNames($org_ids);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;getOrganizationNames: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes org_ids string[] [optional]"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_5","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#listteambases","title":"<code>listTeamBases()</code>","text":"<pre><code>listTeamBases($org_id, $page, $per_page): object\n</code></pre> <p>List Team Bases</p> <p>List all the bases of a team. As system administrator, you can see the information of these bases, but you do not have access to the data inside of them.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listTeamBases($org_id, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;listTeamBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#listteamgroups","title":"<code>listTeamGroups()</code>","text":"<pre><code>listTeamGroups($org_id): object\n</code></pre> <p>List Team Groups</p> <p>List all the groups in a team with its <code>org_id</code>.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $result = $apiInstance-&gt;listTeamGroups($org_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;listTeamGroups: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#listteamusers","title":"<code>listTeamUsers()</code>","text":"<pre><code>listTeamUsers($org_id): object\n</code></pre> <p>List Team Users</p> <p>List a team's members with their detailed information. The <code>is_org_admin</code> value in the response indicates if this member is the administrator of the team.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $result = $apiInstance-&gt;listTeamUsers($org_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;listTeamUsers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_8","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_8","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#listteams","title":"<code>listTeams()</code>","text":"<pre><code>listTeams($page, $per_page, $role): object\n</code></pre> <p>List Teams</p> <p>List all the current teams (organizations) in the system. Use the <code>role</code> filter to only return a type of teams. The exact roles depend on your configuration.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_9","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n$role = default; // string | Optional. When left blank, all role types are returned.\n\ntry {\n    $result = $apiInstance-&gt;listTeams($page, $per_page, $role);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;listTeams: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional] role string Optional. When left blank, all role types are returned. [optional]"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_9","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_9","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#searchteam","title":"<code>searchTeam()</code>","text":"<pre><code>searchTeam($org_id): object\n</code></pre> <p>Search Team</p> <p>As system administrator, you can query a team by its <code>org_id</code> with this API request.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_10","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $result = $apiInstance-&gt;searchTeam($org_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;searchTeam: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_10","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_10","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#updateteam","title":"<code>updateTeam()</code>","text":"<pre><code>updateTeam($org_id, $update_team_request): object\n</code></pre> <p>Update Team</p> <p>Change an organization's attributes.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_11","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$update_team_request = new \\SeaTable\\Client\\SysAdmin/Model\\UpdateTeamRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\UpdateTeamRequest\n\ntry {\n    $result = $apiInstance-&gt;updateTeam($org_id, $update_team_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;updateTeam: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin. update_team_request \\SeaTable\\Client\\SysAdmin/Model\\UpdateTeamRequest [optional]"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_11","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_11","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#updateteamuser","title":"<code>updateTeamUser()</code>","text":"<pre><code>updateTeamUser($org_id, $user_id, $update_team_user_request): object\n</code></pre> <p>Update Team User</p> <p>The system admin can authorize a regular team member to have team admin rights.</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#example_12","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\TeamsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The id of your team/organization. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$update_team_user_request = new \\SeaTable\\Client\\SysAdmin/Model\\UpdateTeamUserRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\UpdateTeamUserRequest\n\ntry {\n    $result = $apiInstance-&gt;updateTeamUser($org_id, $user_id, $update_team_user_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling TeamsApi-&gt;updateTeamUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#parameters_12","title":"Parameters","text":"Name Type Description Notes org_id int The id of your team/organization. Get it from Get Team. Contact your team admin, if you are not the admin. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. update_team_user_request \\SeaTable\\Client\\SysAdmin/Model\\UpdateTeamUserRequest [optional]"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#return-type_12","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/TeamsApi/#authorization_12","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/","title":"SeaTable\\Client\\UsersApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addNewUser() POST /api/v2.1/admin/users/ Add New User deleteUser() DELETE /api/v2.1/admin/users/{user_id}/ Delete User disableTwoFactor() DELETE /api2/two-factor-auth/{user_id}/ Disable 2FA enforceTwoFactor() PUT /api/v2.1/admin/users/{user_id}/two-factor-auth/ Enforce 2FA getUser() GET /api/v2.1/admin/users/{user_id}/ Get User importUsers() POST /api/v2.1/admin/import-users/ Import users listAdminUsers() GET /api/v2.1/admin/admin-users/ List Admin Users listBasesSharedToUser() GET /api/v2.1/admin/users/{user_id}/shared-dtables/ List Bases Shared to User listUserStorageObjects() GET /api/v2.1/admin/users/{user_id}/storage/ List User's Storage Objects listUsers() GET /api/v2.1/admin/users/ List Users resetUserPassword() PUT /api/v2.1/admin/users/{user_id}/reset-password/ Reset User's Password searchUser() GET /api/v2.1/admin/search-user/ Search User / Users searchUserByOrgId() GET /api/v2.1/admin/search-user-by-org-id/ Search User by Org-ID updateAdminRole() PUT /api/v2.1/admin/admin-role/ Update Admin's Role updateUser() PUT /api/v2.1/admin/users/{user_id}/ Update User"},{"location":"clients/php/SysAdmin/Api/UsersApi/#addnewuser","title":"<code>addNewUser()</code>","text":"<pre><code>addNewUser($add_new_user_request): object\n</code></pre> <p>Add New User</p> <p>Add a new user with desired details.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$add_new_user_request = new \\SeaTable\\Client\\SysAdmin/Model\\AddNewUserRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\AddNewUserRequest\n\ntry {\n    $result = $apiInstance-&gt;addNewUser($add_new_user_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;addNewUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters","title":"Parameters","text":"Name Type Description Notes add_new_user_request \\SeaTable\\Client\\SysAdmin/Model\\AddNewUserRequest [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#deleteuser","title":"<code>deleteUser()</code>","text":"<pre><code>deleteUser($user_id): object\n</code></pre> <p>Delete User</p> <p>Delete a user by their ID.  If the user is in a team, you cannot delete them with this request, but with the request Delete Team User.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;deleteUser($user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;deleteUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#disabletwofactor","title":"<code>disableTwoFactor()</code>","text":"<pre><code>disableTwoFactor($user_id): object\n</code></pre> <p>Disable 2FA</p> <p>When users activate 2 factor authentication (2FA) in their personal settings, they need to provide a one-time passcode after entering their username and password at login.  However, sometimes bad things happen: lost of the phone or similar, and they cannot retrieve that passcode any more. If they also didn't save their backup codes, login would become impossible for them.  They should contact you, the system administrator then. You can then use this API request to disable their 2FA. After successful operation, they can login with just their username and password, and eventually reactivate their 2FA.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;disableTwoFactor($user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;disableTwoFactor: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#enforcetwofactor","title":"<code>enforceTwoFactor()</code>","text":"<pre><code>enforceTwoFactor($user_id, $enforce_two_factor_request): object\n</code></pre> <p>Enforce 2FA</p> <p>As the system administrator, you can force each user to use 2-factor authentication (2FA).  When the value of <code>force_2fa</code> is <code>1</code> in this request, the user will be requested to activate 2FA by scanning a QR code next time they log in. To cancel enforcing them to use 2FA, change the value to <code>0</code> and send this request again.  This request is to be distinguished from the next request, because cancelling the enforcement doesn't necesssarily Disable 2FA for A User in System, which serves a different purpose.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$enforce_two_factor_request = new \\SeaTable\\Client\\SysAdmin/Model\\EnforceTwoFactorRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\EnforceTwoFactorRequest\n\ntry {\n    $result = $apiInstance-&gt;enforceTwoFactor($user_id, $enforce_two_factor_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;enforceTwoFactor: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. enforce_two_factor_request \\SeaTable\\Client\\SysAdmin/Model\\EnforceTwoFactorRequest [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#getuser","title":"<code>getUser()</code>","text":"<pre><code>getUser($user_id)\n</code></pre> <p>Get User</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $apiInstance-&gt;getUser($user_id);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;getUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_4","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#importusers","title":"<code>importUsers()</code>","text":"<pre><code>importUsers($file): object\n</code></pre> <p>Import users</p> <p>As system administrator, you can batch import users with an Excel file, which lists the users'  - <code>email</code> as their contact email address, which is also used to login as their username; - <code>password</code> as their initial login password; - Optionally, also define their display name, role, and quota.       An example user list Excel file looks like this:  </p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$file = \"/path/to/file.txt\"; // \\SplFileObject\n\ntry {\n    $result = $apiInstance-&gt;importUsers($file);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;importUsers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes file \\SplFileObject\\SplFileObject [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#listadminusers","title":"<code>listAdminUsers()</code>","text":"<pre><code>listAdminUsers(): object\n</code></pre> <p>List Admin Users</p> <p>List all the system administrators in the current system.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listAdminUsers();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;listAdminUsers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_6","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#listbasessharedtouser","title":"<code>listBasesSharedToUser()</code>","text":"<pre><code>listBasesSharedToUser($user_id, $page, $per_page): object\n</code></pre> <p>List Bases Shared to User</p> <p>List all the bases shared to a certain user with the user's ID.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listBasesSharedToUser($user_id, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;listBasesSharedToUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#listuserstorageobjects","title":"<code>listUserStorageObjects()</code>","text":"<pre><code>listUserStorageObjects($user_id, $parent_dir): object\n</code></pre> <p>List User's Storage Objects</p> <p>List objects stored by a certain user by the user's ID. In the returned list, if the <code>is_file</code> value is <code>false</code>, it means this object is a folder.  In this example, the <code>obj_name</code> stands for the base's UUID. By using <code>/asset/&lt;base_uuid&gt;</code> as the value of <code>parent_dir</code>, you can go into the base's asset folder, where there're probably a <code>files</code> and an <code>images</code> folder for your further inspections.  However, you as system administrator can only see the names and size of these objects, but cannot access the data saved in them.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$parent_dir = /asset/; // string\n\ntry {\n    $result = $apiInstance-&gt;listUserStorageObjects($user_id, $parent_dir);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;listUserStorageObjects: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. parent_dir string [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_8","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_8","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#listusers","title":"<code>listUsers()</code>","text":"<pre><code>listUsers($page, $per_page): object\n</code></pre> <p>List Users</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_9","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listUsers($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;listUsers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_9","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_9","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#resetuserpassword","title":"<code>resetUserPassword()</code>","text":"<pre><code>resetUserPassword($user_id): object\n</code></pre> <p>Reset User's Password</p> <p>Reset a user's password.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_10","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;resetUserPassword($user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;resetUserPassword: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_10","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_10","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#searchuser","title":"<code>searchUser()</code>","text":"<pre><code>searchUser($query): object\n</code></pre> <p>Search User / Users</p> <p>As system administrator, you can search all the users in your system by using this API request.   For the <code>query</code> value, you can give any string from the user's name, <code>email</code> (ID) or contact email address. All the users that fit to this search criteria will be listed in the response.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_11","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$query = teamuser001@example.com; // string | Enter any query string from the user's name, ID, or contact email.\n\ntry {\n    $result = $apiInstance-&gt;searchUser($query);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;searchUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes query string Enter any query string from the user's name, ID, or contact email. [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_11","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_11","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#searchuserbyorgid","title":"<code>searchUserByOrgId()</code>","text":"<pre><code>searchUserByOrgId($query, $org_id, $limit)\n</code></pre> <p>Search User by Org-ID</p> <p>Hier muss noch eine Beschreibung erg\u00e4nzt werden</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_12","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$query = 'query_example'; // string\n$org_id = 1; // int\n$limit = 10; // int | Limit of search User\n\ntry {\n    $apiInstance-&gt;searchUserByOrgId($query, $org_id, $limit);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;searchUserByOrgId: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_12","title":"Parameters","text":"Name Type Description Notes query string [optional] org_id int [optional] limit int Limit of search User [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_12","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_12","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#updateadminrole","title":"<code>updateAdminRole()</code>","text":"<pre><code>updateAdminRole($update_admins_role): object\n</code></pre> <p>Update Admin's Role</p> <p>Use this request with caution!! &gt; - &gt; Do not change your own role! Once your role has been changed, you cannot use this API request to change it back: You'll get a permission error, and lose access to a majority of admin functions. If you already did that, the only solution left for you is to login as another superuser and change your role back with that account. If there's no further superuser available, you can create one. Don't remember how to create a superuser? Read the Manual.  ### There are 4 types of system administrators: - default admin (can use this request) - system admin (cannot use this request) - daily admin (cannot use this request) - audit admin (cannot use this request)    The default admin has the most permissions, while the other 3 types have limited permissions:  |      Permissions         | Default admin     | Daily admin        | System admin       | Audit admin        | |   -------------: |:--------------------:|:--------------------:|:--------------------:|:--------------------:| |               Info | \u2713 | \u2713 | \u2713 | \u2713 | |         Statistics | \u2713 | \u2713 |                    |                    | |           Settings | \u2713 |                    | \u2713 |                    | |              Bases | \u2713 |                    |                    |                    | |              Forms | \u2713 |                    |                    |                    | |              Users | \u2713 | \u2713 |                    |                    | |             Groups | \u2713 | \u2713 |                    |                    | |     External links | \u2713 |                    |                    |                    | |      Organizations | \u2713 |                    |                    |                    | |      Notifications | \u2713 |                    |                    |                    | | Administrator-logs | \u2713 |                    |                    | \u2713 | |            Plugins | \u2713 |                    |                    |                    | |              Rules | \u2713 |                    |                    |                    | |      Abuse reports | \u2713 |                    |                    |                    | |            Scripts | \u2713 |                    |                    |                    | | Email sending logs | \u2713 |                    |                    |                    |  ### Do not change your own admin role  As seen from the table above - If you change your role from \\\"default admin\\\" to \\\"system admin\\\" or \\\"audit admin\\\", you won't be able to change it back because the \\\"Users\\\" page is gone.  ### What to do if you already did that  Add another super user, login as that super user and change your role back. Unfortunately, you cannot do this with the API. Refer to SeaTable Admin Manual - Starting SeaTable Server for details.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_13","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$update_admins_role = new \\SeaTable\\Client\\SysAdmin/Model\\UpdateAdminsRole(); // \\SeaTable\\Client\\SysAdmin/Model\\UpdateAdminsRole\n\ntry {\n    $result = $apiInstance-&gt;updateAdminRole($update_admins_role);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;updateAdminRole: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_13","title":"Parameters","text":"Name Type Description Notes update_admins_role \\SeaTable\\Client\\SysAdmin/Model\\UpdateAdminsRole [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_13","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_13","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#updateuser","title":"<code>updateUser()</code>","text":"<pre><code>updateUser($user_id, $update_user_request): object\n</code></pre> <p>Update User</p> <p>Update a user's details. See the parameter list for the detailed description of each entry.</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#example_14","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\SysAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 23abc456def789ghi123jkl456mno789@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$update_user_request = new \\SeaTable\\Client\\SysAdmin/Model\\UpdateUserRequest(); // \\SeaTable\\Client\\SysAdmin/Model\\UpdateUserRequest\n\ntry {\n    $result = $apiInstance-&gt;updateUser($user_id, $update_user_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;updateUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#parameters_14","title":"Parameters","text":"Name Type Description Notes user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. update_user_request \\SeaTable\\Client\\SysAdmin/Model\\UpdateUserRequest [optional]"},{"location":"clients/php/SysAdmin/Api/UsersApi/#return-type_14","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/SysAdmin/Api/UsersApi/#authorization_14","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/SysAdmin/Model/AddDepartmentRequest/","title":"# AddDepartmentRequest","text":""},{"location":"clients/php/SysAdmin/Model/AddDepartmentRequest/#properties","title":"Properties","text":"Name Type Description Notes group_name string The name of the new department. [optional] parent_group string The ID of the parent department. Optional. -1 by default. [optional]"},{"location":"clients/php/SysAdmin/Model/AddNewUserRequest/","title":"# AddNewUserRequest","text":""},{"location":"clients/php/SysAdmin/Model/AddNewUserRequest/#properties","title":"Properties","text":"Name Type Description Notes email string Login email of the user. [optional] password string Login password of the user. [optional] name string Full name of the user. [optional] is_staff bool `true` or `false` if the user will be an (system) admin. `false` by default. [optional] [default to false] is_active bool `true` or `false` if the user could log in. `true` by default. [optional] [default to true]"},{"location":"clients/php/SysAdmin/Model/AddNotificationToUserRequest/","title":"# AddNotificationToUserRequest","text":""},{"location":"clients/php/SysAdmin/Model/AddNotificationToUserRequest/#properties","title":"Properties","text":"Name Type Description Notes msg string [optional] username string [optional]"},{"location":"clients/php/SysAdmin/Model/AddTeamRequest/","title":"# AddTeamRequest","text":""},{"location":"clients/php/SysAdmin/Model/AddTeamRequest/#properties","title":"Properties","text":"Name Type Description Notes org_name string Name of the team. Required. [optional] admin_email string Login email of the team administrator. Required. Has to be unique in the system. [optional] password string Login password of the user. [optional] admin_name string Full name of the team administrator. Optional. [optional] with_workspace bool If a workspace should be automatically created for the user. Optional. `false` by default. [optional]"},{"location":"clients/php/SysAdmin/Model/AddTeamUserRequest/","title":"# AddTeamUserRequest","text":""},{"location":"clients/php/SysAdmin/Model/AddTeamUserRequest/#properties","title":"Properties","text":"Name Type Description Notes email string Login email of the user. [optional] password string Login password of the user. [optional] name string Full name of the user. [optional] with_workspace bool If a workspace should be automatically created for the user. Optional. `false` by default. [optional]"},{"location":"clients/php/SysAdmin/Model/CreateGroupRequest/","title":"# CreateGroupRequest","text":""},{"location":"clients/php/SysAdmin/Model/CreateGroupRequest/#properties","title":"Properties","text":"Name Type Description Notes group_name string The name of the new department. [optional] group_owner string [optional]"},{"location":"clients/php/SysAdmin/Model/EnforceTwoFactorRequest/","title":"# EnforceTwoFactorRequest","text":""},{"location":"clients/php/SysAdmin/Model/EnforceTwoFactorRequest/#properties","title":"Properties","text":"Name Type Description Notes force_2fa bool Enforce Two Factor for all accounts [optional]"},{"location":"clients/php/SysAdmin/Model/TransferGroupRequest/","title":"# TransferGroupRequest","text":""},{"location":"clients/php/SysAdmin/Model/TransferGroupRequest/#properties","title":"Properties","text":"Name Type Description Notes new_owner string [optional]"},{"location":"clients/php/SysAdmin/Model/UpdateAbuseReportRequest/","title":"# UpdateAbuseReportRequest","text":""},{"location":"clients/php/SysAdmin/Model/UpdateAbuseReportRequest/#properties","title":"Properties","text":"Name Type Description Notes handled bool Required. Use `true` or `false` to mark the status of the report. [optional]"},{"location":"clients/php/SysAdmin/Model/UpdateAdminsRole/","title":"# UpdateAdminsRole","text":""},{"location":"clients/php/SysAdmin/Model/UpdateAdminsRole/#properties","title":"Properties","text":"Name Type Description Notes email string The ID of another administrator user. Never use your own ID here! [optional] role string The desired role of the administrator user. Use `default_admin`, `system_admin`, `daily_admin`, or `audit_admin`. See the table above for details. [optional]"},{"location":"clients/php/SysAdmin/Model/UpdateGeneralSettingsRequest/","title":"# UpdateGeneralSettingsRequest","text":""},{"location":"clients/php/SysAdmin/Model/UpdateGeneralSettingsRequest/#properties","title":"Properties","text":"Name Type Description Notes site_title string The title of your SeaTable web interface, like appeared on the browser tab. Optional. Default value is `SeaTable Private`. [optional] site_name string The name of your site, like appeared in the notification emails. Optional. Default value is `SeaTable`. [optional] enable_branding_css int If a custom CSS should be used. Optional, `0` by default. If set to `1`, paste your CSS into the param `CUSTOM_CSS`. [optional] custom_css string The content of your custom CSS. Optional. Empty by default. [optional] activate_after_registration int If users should be automatically activated after the registration. Optional, `1` by default. If `0`, then the user need to be activated by the administrator or via the activation email. [optional] registration_send_mail int If an activation email should be sent after the user has registered. Optional, `0` by default. [optional] login_remember_days int How many default days a user could be kept signed in. Optional, `7` by default. [optional] login_attempt_limit int The maximum number of failed login attempts before showing CAPTCHA. Optional, `5` by default. [optional] freeze_user_on_login_failed int If the user's account should be frozen when they exceed the login attempts limit. Optional, `0` by default. [optional] user_strong_password_required int Force the users to use a strong password when signing up or changing password. Optional, `0` by default. [optional] force_password_change int Force newly added users to change their password, or when the admin resets their password. Optional, `1` by default. [optional] user_password_min_length int The minimum length of user passwords. Optional, `6` by default. [optional] user_password_strength_level int The level (`1`-`4`) of a password's strength. For example, `3` means password must have at least 3 of the following: a number, an upper letter, a lower letter and a special symbol. Optional, `3` by default. [optional] enable_two_factor_auth int If two factor authentication should be activated for the system. Optional, `0` by default. [optional] enable_signup int If registration on the web interface is allowed. Optional, `0` by default. [optional]"},{"location":"clients/php/SysAdmin/Model/UpdateTeamRequest/","title":"# UpdateTeamRequest","text":""},{"location":"clients/php/SysAdmin/Model/UpdateTeamRequest/#properties","title":"Properties","text":"Name Type Description Notes org_name string Name of the team. Required. [optional] role string The class of the team. For example, on cloud.seatable.io, we have free teams (`org_default`), Plus teams (`org_plus`) and Enterprise teams (`org_enterprise`). [optional] row_limit int User's total row limit in number. For example 10000. [optional] max_user_number string The maximum user number. [optional] asset_quota_mb string The asset quota in MB. [optional]"},{"location":"clients/php/SysAdmin/Model/UpdateTeamUserRequest/","title":"# UpdateTeamUserRequest","text":""},{"location":"clients/php/SysAdmin/Model/UpdateTeamUserRequest/#properties","title":"Properties","text":"Name Type Description Notes is_staff bool `true` or `false` if the user will be an (system) admin. `false` by default. [optional] [default to false] is_admin bool `true` or `false` if the user will be an (team) admin. `false` by default. [optional] [default to false] is_active bool `true` or `false` if the user could log in. `true` by default. [optional] [default to true] role string Update their role. For details about roles, refer to SeaTable Roles and Permissions. [optional] name string Full name of the user. [optional] login_id string Optional login ID. Valid only if the system configuration allows login ID. [optional] contact_email string The contact email address of the user. [optional] id_in_org string The team ID of the user, could be a student's ID or employee ID. String. [optional] unit string Business unit. Only valid if the system configuration allows the feature. [optional] password string Login password of the user. [optional] institution string Institution. Only valid if the system configuration allows the feature. [optional] row_limit int User's total row limit in number. For example 10000. [optional] quota_total string Update their total quota in MB. [optional] asset_quota_mb string The asset quota in MB. [optional]"},{"location":"clients/php/SysAdmin/Model/UpdateUserRequest/","title":"# UpdateUserRequest","text":""},{"location":"clients/php/SysAdmin/Model/UpdateUserRequest/#properties","title":"Properties","text":"Name Type Description Notes is_staff bool `true` or `false` if the user will be an (system) admin. `false` by default. [optional] [default to false] is_active bool `true` or `false` if the user could log in. `true` by default. [optional] [default to true] role string Update their role. For details about roles, refer to SeaTable Roles and Permissions. [optional] name string Full name of the user. [optional] login_id string Optional login ID. Valid only if the system configuration allows login ID. [optional] contact_email string The contact email address of the user. [optional] id_in_org string The team ID of the user, could be a student's ID or employee ID. String. [optional] unit string Business unit. Only valid if the system configuration allows the feature. [optional] password string Login password of the user. [optional] institution string Institution. Only valid if the system configuration allows the feature. [optional] row_limit int User's total row limit in number. For example 10000. [optional] quota_total string Update their total quota in MB. [optional] asset_quota_mb string The asset quota in MB. [optional]"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/","title":"SeaTable\\Client\\ActivitiesLogsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description listTeamLogins() GET /api/v2.1/org/{org_id}/admin/login-logs/ List Team Logins listTeamOperationLog() GET /api/v2.1/org/{org_id}/admin/admin-logs/ List Team Operations listUserLogins() GET /api/v2.1/org/{org_id}/admin/login-logs/{user_id} List User Logins"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#listteamlogins","title":"<code>listTeamLogins()</code>","text":"<pre><code>listTeamLogins($org_id, $page, $per_page)\n</code></pre> <p>List Team Logins</p> <p>Retrieves the login activities of all team members.</p>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $apiInstance-&gt;listTeamLogins($org_id, $page, $per_page);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;listTeamLogins: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#parameters","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#return-type","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#listteamoperationlog","title":"<code>listTeamOperationLog()</code>","text":"<pre><code>listTeamOperationLog($org_id, $page, $per_page)\n</code></pre> <p>List Team Operations</p> <p>Retrieves the operation log of all team members.</p>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $apiInstance-&gt;listTeamOperationLog($org_id, $page, $per_page);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;listTeamOperationLog: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#listuserlogins","title":"<code>listUserLogins()</code>","text":"<pre><code>listUserLogins($org_id, $user_id, $page, $per_page)\n</code></pre> <p>List User Logins</p> <p>Returns the login activities of one specific team member.</p>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$user_id = 123456789f1e4c8d8e1c31415867317c@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $apiInstance-&gt;listUserLogins($org_id, $user_id, $page, $per_page);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;listUserLogins: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#return-type_2","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/ActivitiesLogsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/","title":"SeaTable\\Client\\BasesApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description clearTeamTrashBin() DELETE /api/v2.1/org/{org_id}/admin/trash-dtables/ Clear Team Trash Bin deleteBase() DELETE /api/v2.1/org/{org_id}/admin/dtables/{base_id}/ Delete Base listBaseSharings() GET /api/v2.1/org/{org_id}/admin/dtables/{base_uuid}/shares List Base Sharings listBases() GET /api/v2.1/org/{org_id}/admin/dtables/ List Bases (Team) listTrashBases() GET /api/v2.1/org/{org_id}/admin/trash-dtables/ List Trash Bases restoreBaseFromTrash() PUT /api/v2.1/org/{org_id}/admin/trash-dtables/{base_id}/ Restore Base from Trash searchBase() GET /api/v2.1/org/{org_id}/admin/search-dtables/ Search Base"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#clearteamtrashbin","title":"<code>clearTeamTrashBin()</code>","text":"<pre><code>clearTeamTrashBin($org_id): object\n</code></pre> <p>Clear Team Trash Bin</p> <p>Clear the team trash bin. All the bases there will be removed permanently and cannot be restored any more.</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $result = $apiInstance-&gt;clearTeamTrashBin($org_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;clearTeamTrashBin: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#parameters","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/TeamAdmin/Api/BasesApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#deletebase","title":"<code>deleteBase()</code>","text":"<pre><code>deleteBase($org_id, $base_id): object\n</code></pre> <p>Delete Base</p> <p>Delete a base. This base will be put into the organization's trash bin, and permanently deleted automatically after 30 days.</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$base_id = 000; // string | The ID of the base. Don't mix this up with the base_uuid!\n\ntry {\n    $result = $apiInstance-&gt;deleteBase($org_id, $base_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;deleteBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. base_id string The ID of the base. Don't mix this up with the base_uuid!"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#listbasesharings","title":"<code>listBaseSharings()</code>","text":"<pre><code>listBaseSharings($org_id, $base_uuid)\n</code></pre> <p>List Base Sharings</p> <p>Use this request to list all the users and groups that a base is being shared with.</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $apiInstance-&gt;listBaseSharings($org_id, $base_uuid);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listBaseSharings: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/TeamAdmin/Api/BasesApi/#return-type_2","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#listbases","title":"<code>listBases()</code>","text":"<pre><code>listBases($org_id, $page, $per_page): object\n</code></pre> <p>List Bases (Team)</p> <p>List all the bases in the current organization.  The returned <code>id</code> value is the ID of the base, to be distinguished from the base's <code>base_uuid</code>. Details see the SeaTable API Parameter Reference.</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listBases($org_id, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#listtrashbases","title":"<code>listTrashBases()</code>","text":"<pre><code>listTrashBases($org_id, $page, $per_page): object\n</code></pre> <p>List Trash Bases</p> <p>List the bases in the organization's trash bin.</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listTrashBases($org_id, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listTrashBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#restorebasefromtrash","title":"<code>restoreBaseFromTrash()</code>","text":"<pre><code>restoreBaseFromTrash($org_id, $base_id): object\n</code></pre> <p>Restore Base from Trash</p> <p>Restore a base from the trash bin.</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$base_id = 000; // string | The ID of the base. Don't mix this up with the base_uuid!\n\ntry {\n    $result = $apiInstance-&gt;restoreBaseFromTrash($org_id, $base_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;restoreBaseFromTrash: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. base_id string The ID of the base. Don't mix this up with the base_uuid!"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#searchbase","title":"<code>searchBase()</code>","text":"<pre><code>searchBase($org_id, $query): object\n</code></pre> <p>Search Base</p> <p>By giving the exact or fuzzy match of the name of a base, you can find a base or all the bases that fit to that search criteria. The search is case-insensitive.</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$query = Example; // string | Exact name or a part of the name of the base, case insensitive.\n\ntry {\n    $result = $apiInstance-&gt;searchBase($org_id, $query);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;searchBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. query string Exact name or a part of the name of the base, case insensitive. [optional]"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/BasesApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/","title":"SeaTable\\Client\\CustomizingApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteTeamLogo() DELETE /api/v2.1/org/{org_id}/admin/org-logo/ Delete Team Logo getTeamLogo() GET /api/v2.1/org/{org_id}/admin/org-logo/ Get Team Logo updateTeamLogo() POST /api/v2.1/org/{org_id}/admin/org-logo/ Update Team Logo"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#deleteteamlogo","title":"<code>deleteTeamLogo()</code>","text":"<pre><code>deleteTeamLogo($org_id)\n</code></pre> <p>Delete Team Logo</p> <p>Restore the team logo to SeaTable's original default by removing the current logo.\\\"</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\CustomizingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $apiInstance-&gt;deleteTeamLogo($org_id);\n} catch (Exception $e) {\n    echo 'Exception when calling CustomizingApi-&gt;deleteTeamLogo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#parameters","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#return-type","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#getteamlogo","title":"<code>getTeamLogo()</code>","text":"<pre><code>getTeamLogo($org_id)\n</code></pre> <p>Get Team Logo</p> <p>Get the path to the custom team logo.</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\CustomizingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $apiInstance-&gt;getTeamLogo($org_id);\n} catch (Exception $e) {\n    echo 'Exception when calling CustomizingApi-&gt;getTeamLogo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#updateteamlogo","title":"<code>updateTeamLogo()</code>","text":"<pre><code>updateTeamLogo($org_id, $file)\n</code></pre> <p>Update Team Logo</p> <p>Replace the current team logo by uploading a new one.</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\CustomizingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$file = \"/path/to/file.txt\"; // \\SplFileObject | The image you'd like to upload from your local drive. Only .jpg, .jpeg, .gif or .png are allowed.\n\ntry {\n    $apiInstance-&gt;updateTeamLogo($org_id, $file);\n} catch (Exception $e) {\n    echo 'Exception when calling CustomizingApi-&gt;updateTeamLogo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. file \\SplFileObject\\SplFileObject The image you'd like to upload from your local drive. Only .jpg, .jpeg, .gif or .png are allowed. [optional]"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#return-type_2","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/CustomizingApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/","title":"SeaTable\\Client\\GroupsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addGroup() POST /api/v2.1/org/{org_id}/admin/groups/ Add Group addGroupMembers() POST /api/v2.1/org/{org_id}/admin/groups/{group_id}/members/ Add Group Members deleteGroup() DELETE /api/v2.1/org/{org_id}/admin/groups/{group_id}/ Delete Group getGroup() GET /api/v2.1/org/{org_id}/admin/groups/{group_id}/ Get Group listGroupBases() GET /api/v2.1/org/{org_id}/admin/groups/{group_id}/dtables/ List Group Bases listGroupMembers() GET /api/v2.1/org/{org_id}/admin/groups/{group_id}/members/ List Group Members listGroups() GET /api/v2.1/org/{org_id}/admin/groups/ List Groups (Team) orderGroups() PUT /api/v2.1/groups/move-group/ Re-order Your Groups removeGroupMembers() DELETE /api/v2.1/org/{org_id}/admin/groups/{group_id}/members/{user_id}/ Remove Group Members updateGroup() PUT /api/v2.1/org/{org_id}/admin/groups/{group_id}/ Update Group"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#addgroup","title":"<code>addGroup()</code>","text":"<pre><code>addGroup($org_id, $group_name, $group_owner): object\n</code></pre> <p>Add Group</p> <p>Add a group in the current organization and assign a group name, and a group owner.</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_name = 'group_name_example'; // string | The name of the group.\n$group_owner = 'group_owner_example'; // string | The `user_id` of the owner of the group. Optional. If left blank, the newly added group will not be visible to anyone but still operatable.\n\ntry {\n    $result = $apiInstance-&gt;addGroup($org_id, $group_name, $group_owner);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;addGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. group_name string The name of the group. [optional] group_owner string The `user_id` of the owner of the group. Optional. If left blank, the newly added group will not be visible to anyone but still operatable. [optional]"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#addgroupmembers","title":"<code>addGroupMembers()</code>","text":"<pre><code>addGroupMembers($org_id, $group_id, $user_id): object\n</code></pre> <p>Add Group Members</p> <p>Add multiple members to a group in one call.</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_id = 1; // int | The ID of the group to query. Can be retrieved from the call [List Groups in Your Team](/reference/list-groups-team).\n$user_id = 'user_id_example'; // string | The `user_id`\n\ntry {\n    $result = $apiInstance-&gt;addGroupMembers($org_id, $group_id, $user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;addGroupMembers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. group_id int The ID of the group to query. Can be retrieved from the call List Groups in Your Team. user_id string The `user_id` [optional]"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#deletegroup","title":"<code>deleteGroup()</code>","text":"<pre><code>deleteGroup($org_id, $group_id): object\n</code></pre> <p>Delete Group</p> <p>Delete a group with its ID.</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_id = 1; // int | The ID of the group to query. Can be retrieved from the call [List Groups in Your Team](/reference/list-groups-team).\n\ntry {\n    $result = $apiInstance-&gt;deleteGroup($org_id, $group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;deleteGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. group_id int The ID of the group to query. Can be retrieved from the call List Groups in Your Team."},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#getgroup","title":"<code>getGroup()</code>","text":"<pre><code>getGroup($org_id, $group_id): object\n</code></pre> <p>Get Group</p> <p>Get the specific information of one group by its ID.</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_id = 1; // int | The ID of the group to query. Can be retrieved from the call [List Groups in Your Team](/reference/list-groups-team).\n\ntry {\n    $result = $apiInstance-&gt;getGroup($org_id, $group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;getGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. group_id int The ID of the group to query. Can be retrieved from the call List Groups in Your Team."},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#listgroupbases","title":"<code>listGroupBases()</code>","text":"<pre><code>listGroupBases($org_id, $group_id): object\n</code></pre> <p>List Group Bases</p> <p>List all the bases in a specific group in your team.</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_id = 1; // int | The ID of the group to query. Can be retrieved from the call [List Groups in Your Team](/reference/list-groups-team).\n\ntry {\n    $result = $apiInstance-&gt;listGroupBases($org_id, $group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;listGroupBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. group_id int The ID of the group to query. Can be retrieved from the call List Groups in Your Team."},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#listgroupmembers","title":"<code>listGroupMembers()</code>","text":"<pre><code>listGroupMembers($org_id, $group_id): object\n</code></pre> <p>List Group Members</p> <p>List the members of a group in the current team (organization).</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_id = 1; // int | The ID of the group to query. Can be retrieved from the call [List Groups in Your Team](/reference/list-groups-team).\n\ntry {\n    $result = $apiInstance-&gt;listGroupMembers($org_id, $group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;listGroupMembers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. group_id int The ID of the group to query. Can be retrieved from the call List Groups in Your Team."},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#listgroups","title":"<code>listGroups()</code>","text":"<pre><code>listGroups($org_id, $page, $per_page): object\n</code></pre> <p>List Groups (Team)</p> <p>List all the groups existing in your team (organization). In the response, each group's ID, name, created time, name,creator etc. are returned. The <code>page_next</code> value indicates if there is a next page or not.</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listGroups($org_id, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;listGroups: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#ordergroups","title":"<code>orderGroups()</code>","text":"<pre><code>orderGroups($group_id, $anchor_group_id, $to_last): object\n</code></pre> <p>Re-order Your Groups</p> <p>On the web user interface, you can have an overview of all the groups you are currently in on the left-hand side navigation when you click on \\\"Bases\\\". Perhaps you'd like to re-order these groups. Besides moving them manually with your mouse on the interface, you can also use this API request to do the same job. Here's how it works: In the request form, give the <code>group_id</code> of the group you'd like to move and tell the system where to move it to: under which group ( <code>anchor_group_id</code> ). If you are just moving it to the bottom of the list, let <code>to_last</code> be <code>true</code> .</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 'group_id_example'; // string | The ID of the group you'd like to move.\n$anchor_group_id = 'anchor_group_id_example'; // string | The ID of the group where you'd like your group to be moved under.\n$to_last = True; // bool | Whether you'd like to move your group to the bottom of the list (`true`). `false` by default.\n\ntry {\n    $result = $apiInstance-&gt;orderGroups($group_id, $anchor_group_id, $to_last);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;orderGroups: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes group_id string The ID of the group you'd like to move. [optional] anchor_group_id string The ID of the group where you'd like your group to be moved under. [optional] to_last bool Whether you'd like to move your group to the bottom of the list (`true`). `false` by default. [optional]"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#removegroupmembers","title":"<code>removeGroupMembers()</code>","text":"<pre><code>removeGroupMembers($org_id, $group_id, $user_id): object\n</code></pre> <p>Remove Group Members</p> <p>Move a member out of a group. The group's owner cannot be removed.</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_id = 1; // int | The ID of the group to query. Can be retrieved from the call [List Groups in Your Team](/reference/list-groups-team).\n$user_id = 123456789f1e4c8d8e1c31415867317c@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;removeGroupMembers($org_id, $group_id, $user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;removeGroupMembers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. group_id int The ID of the group to query. Can be retrieved from the call List Groups in Your Team. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_8","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_8","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#updategroup","title":"<code>updateGroup()</code>","text":"<pre><code>updateGroup($org_id, $group_id, $update_group_request): object\n</code></pre> <p>Update Group</p> <p>Use this request to rename, and/or change owner of a group. In the request body, both parameters are optional. Only use the ones that you need to update: *   <code>new_owner</code> is the new owner of the group, include the user's ID here. If you don't want to change the owner, remove this parameter because if you enter the current owner's ID here, you'll get an error \\\"User xxx is already group owner\\\". *   <code>new_group_name</code> is the new name of your group. If you don't want to change the name, remove shi parameter because if you enter the current group name here you'll get an error \\\"There is already a group with that name\\\".</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#example_9","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\GroupsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$group_id = 1; // int | The ID of the group to query. Can be retrieved from the call [List Groups in Your Team](/reference/list-groups-team).\n$update_group_request = new \\SeaTable\\Client\\TeamAdmin\\UpdateGroupRequest(); // \\SeaTable\\Client\\TeamAdmin\\UpdateGroupRequest\n\ntry {\n    $result = $apiInstance-&gt;updateGroup($org_id, $group_id, $update_group_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsApi-&gt;updateGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. group_id int The ID of the group to query. Can be retrieved from the call List Groups in Your Team. update_group_request \\SeaTable\\Client\\TeamAdmin\\UpdateGroupRequest [optional]"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#return-type_9","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/GroupsApi/#authorization_9","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/","title":"SeaTable\\Client\\InfoSettingsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getTeamInfo() GET /api/v2.1/org/admin/info/ Get Team Info getTeamSettings() GET /api/v2.1/org/admin/settings/ Get Team Settings updateTeam() PUT /api/v2.1/org/admin/info/ Update Team updateTeamSettings() PUT /api/v2.1/org/admin/settings/ Update Team Settings"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#getteaminfo","title":"<code>getTeamInfo()</code>","text":"<pre><code>getTeamInfo(): object\n</code></pre> <p>Get Team Info</p> <p>Get the basic information (e.g. ID, name, storage quota etc. see example response for details) of your team (organization).</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\InfoSettingsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;getTeamInfo();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling InfoSettingsApi-&gt;getTeamInfo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#getteamsettings","title":"<code>getTeamSettings()</code>","text":"<pre><code>getTeamSettings(): object\n</code></pre> <p>Get Team Settings</p> <p>List the current organization settings.  Return Values <code>enable_force_2fa</code>: if the 2-factor-authentication is forced (<code>true</code> or <code>false</code>).  <code>enable_new_user_email</code>: if newly added users will get a system email (<code>true</code> or <code>false</code>).  <code>enable_external_user_access_invite_link</code>: if external users can access bases via invite links (<code>true</code> or <code>false</code>).  <code>enable_member_modify_name</code>: if members are allowed to change their names (<code>true</code> or <code>false</code>).</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\InfoSettingsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;getTeamSettings();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling InfoSettingsApi-&gt;getTeamSettings: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#updateteam","title":"<code>updateTeam()</code>","text":"<pre><code>updateTeam($new_org_name): object\n</code></pre> <p>Update Team</p> <p>Update the infos (e.g. name) of the organization</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\InfoSettingsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$new_org_name = 'new_org_name_example'; // string | The new name of your team.\n\ntry {\n    $result = $apiInstance-&gt;updateTeam($new_org_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling InfoSettingsApi-&gt;updateTeam: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes new_org_name string The new name of your team. [optional]"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#updateteamsettings","title":"<code>updateTeamSettings()</code>","text":"<pre><code>updateTeamSettings($enable_force_2fa, $enable_new_user_email, $enable_external_user_access_invite_link, $enable_member_modify_name): object\n</code></pre> <p>Update Team Settings</p> <p>Update the settings of the organization.</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\InfoSettingsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$enable_force_2fa = True; // bool | if the 2-factor-authentication is forced (`true` or `false`).\n$enable_new_user_email = True; // bool | if newly added users will get a system email (`true` or `false`).\n$enable_external_user_access_invite_link = True; // bool | if external users can access bases via invite links (`true` or `false`).\n$enable_member_modify_name = True; // bool | if members are allowed to change their names (`true` or `false`).\n\ntry {\n    $result = $apiInstance-&gt;updateTeamSettings($enable_force_2fa, $enable_new_user_email, $enable_external_user_access_invite_link, $enable_member_modify_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling InfoSettingsApi-&gt;updateTeamSettings: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes enable_force_2fa bool if the 2-factor-authentication is forced (`true` or `false`). [optional] enable_new_user_email bool if newly added users will get a system email (`true` or `false`). [optional] enable_external_user_access_invite_link bool if external users can access bases via invite links (`true` or `false`). [optional] enable_member_modify_name bool if members are allowed to change their names (`true` or `false`). [optional]"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/InfoSettingsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/","title":"SeaTable\\Client\\SAMLApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getSamlConfig() GET /api/v2.1/org/{org_id}/admin/saml-config/ Get SAML Config updateSamlConfig() PUT /api/v2.1/org/{org_id}/admin/saml-config/ Update SAML Config verifySamlDomain() PUT /api/v2.1/org/{org_id}/admin/verify-domain/ Verify SAML domain"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#getsamlconfig","title":"<code>getSamlConfig()</code>","text":"<pre><code>getSamlConfig($org_id)\n</code></pre> <p>Get SAML Config</p> <p>Retrieve the current configuration details of the team's SAML (Single Sign-On) account.</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SAMLApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $apiInstance-&gt;getSamlConfig($org_id);\n} catch (Exception $e) {\n    echo 'Exception when calling SAMLApi-&gt;getSamlConfig: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#parameters","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#return-type","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#updatesamlconfig","title":"<code>updateSamlConfig()</code>","text":"<pre><code>updateSamlConfig($org_id, $metadata_url, $domain, $idp_certificate)\n</code></pre> <p>Update SAML Config</p> <p>Update the current team's SAML (Single Sign-On) account. You have to provide at least one of the parameter <code>metadata_url</code>, <code>domain</code> or <code>idp_certificate</code>.</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SAMLApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$metadata_url = 'metadata_url_example'; // string | URL pointing to the metadata of your Identity Provider (IdP).\n$domain = 'domain_example'; // string | Domain that should be connected to your SeaTable Team. Only email addresses with this domain will be redirected to your Identity Provider (IdP).\n$idp_certificate = 'idp_certificate_example'; // string | Provide the certificate from your IdP for this service.\n\ntry {\n    $apiInstance-&gt;updateSamlConfig($org_id, $metadata_url, $domain, $idp_certificate);\n} catch (Exception $e) {\n    echo 'Exception when calling SAMLApi-&gt;updateSamlConfig: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. metadata_url string URL pointing to the metadata of your Identity Provider (IdP). [optional] domain string Domain that should be connected to your SeaTable Team. Only email addresses with this domain will be redirected to your Identity Provider (IdP). [optional] idp_certificate string Provide the certificate from your IdP for this service. [optional]"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#verifysamldomain","title":"<code>verifySamlDomain()</code>","text":"<pre><code>verifySamlDomain($org_id, $domain)\n</code></pre> <p>Verify SAML domain</p> <p>Check for the \\\"seatable-site-verification\\\" value in the DNS entries of the selected domain.</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SAMLApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$domain = 'domain_example'; // string | Domain that should be connected to your SeaTable Team. Only email addresses with this domain will be redirected to your Identity Provider (IdP).\n\ntry {\n    $apiInstance-&gt;verifySamlDomain($org_id, $domain);\n} catch (Exception $e) {\n    echo 'Exception when calling SAMLApi-&gt;verifySamlDomain: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. domain string Domain that should be connected to your SeaTable Team. Only email addresses with this domain will be redirected to your Identity Provider (IdP). [optional]"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#return-type_2","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/TeamAdmin/Api/SAMLApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/","title":"SeaTable\\Client\\SharingLinksApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteExternalLink() DELETE /api/v2.1/org/{org_id}/admin/external-links/{external_link_token}/ Delete External Link deleteInviteLink() DELETE /api/v2.1/org/{org_id}/admin/invite-links/{invite_link_token}/ Delete Invite Link deleteViewExternalLink() DELETE /api/v2.1/org/{org_id}/admin/view-external-links/{view_external_link_token}/ Delete View External Link listBaseExternalLinks() GET /api/v2.1/org/{org_id}/admin/external-links/ List Base External Links listInviteLinks() GET /api/v2.1/org/{org_id}/admin/invite-links/ List Invite Links listViewExternalLinks() GET /api/v2.1/org/{org_id}/admin/view-external-links/ List View External Links updateInviteLink() PUT /api/v2.1/org/{org_id}/admin/invite-links/{invite_link_token}/ Update Invite Link"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#deleteexternallink","title":"<code>deleteExternalLink()</code>","text":"<pre><code>deleteExternalLink($org_id, $external_link_token): object\n</code></pre> <p>Delete External Link</p> <p>Delete an external link with its token.</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$external_link_token = d6d006b319ca4d2aa060; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteExternalLink($org_id, $external_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;deleteExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#parameters","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. external_link_token string"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#deleteinvitelink","title":"<code>deleteInviteLink()</code>","text":"<pre><code>deleteInviteLink($org_id, $invite_link_token): object\n</code></pre> <p>Delete Invite Link</p> <p>Delete an invite link with this request. The <code>invite_link_token</code> can be retrieved from the previous calls, or simply from the URL of the invite link, which is the last part of the URL.</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$invite_link_token = 0366b8995d7f47d8eu3t; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteInviteLink($org_id, $invite_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;deleteInviteLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. invite_link_token string"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#deleteviewexternallink","title":"<code>deleteViewExternalLink()</code>","text":"<pre><code>deleteViewExternalLink($org_id, $view_external_link_token): object\n</code></pre> <p>Delete View External Link</p> <p>Use this request to delete an existing view external link with its token.</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$view_external_link_token = d6d006b319ca4d2aa060; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteViewExternalLink($org_id, $view_external_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;deleteViewExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. view_external_link_token string"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#listbaseexternallinks","title":"<code>listBaseExternalLinks()</code>","text":"<pre><code>listBaseExternalLinks($org_id): object\n</code></pre> <p>List Base External Links</p> <p>Use this request to list all the external links generated in the current team (organization).</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $result = $apiInstance-&gt;listBaseExternalLinks($org_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;listBaseExternalLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#listinvitelinks","title":"<code>listInviteLinks()</code>","text":"<pre><code>listInviteLinks($org_id, $page, $per_page): object\n</code></pre> <p>List Invite Links</p> <p>As administrator of your team, you can use this request to gain a overview of all the invite links currently generated in your team, regardless which user or group.</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listInviteLinks($org_id, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;listInviteLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#listviewexternallinks","title":"<code>listViewExternalLinks()</code>","text":"<pre><code>listViewExternalLinks($org_id): object\n</code></pre> <p>List View External Links</p> <p>Use this request to list all the view external links generated in the current team (organization).</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n\ntry {\n    $result = $apiInstance-&gt;listViewExternalLinks($org_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;listViewExternalLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin."},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#updateinvitelink","title":"<code>updateInviteLink()</code>","text":"<pre><code>updateInviteLink($org_id, $invite_link_token, $update_invite_link_request): object\n</code></pre> <p>Update Invite Link</p> <p>You as team admin can also update an invite link. In the request body:    - <code>permission</code> is the read/write permission of the new invite link, with <code>r</code> as read-only and <code>rw</code> as read-and-write;  - <code>password</code> is the new password of your invite link;  - <code>expire_days</code> is the number of days after which the invite link will expire.</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$invite_link_token = 0366b8995d7f47d8eu3t; // string\n$update_invite_link_request = new \\SeaTable\\Client\\TeamAdmin\\UpdateInviteLinkRequest(); // \\SeaTable\\Client\\TeamAdmin\\UpdateInviteLinkRequest\n\ntry {\n    $result = $apiInstance-&gt;updateInviteLink($org_id, $invite_link_token, $update_invite_link_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;updateInviteLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. invite_link_token string update_invite_link_request \\SeaTable\\Client\\TeamAdmin\\UpdateInviteLinkRequest [optional]"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/SharingLinksApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/","title":"SeaTable\\Client\\UsersApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addUser() POST /api/v2.1/org/{org_id}/admin/users/ Add User deleteUser() DELETE /api/v2.1/org/{org_id}/admin/users/{user_id}/ Delete User disableTwoFactor() DELETE /api/v2.1/org/{org_id}/admin/users/{user_id}/two-factor-auth/ Disable 2FA enforceTwofactor() PUT /api/v2.1/org/{org_id}/admin/users/{user_id}/two-factor-auth/ Enforce 2FA listTeamUsers() GET /api/v2.1/org/{org_id}/admin/users/ List Users (Team) resetUserPassword() PUT /api/v2.1/org/{org_id}/admin/users/{user_id}/set-password/ Reset User Password updateUser() PUT /api/v2.1/org/{org_id}/admin/users/{user_id}/ Update User"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#adduser","title":"<code>addUser()</code>","text":"<pre><code>addUser($org_id, $email, $name, $password, $with_workspace): object\n</code></pre> <p>Add User</p> <p>Add a new user in the team (organization).  In the request body, define the new user's <code>email</code>, <code>name</code> and <code>password</code>.   SeaTable does not automatically create a workspace for a newly added user: the <code>with_workspace</code> parameter is <code>false</code> by default. If you would like your new user to have a workspace when they are added (so that they can start operating workspaces and bases right away with API requests), make sure you set <code>true</code> for this parameter.  Otherwise, their workspace will only be created when they login to the SeaTable web interface for the first time.</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$email = 'email_example'; // string | User's contact email to login.\n$name = 'name_example'; // string | User's full name.\n$password = 'password_example'; // string | User's password to login.\n$with_workspace = True; // bool | If a workspace should be automatically created for the user. Optional. `false` by default.\n\ntry {\n    $result = $apiInstance-&gt;addUser($org_id, $email, $name, $password, $with_workspace);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;addUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#parameters","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. email string User's contact email to login. [optional] name string User's full name. [optional] password string User's password to login. [optional] with_workspace bool If a workspace should be automatically created for the user. Optional. `false` by default. [optional]"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#deleteuser","title":"<code>deleteUser()</code>","text":"<pre><code>deleteUser($org_id, $user_id): object\n</code></pre> <p>Delete User</p> <p>Delete a user by their <code>user_id</code> permanently. When you delete a user, their bases are automatically moved into the organization's trash bin.</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$user_id = 123456789f1e4c8d8e1c31415867317c@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;deleteUser($org_id, $user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;deleteUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/TeamAdmin/Api/UsersApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#disabletwofactor","title":"<code>disableTwoFactor()</code>","text":"<pre><code>disableTwoFactor($org_id, $user_id): object\n</code></pre> <p>Disable 2FA</p> <p>If a user in your team has lost their phone or deleted the authenticator App by accident, they cannot log in to SeaTable anymore if 2FA is enabled for them. In this case, you as the team administrator can disable 2FA for them. Again, this is to be distinguished from the request Enforce 2FA for A User in Team when you use <code>force_2fa = 0</code>, which only cancels the enforcement of 2FA but doesn't necessarily disable it for them.</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$user_id = 123456789f1e4c8d8e1c31415867317c@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;disableTwoFactor($org_id, $user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;disableTwoFactor: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/TeamAdmin/Api/UsersApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#enforcetwofactor","title":"<code>enforceTwofactor()</code>","text":"<pre><code>enforceTwofactor($org_id, $user_id, $enforce_twofactor_request): object\n</code></pre> <p>Enforce 2FA</p> <p>As the team administrator, you can force each team member to use 2-factor authentication (2FA).  When the value of <code>force_2fa</code> is <code>1</code> in this request, the member will be requested to activate 2FA by scanning a QR code next time they log in. To cancel enforcing them to use 2FA, change the value to <code>0</code> and send this request again.  This request is to be distinguished from the next request, because cancelling the enforcement doesn't necesssarily Disable 2FA for A User in Team, which serves a different purpose.</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$user_id = 123456789f1e4c8d8e1c31415867317c@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$enforce_twofactor_request = new \\SeaTable\\Client\\TeamAdmin\\EnforceTwofactorRequest(); // \\SeaTable\\Client\\TeamAdmin\\EnforceTwofactorRequest\n\ntry {\n    $result = $apiInstance-&gt;enforceTwofactor($org_id, $user_id, $enforce_twofactor_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;enforceTwofactor: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. enforce_twofactor_request \\SeaTable\\Client\\TeamAdmin\\EnforceTwofactorRequest [optional]"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#listteamusers","title":"<code>listTeamUsers()</code>","text":"<pre><code>listTeamUsers($org_id, $page, $per_page): object\n</code></pre> <p>List Users (Team)</p> <p>List all the users in the organization, or only the admins/non-admins.</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$page = 1; // int | The page number you want to start showing the entries. If no value is provided, 1 will be used.\n$per_page = 25; // int | The number of results that should be returned. If no value is provided, 25 results will be returned.\n\ntry {\n    $result = $apiInstance-&gt;listTeamUsers($org_id, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;listTeamUsers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. page int The page number you want to start showing the entries. If no value is provided, 1 will be used. [optional] per_page int The number of results that should be returned. If no value is provided, 25 results will be returned. [optional]"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#resetuserpassword","title":"<code>resetUserPassword()</code>","text":"<pre><code>resetUserPassword($org_id, $user_id): object\n</code></pre> <p>Reset User Password</p> <p>Reset the password of a user and get a new password. The new password will be automatically sent to the user per email.</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$user_id = 123456789f1e4c8d8e1c31415867317c@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;resetUserPassword($org_id, $user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;resetUserPassword: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user."},{"location":"clients/php/TeamAdmin/Api/UsersApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#updateuser","title":"<code>updateUser()</code>","text":"<pre><code>updateUser($org_id, $user_id, $name, $contact_email, $is_staff, $is_active, $quota_total, $id_in_org): object\n</code></pre> <p>Update User</p> <p>Update a user's details. See the parameter list for the detailed description of each entry.</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\TeamAdmin\\UsersApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$org_id = 1; // int | The ID of your team/organization. Numeric. Get it from [Get Team](/reference/get-team-info). Contact your team admin, if you are not the admin.\n$user_id = 123456789f1e4c8d8e1c31415867317c@auth.local; // string | The unique user id in the form ...@auth.local. This is not the email address of the user.\n$name = 'name_example'; // string | User's full name.\n$contact_email = 'contact_email_example'; // string | User's contact email.\n$is_staff = True; // bool | Determines if the user account has access to the system administration area.\n$is_active = True; // bool | Determines the current status of this account. An inactive account can not login anymore.\n$quota_total = 56; // int | Update their total quota in MB.\n$id_in_org = 'id_in_org_example'; // string | The team ID of the user, could be a student's ID or employee ID. String.\n\ntry {\n    $result = $apiInstance-&gt;updateUser($org_id, $user_id, $name, $contact_email, $is_staff, $is_active, $quota_total, $id_in_org);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UsersApi-&gt;updateUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes org_id int The ID of your team/organization. Numeric. Get it from Get Team. Contact your team admin, if you are not the admin. user_id string The unique user id in the form ...@auth.local. This is not the email address of the user. name string User's full name. [optional] contact_email string User's contact email. [optional] is_staff bool Determines if the user account has access to the system administration area. [optional] is_active bool Determines the current status of this account. An inactive account can not login anymore. [optional] quota_total int Update their total quota in MB. [optional] id_in_org string The team ID of the user, could be a student's ID or employee ID. String. [optional]"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/TeamAdmin/Api/UsersApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/TeamAdmin/Model/EnforceTwofactorRequest/","title":"# EnforceTwofactorRequest","text":""},{"location":"clients/php/TeamAdmin/Model/EnforceTwofactorRequest/#properties","title":"Properties","text":"Name Type Description Notes force_2fa \\SeaTable\\Client\\TeamAdmin\\Force2fa [optional]"},{"location":"clients/php/TeamAdmin/Model/Force2fa/","title":"# Force2fa","text":""},{"location":"clients/php/TeamAdmin/Model/Force2fa/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/TeamAdmin/Model/TeamAdminPermission/","title":"# TeamAdminPermission","text":""},{"location":"clients/php/TeamAdmin/Model/TeamAdminPermission/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/TeamAdmin/Model/UpdateGroupRequest/","title":"# UpdateGroupRequest","text":""},{"location":"clients/php/TeamAdmin/Model/UpdateGroupRequest/#properties","title":"Properties","text":"Name Type Description Notes new_owner string The `user_id` [optional] new_group_name string The name of the group. [optional]"},{"location":"clients/php/TeamAdmin/Model/UpdateInviteLinkRequest/","title":"# UpdateInviteLinkRequest","text":""},{"location":"clients/php/TeamAdmin/Model/UpdateInviteLinkRequest/#properties","title":"Properties","text":"Name Type Description Notes permission \\SeaTable\\Client\\TeamAdmin\\TeamAdminPermission [optional] password string User's password to login. [optional] expire_days int [optional]"},{"location":"clients/php/User/Api/ActivitiesLogsApi/","title":"SeaTable\\Client\\ActivitiesLogsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description getBaseActivities() GET /api/v2.1/dtable-activities/ Get Base Activities getBaseActivityDetails() GET /api/v2.1/dtable-activities/detail Get Base Activity Details"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#getbaseactivities","title":"<code>getBaseActivities()</code>","text":"<pre><code>getBaseActivities($page, $per_page, $to_tz): object\n</code></pre> <p>Get Base Activities</p> <p>List the user's base activities in the past week.</p>"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int\n$per_page = 2; // int\n$to_tz = +08:00; // string\n\ntry {\n    $result = $apiInstance-&gt;getBaseActivities($page, $per_page, $to_tz);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;getBaseActivities: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#parameters","title":"Parameters","text":"Name Type Description Notes page int [optional] per_page int [optional] to_tz string [optional]"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#getbaseactivitydetails","title":"<code>getBaseActivityDetails()</code>","text":"<pre><code>getBaseActivityDetails($dtable_uuid, $op_date, $page, $per_page): object\n</code></pre> <p>Get Base Activity Details</p> <p>List all activities of one specific base.</p>"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ActivitiesLogsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dtable_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$op_date = 2023-05-25T10:06:39+08:00; // string\n$page = 1; // int\n$per_page = 2; // int\n\ntry {\n    $result = $apiInstance-&gt;getBaseActivityDetails($dtable_uuid, $op_date, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ActivitiesLogsApi-&gt;getBaseActivityDetails: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes dtable_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. op_date string page int [optional] per_page int [optional]"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/ActivitiesLogsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AppsApi/","title":"SeaTable\\Client\\AppsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description changeAppStatus() PUT /api/v2.1/external-apps/{app_token}/status/ Change App Status importUsersToApp() POST /api/v2.1/universal-apps/{app_token}/app-users/batch/ Import Users to App listAppInviteLinks() GET /api/v2.1/universal-apps/{app_token}/invite-links/ List App Invite Links listApps() GET /api/v2.1/universal-apps/ List Apps listUniversalAppUsers() GET /api/v2.1/universal-apps/{app_token}/app-users/ List Universal App Users"},{"location":"clients/php/User/Api/AppsApi/#changeappstatus","title":"<code>changeAppStatus()</code>","text":"<pre><code>changeAppStatus($app_token, $is_inactive)\n</code></pre> <p>Change App Status</p> <p>Activate or deactivate a universal app. Pay attention that <code>true</code> means the app is inactive. <code>false</code> means the app is active.</p>"},{"location":"clients/php/User/Api/AppsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AppsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$app_token = 8254d58e-6a67-45ab-be37-87939d80e99f; // string\n$is_inactive = new \\SeaTable\\Client\\User\\IsInactive(); // \\SeaTable\\Client\\User\\IsInactive\n\ntry {\n    $apiInstance-&gt;changeAppStatus($app_token, $is_inactive);\n} catch (Exception $e) {\n    echo 'Exception when calling AppsApi-&gt;changeAppStatus: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AppsApi/#parameters","title":"Parameters","text":"Name Type Description Notes app_token string is_inactive \\SeaTable\\Client\\User\\IsInactive [optional]"},{"location":"clients/php/User/Api/AppsApi/#return-type","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/AppsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AppsApi/#importuserstoapp","title":"<code>importUsersToApp()</code>","text":"<pre><code>importUsersToApp($app_token, $import_users_to_app_request)\n</code></pre> <p>Import Users to App</p> <p>Hier muss noch eine Beschreibung erg\u00e4nzt werden</p>"},{"location":"clients/php/User/Api/AppsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AppsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$app_token = 8254d58e-6a67-45ab-be37-87939d80e99f; // string\n$import_users_to_app_request = new \\SeaTable\\Client\\User\\ImportUsersToAppRequest(); // \\SeaTable\\Client\\User\\ImportUsersToAppRequest\n\ntry {\n    $apiInstance-&gt;importUsersToApp($app_token, $import_users_to_app_request);\n} catch (Exception $e) {\n    echo 'Exception when calling AppsApi-&gt;importUsersToApp: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AppsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes app_token string import_users_to_app_request \\SeaTable\\Client\\User\\ImportUsersToAppRequest [optional]"},{"location":"clients/php/User/Api/AppsApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/AppsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AppsApi/#listappinvitelinks","title":"<code>listAppInviteLinks()</code>","text":"<pre><code>listAppInviteLinks($app_token)\n</code></pre> <p>List App Invite Links</p> <p>Hier muss noch eine Beschreibung erg\u00e4nzt werden</p>"},{"location":"clients/php/User/Api/AppsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AppsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$app_token = 8254d58e-6a67-45ab-be37-87939d80e99f; // string\n\ntry {\n    $apiInstance-&gt;listAppInviteLinks($app_token);\n} catch (Exception $e) {\n    echo 'Exception when calling AppsApi-&gt;listAppInviteLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AppsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes app_token string"},{"location":"clients/php/User/Api/AppsApi/#return-type_2","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/AppsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AppsApi/#listapps","title":"<code>listApps()</code>","text":"<pre><code>listApps()\n</code></pre> <p>List Apps</p> <p>Hier muss noch eine Beschreibung erg\u00e4nzt werden</p>"},{"location":"clients/php/User/Api/AppsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AppsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $apiInstance-&gt;listApps();\n} catch (Exception $e) {\n    echo 'Exception when calling AppsApi-&gt;listApps: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AppsApi/#parameters_3","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/AppsApi/#return-type_3","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/AppsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AppsApi/#listuniversalappusers","title":"<code>listUniversalAppUsers()</code>","text":"<pre><code>listUniversalAppUsers($app_token)\n</code></pre> <p>List Universal App Users</p> <p>Hier muss noch eine Beschreibung erg\u00e4nzt werden</p>"},{"location":"clients/php/User/Api/AppsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AppsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$app_token = 8254d58e-6a67-45ab-be37-87939d80e99f; // string\n\ntry {\n    $apiInstance-&gt;listUniversalAppUsers($app_token);\n} catch (Exception $e) {\n    echo 'Exception when calling AppsApi-&gt;listUniversalAppUsers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AppsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes app_token string"},{"location":"clients/php/User/Api/AppsApi/#return-type_4","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/AppsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AttachmentApi/","title":"SeaTable\\Client\\AttachmentApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description checkIfAssetExists() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/asset-exists/ Check If Asset Exists deleteBaseAsset() DELETE /api/v2.1/dtable-asset/{base_uuid}/ Delete Base Asset deleteBaseAssets() DELETE /api/v2.1/dtable-asset/{base_uuid}/batch-delete-assets/ Delete Base Assets getBaseAttachmentUploadLink() GET /api/v2.1/workspace/{workspace_id}/dtable-asset-upload-link/ Get Base Attachment Upload Link listBaseAssets() GET /api/v2.1/dtable-asset/{base_uuid}/ List Base Asset Directories And Files listRecentlyUploadedFiles() GET /api/v2.1/dtable-recent-asset/{base_uuid}/ List Recently Uploaded Files renameBaseAsset() POST /api/v2.1/dtable-asset/{base_uuid}/rename/ Rename Base Asset"},{"location":"clients/php/User/Api/AttachmentApi/#checkifassetexists","title":"<code>checkIfAssetExists()</code>","text":"<pre><code>checkIfAssetExists($workspace_id, $base_name, $path): object\n</code></pre> <p>Check If Asset Exists</p> <p>Check if a certain asset exists. The returned <code>is_exist</code> value confirms the existence (<code>true</code>).</p>"},{"location":"clients/php/User/Api/AttachmentApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AttachmentApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$path = /files/2021-01/abc.jpg; // string\n\ntry {\n    $result = $apiInstance-&gt;checkIfAssetExists($workspace_id, $base_name, $path);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AttachmentApi-&gt;checkIfAssetExists: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AttachmentApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. path string [optional]"},{"location":"clients/php/User/Api/AttachmentApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AttachmentApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AttachmentApi/#deletebaseasset","title":"<code>deleteBaseAsset()</code>","text":"<pre><code>deleteBaseAsset($base_uuid, $path): object\n</code></pre> <p>Delete Base Asset</p> <p>Delete a directory, a file or an image from a base.</p>"},{"location":"clients/php/User/Api/AttachmentApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AttachmentApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$path = /files/2021-01/abc.jpg; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteBaseAsset($base_uuid, $path);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AttachmentApi-&gt;deleteBaseAsset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AttachmentApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. path string [optional]"},{"location":"clients/php/User/Api/AttachmentApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AttachmentApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AttachmentApi/#deletebaseassets","title":"<code>deleteBaseAssets()</code>","text":"<pre><code>deleteBaseAssets($base_uuid): object\n</code></pre> <p>Delete Base Assets</p> <p>Delete base assets/attachments by batch. In the request body: - <code>parent_path</code> is the parent path in which the objects are in, that you would like to delete. They could be files, or folders. - <code>asset_names</code> is an array of objects you'd like to delete in this path. You can list folders or file names here.</p>"},{"location":"clients/php/User/Api/AttachmentApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AttachmentApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;deleteBaseAssets($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AttachmentApi-&gt;deleteBaseAssets: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AttachmentApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/User/Api/AttachmentApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AttachmentApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AttachmentApi/#getbaseattachmentuploadlink","title":"<code>getBaseAttachmentUploadLink()</code>","text":"<pre><code>getBaseAttachmentUploadLink($workspace_id, $base_name): object\n</code></pre> <p>Get Base Attachment Upload Link</p> <p>Get the attachment upload link to a base. Images should be uploaded to the <code>img_relative_path</code>, all other files should be uploaded to the <code>file_relative_path</code>.</p>"},{"location":"clients/php/User/Api/AttachmentApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AttachmentApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base\n\ntry {\n    $result = $apiInstance-&gt;getBaseAttachmentUploadLink($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AttachmentApi-&gt;getBaseAttachmentUploadLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AttachmentApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base"},{"location":"clients/php/User/Api/AttachmentApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AttachmentApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AttachmentApi/#listbaseassets","title":"<code>listBaseAssets()</code>","text":"<pre><code>listBaseAssets($base_uuid, $parent_dir): object\n</code></pre> <p>List Base Asset Directories And Files</p> <p>List all the directories, files and images in the given path in a base.  The returned <code>is_file</code> value indicates if this object is a file (<code>true</code>) or a folder (<code>false</code>).</p>"},{"location":"clients/php/User/Api/AttachmentApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AttachmentApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$parent_dir = /; // string\n\ntry {\n    $result = $apiInstance-&gt;listBaseAssets($base_uuid, $parent_dir);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AttachmentApi-&gt;listBaseAssets: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AttachmentApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. parent_dir string [optional]"},{"location":"clients/php/User/Api/AttachmentApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AttachmentApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AttachmentApi/#listrecentlyuploadedfiles","title":"<code>listRecentlyUploadedFiles()</code>","text":"<pre><code>listRecentlyUploadedFiles($base_uuid, $months): object\n</code></pre> <p>List Recently Uploaded Files</p> <p>Use this request to list off the files uploaded to the current base in the past months.  If there is no upload in a certain month, an empty list is returned for that month. See example for details.</p>"},{"location":"clients/php/User/Api/AttachmentApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AttachmentApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$months = 3; // int | Number of months to list file upload history. Optional. 2 by default.\n\ntry {\n    $result = $apiInstance-&gt;listRecentlyUploadedFiles($base_uuid, $months);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AttachmentApi-&gt;listRecentlyUploadedFiles: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AttachmentApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. months int Number of months to list file upload history. Optional. 2 by default. [optional]"},{"location":"clients/php/User/Api/AttachmentApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AttachmentApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AttachmentApi/#renamebaseasset","title":"<code>renameBaseAsset()</code>","text":"<pre><code>renameBaseAsset($base_uuid, $path, $new_name): object\n</code></pre> <p>Rename Base Asset</p> <p>Once you have the exact path and filename of an asset, you can use this request to rename it. In the request body:    <code>path</code> is the exact path and filename of your asset;  <code>new_name</code> is the new filename of your asset without path.</p>"},{"location":"clients/php/User/Api/AttachmentApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AttachmentApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$path = 'path_example'; // string\n$new_name = 'new_name_example'; // string\n\ntry {\n    $result = $apiInstance-&gt;renameBaseAsset($base_uuid, $path, $new_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AttachmentApi-&gt;renameBaseAsset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AttachmentApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. path string [optional] new_name string [optional]"},{"location":"clients/php/User/Api/AttachmentApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AttachmentApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AutomationsApi/","title":"SeaTable\\Client\\AutomationsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createAutomationRule() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/automation-rules/ Create Automation Rule deleteAutomationRule() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/automation-rules/{automation_rule_id}/ Delete Automation Rule listAutomationRules() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/automation-rules/ List Automation Rules updateAutomationRule() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/automation-rules/{automation_rule_id}/ Update Automation Rule"},{"location":"clients/php/User/Api/AutomationsApi/#createautomationrule","title":"<code>createAutomationRule()</code>","text":"<pre><code>createAutomationRule($workspace_id, $base_name, $create_automation_rule_request): object\n</code></pre> <p>Create Automation Rule</p> <p>You can set the automation rule to trigger by condition, or periodically. The following instruction shows you how to send the request body. Consult the example request for demonstration.  After successful creation, an <code>id</code> is returned, this is the ID of the automation rule you just created, and is to be distinguished from the action's <code>_id</code> like explained below in the actions section.  # First, define the running condition  For the <code>run_condition</code> parameter, use  - <code>per_update</code> for conditional trigger, if the rule should be triggered when a certain condition is met when the table has been updated; - <code>per_day</code>, <code>per_week</code>, or <code>per_month</code> for periodical trigger, if the rule should be triggered periodically.       # Then, define the trigger condition  In the <code>trigger</code> object, all the following params are required:  - <code>rule_name</code> is the name of this rule; - <code>table_id</code> is the ID of the table; - <code>view_id</code> is the ID of the view; - <code>condition</code> is how you'd like the rule to trigger. Use <code>filters_satisfy</code> for conditional trigger or <code>run_periodically</code> for periodical trigger.       ## Determine the trigger scenario if <code>run_condition</code> is <code>per_update</code>  In the automation rule's trigger conditions, you can watch some or all of the columns for changes, and eventually set filter conditions to narrow down the watching. So that means there are three typical scenarios:  - ### Watch all the columns without filters                 This is the simplest scenario: whenever a record has been changed, this rule will trigger. To do this, just define <code>watch_all_columns</code> as <code>true</code> and you are good to go:       <code>\\\"trigger\\\": {         \\\"rule_name\\\": \\\"Watch all\\\",         \\\"table_id\\\": \\\"0000\\\",         \\\"view_id\\\": \\\"0000\\\",         \\\"condition\\\": \\\"filters_satisfy\\\",         \\\"watch_all_columns\\\": true     }</code>  - ### Watch one or more columns without filters                 In the <code>column_keys</code> array, list the <code>key</code>s of columns you'd like to watch. Remember to set <code>watch_all_columns</code> to <code>false</code> (if you leave it as <code>true</code>, all the columns will be watched):       <code>\\\"trigger\\\": {         \\\"rule_name\\\": \\\"Watch Name and Select\\\",         \\\"table_id\\\": \\\"0000\\\",         \\\"view_id\\\": \\\"0000\\\",         \\\"condition\\\": \\\"filters_satisfy\\\",         \\\"column_keys\\\": [\\\"0000\\\", \\\"72IC\\\"]     }</code>  - ### To apply filters to the above scenarios                 You'll need two further params, if you'd like to filter the watched columns: - <code>filters</code> as an object. For details, refer to the SeaTable API Parameter Reference under \\\"filters\\\". - <code>filter_conjunction</code>: Use <code>And</code> or <code>Or</code> for the filter conjunction logic.       Here's an example:  <code>\\\"trigger\\\": {         \\\"rule_name\\\": \\\"test-auto\\\",         \\\"table_id\\\": \\\"0000\\\",         \\\"view_id\\\": \\\"0000\\\",         \\\"condition\\\": \\\"filters_satisfy\\\",         \\\"filters\\\": [{             \\\"column_key\\\": \\\"0000\\\",             \\\"filter_predicate\\\": \\\"contains\\\",             \\\"filter_term\\\": \\\"yes\\\"         }, {             \\\"column_key\\\": \\\"_creator\\\",             \\\"filter_predicate\\\": \\\"contains\\\",             \\\"filter_term\\\": [\\\"0027d98c471a4ee69eaf073508fc0d27@auth.local\\\"]         }],         \\\"filter_conjunction\\\": \\\"And\\\"     }</code>  ## Determine the trigger scenario if <code>run_condition</code> is <code>per_day</code>, <code>per_week</code>, or <code>per_month</code>  One or more further params are required:  - If the <code>run_condition</code> is <code>per_day</code>, define <code>notify_hour</code> here. Use <code>0</code> to <code>23</code> for the time of day you'd like the rule to trigger. - If the <code>run_condition</code> is <code>per_week</code>, define these two params:     - <code>notify_week_day</code>: Use an integer from <code>1</code> to <code>7</code> for Monday to Sunday, and     - <code>notify_week_hour</code>: Use <code>0</code> to <code>23</code> for the time of day you'd like the rule to trigger. - If the <code>run_condition</code> is <code>per_month</code>, define these two params:     - <code>notify_month_day</code>: Use an integer from <code>1</code> to <code>31</code> for the day of month. Attention: If it's set to <code>31</code> but a month doesn't have a 31st day, this rule won't be triggered. It'll only be triggered when the current day is a 31st.     - <code>notify_month_hour</code>: Use <code>0</code> to <code>23</code> for the time of day you'd like the rule to trigger.  See the example request for demonstration.  # Last but not least: The action  Different than the <code>trigger</code> object, the <code>actions</code> is a list of objects. This enables you to trigger multiple actions all at once.  In each action object, the <code>_id</code> is the first parameter. It's an ID of the action. If you have multiple actions in one rule, they should carry different IDs. You can decide which ID an action should carry.  ### To notify one or more users:  - <code>type</code> should be <code>notify</code>; - <code>users</code> is a list of user's IDs, it's optional if the <code>users_column_key</code> is defined; - <code>users_column_key</code> is a list of <code>key</code>s of columns that are the types of collaborator, creator or modifier; - <code>default_msg</code>: is the content of the message. You can use {column name} in the message to quote the content of a certain cell.       Example:  <code>\\\"actions\\\": [         {             \\\"type\\\": \\\"notify\\\",             \\\"users\\\": [],             \\\"default_msg\\\": \\\"look at {Name}.\\\",             \\\"_id\\\": \\\"740077\\\",             \\\"users_column_key\\\": \\\"iXRK\\\"         }     ]</code>  ### To modify the record:  - <code>type</code> should be <code>update_record</code>; - <code>updates</code> is an object including the column <code>key</code> and desired content of each field that you would like to modify.       Example:  <code>\\\"actions\\\": [         {             \\\"type\\\": \\\"update_record\\\",             \\\"updates\\\": {                 \\\"0000\\\": \\\"abc\\\",                 \\\"6NKm\\\": 123             },             \\\"_id\\\": \\\"54696\\\"         }     ]</code>  ### To lock the record:  - <code>type</code> should be <code>lock_record</code>; - <code>is_locked</code> set to <code>true</code> and the record that triggered the action will be locked.       Example:  <code>\\\"actions\\\": [         {             \\\"type\\\": \\\"lock_record\\\",             \\\"is_locked\\\": true,             \\\"_id\\\": \\\"872510\\\"         }     ]</code>  ### To add a new record:  - <code>type</code> should be <code>add_record</code>; - <code>row</code> is an object including the column <code>key</code> and desired content of each field that you would like to add in the new record.       Example:  <code>\\\"actions\\\": [         {             \\\"type\\\": \\\"add_record\\\",             \\\"row\\\": {                 \\\"0000\\\": \\\"abc\\\"             },             \\\"_id\\\": \\\"410993\\\"         }     ]</code>  ### To send an email:  - <code>type</code> should be <code>send_email</code>; - <code>account_id</code> is the ID of the third party account you added in this base. Refer to Third Party Email Accounts for details; - <code>send_to</code> is the receiver's email address. If you would like to send to multiple receivers, separate their email addresses with comma (,) inside of the quotation mark. - <code>copy_to</code> is the CC receiver's email address. For multiple addresses see above. - <code>subject</code> is the subject of your email. - <code>default_msg</code> is the content of the message.       Example:  <code>\\\"actions\\\": [         {             \\\"type\\\": \\\"send_email\\\",             \\\"default_msg\\\": \\\"Content example.\\\",             \\\"account_id\\\": 17,             \\\"subject\\\": \\\"Subject sample\\\",             \\\"send_to\\\": \\\"email@example.com, email2@example.com\\\",             \\\"copy_to\\\": \\\"email3@example.com, email4@example.com\\\",             \\\"_id\\\": \\\"838356\\\"         }     ] }</code></p>"},{"location":"clients/php/User/Api/AutomationsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AutomationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$create_automation_rule_request = new \\SeaTable\\Client\\User\\CreateAutomationRuleRequest(); // \\SeaTable\\Client\\User\\CreateAutomationRuleRequest\n\ntry {\n    $result = $apiInstance-&gt;createAutomationRule($workspace_id, $base_name, $create_automation_rule_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AutomationsApi-&gt;createAutomationRule: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AutomationsApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. create_automation_rule_request \\SeaTable\\Client\\User\\CreateAutomationRuleRequest [optional]"},{"location":"clients/php/User/Api/AutomationsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AutomationsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AutomationsApi/#deleteautomationrule","title":"<code>deleteAutomationRule()</code>","text":"<pre><code>deleteAutomationRule($workspace_id, $base_name, $automation_rule_id): object\n</code></pre> <p>Delete Automation Rule</p> <p>Delete an existing automation rule. This operation cannot be undone!</p>"},{"location":"clients/php/User/Api/AutomationsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AutomationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$automation_rule_id = 20; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteAutomationRule($workspace_id, $base_name, $automation_rule_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AutomationsApi-&gt;deleteAutomationRule: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AutomationsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. automation_rule_id int"},{"location":"clients/php/User/Api/AutomationsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AutomationsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AutomationsApi/#listautomationrules","title":"<code>listAutomationRules()</code>","text":"<pre><code>listAutomationRules($workspace_id, $base_name): object\n</code></pre> <p>List Automation Rules</p> <p>List all the automation rules in a base.</p>"},{"location":"clients/php/User/Api/AutomationsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AutomationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listAutomationRules($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AutomationsApi-&gt;listAutomationRules: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AutomationsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/AutomationsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AutomationsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/AutomationsApi/#updateautomationrule","title":"<code>updateAutomationRule()</code>","text":"<pre><code>updateAutomationRule($workspace_id, $base_name, $automation_rule_id, $create_automation_rule_request): object\n</code></pre> <p>Update Automation Rule</p> <p>Update a base automation rule with this API request. Use the <code>id</code> you retrieved by listing automation rules or creating an automation rule.  For the exact parameters in the request body, consult the call \\\"Create A Base Automation Rule\\\".</p>"},{"location":"clients/php/User/Api/AutomationsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\AutomationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$automation_rule_id = 20; // int\n$create_automation_rule_request = new \\SeaTable\\Client\\User\\CreateAutomationRuleRequest(); // \\SeaTable\\Client\\User\\CreateAutomationRuleRequest\n\ntry {\n    $result = $apiInstance-&gt;updateAutomationRule($workspace_id, $base_name, $automation_rule_id, $create_automation_rule_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AutomationsApi-&gt;updateAutomationRule: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/AutomationsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. automation_rule_id int create_automation_rule_request \\SeaTable\\Client\\User\\CreateAutomationRuleRequest [optional]"},{"location":"clients/php/User/Api/AutomationsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/AutomationsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/","title":"SeaTable\\Client\\BasesApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description basePassword() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/password/ Base Password clearTrash() DELETE /api/v2.1/trash-dtables/ Clear Trash createBase() POST /api/v2.1/dtables/ Create Base createFolder() POST /api/v2.1/workspace/{workspace_id}/folders/ Create Folder deleteBase() DELETE /api/v2.1/workspace/{workspace_id}/dtable/ Delete Base deleteFolder() DELETE /api/v2.1/workspace/{workspace_id}/folders/{folder_id}/ Delete Folder favoriteBase() POST /api/v2.1/starred-dtables/ Favorite Base listBases() GET /api/v2.1/user-admin-dtables/ List Bases listFavorites() GET /api/v2.1/starred-dtables/ List Favorites listGroupTrashedBases() GET /api/v2.1/groups/{group_id}/trash-dtables/ List Group Trashed Bases listTrashedBases() GET /api/v2.1/trash-dtables/ List Trashed Bases moveBaseIntoFolder() POST /api/v2.1/workspace/{workspace_id}/folder-item-moving/ Move Base into Folder restoreGroupTrashedBase() PUT /api/v2.1/groups/{group_id}/trash-dtables/{base_uuid}/ Restore Group Trashed Base restoreTrashedBase() PUT /api/v2.1/trash-dtables/{trashed_base_id}/ Restore Trashed Base searchBaseOrApps() GET /api/v2.1/dtable/items-search/ Search base or apps unfavoriteBase() DELETE /api/v2.1/starred-dtables/ Unfavorite Base updateBase() PUT /api/v2.1/workspace/{workspace_id}/dtable/ Update Base updateFolder() PUT /api/v2.1/workspace/{workspace_id}/folders/{folder_id}/ Update Folder"},{"location":"clients/php/User/Api/BasesApi/#basepassword","title":"<code>basePassword()</code>","text":"<pre><code>basePassword($workspace_id, $base_name, $base_password_request): object\n</code></pre> <p>Base Password</p> <p>Use this request to unset a base password. You'll need to enter the current password <code>password</code> to be able to unset it. After unsetting a password, the base is not protected by a password anymore (the <code>is_encrypted</code> is not <code>false</code>).</p>"},{"location":"clients/php/User/Api/BasesApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$base_password_request = new \\SeaTable\\Client\\User\\BasePasswordRequest(); // \\SeaTable\\Client\\User\\BasePasswordRequest\n\ntry {\n    $result = $apiInstance-&gt;basePassword($workspace_id, $base_name, $base_password_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;basePassword: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. base_password_request \\SeaTable\\Client\\User\\BasePasswordRequest [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#cleartrash","title":"<code>clearTrash()</code>","text":"<pre><code>clearTrash(): object\n</code></pre> <p>Clear Trash</p> <p>By cleaning the trash bin, all the bases there will be removed permanently and cannot be restored any more.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;clearTrash();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;clearTrash: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/BasesApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#createbase","title":"<code>createBase()</code>","text":"<pre><code>createBase($name, $workspace_id, $icon, $color): object\n</code></pre> <p>Create Base</p> <p>Create a new base.   When you create a new base with this API request or on the web UI, SeaTable automatically adds the following content into the new base:  - A new table \\\"Table1\\\" (with the <code>table_id</code> of <code>0000</code>), and - A \\\"Default View\\\" (with the <code>view_id</code> of <code>0000</code>), and - A new text column \\\"Name\\\" (with the column's <code>key</code> of <code>0000</code>); - Three empty rows (The row's IDs are randomly generated. Use the call List Rows to see their IDs).       Optionally, you can select icons and colors from the following list to customize your base's icon in the web UI:  SeaTable base icon list <code>DTABLE_ICON_LIST = [   'icon-worksheet',   'icon-task-management',   'icon-software-test-management',   'icon-design-assignment',   'icon-video-production',   'icon-market-analysis',   'icon-data-analysis',   'icon-product-knowledge-base',   'icon-asset-management',   'icon-financial-information-record',   'icon-dollar',   'icon-company-inventory',   'icon-customer-inquiry',   'icon-customer-list',   'icon-product-list',   'icon-store-address',   'icon-leave-record',   'icon-administrative-matters-calendar',   'icon-customer-relationship',   'icon-teachers-list',   'icon-book-library',   'icon-server-management',   'icon-time-management',   'icon-work-log',   'icon-online-promotion',   'icon-research',   'icon-user-interview',   'icon-client-review',   'icon-club-members', ]</code> SeaTable base icon color list <code>DTABLE_ICON_COLORS = [   '#FF8000',   '#FFB600',   '#E91E63',   '#EB00B1',   '#7626FD',   '#972CB0',   '#1DDD1D',   '#4CAF50',   '#02C0FF',   '#00C9C7',   '#1688FC',   '#656463' ]</code>  You can create a base in your personal workspace (\\\"My bases\\\"), or in a group you have write permission to. Just specify the optional <code>workspace_id</code> parameter in the request.  The returned <code>id</code> value is the ID of your base, this numeric ID is to be distinguished from the base's UUID.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$name = 'name_example'; // string\n$workspace_id = 'workspace_id_example'; // string | The workspace ID where your base is.\n$icon = 'icon_example'; // string | The icon of the base. Optional. Refer to [\\\\\\\"Create A Base\\\\\\\"](/reference/post_api-v2-1-dtables) for the list of available icons.\n$color = 'color_example'; // string | The icon color of the base. Optional. Refer to [\\\\\\\"Create A Base\\\\\\\"](/reference/post_api-v2-1-dtables) for the list of available icon colors.\n\ntry {\n    $result = $apiInstance-&gt;createBase($name, $workspace_id, $icon, $color);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;createBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes name string [optional] workspace_id string The workspace ID where your base is. [optional] icon string The icon of the base. Optional. Refer to \\\\\"Create A Base\\\\\" for the list of available icons. [optional] color string The icon color of the base. Optional. Refer to \\\\\"Create A Base\\\\\" for the list of available icon colors. [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#createfolder","title":"<code>createFolder()</code>","text":"<pre><code>createFolder($workspace_id, $name): object\n</code></pre> <p>Create Folder</p> <p>With this request, you can create a base folder easily with the desired <code>name</code> of your folder. In the response body, the <code>id</code> will be the ID of your folder. You'll need this specific ID to move bases into this folder or update, or delete this folder.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$name = 'name_example'; // string | Name of your folder. If the name already exists in the workspace, the system will add a \\\\\\\"(1)\\\\\\\" to it.\n\ntry {\n    $result = $apiInstance-&gt;createFolder($workspace_id, $name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;createFolder: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. name string Name of your folder. If the name already exists in the workspace, the system will add a \\\\\"(1)\\\\\" to it. [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#deletebase","title":"<code>deleteBase()</code>","text":"<pre><code>deleteBase($workspace_id): object\n</code></pre> <p>Delete Base</p> <p>Delete an existing base.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n\ntry {\n    $result = $apiInstance-&gt;deleteBase($workspace_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;deleteBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace."},{"location":"clients/php/User/Api/BasesApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#deletefolder","title":"<code>deleteFolder()</code>","text":"<pre><code>deleteFolder($workspace_id, $folder_id): object\n</code></pre> <p>Delete Folder</p> <p>You can only delete a folder when it's empty. To do so, first move your bases out of it and then delete it with its <code>folder_id</code> in this request.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$folder_id = 'folder_id_example'; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteFolder($workspace_id, $folder_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;deleteFolder: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. folder_id string"},{"location":"clients/php/User/Api/BasesApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#favoritebase","title":"<code>favoriteBase()</code>","text":"<pre><code>favoriteBase($dtable_uuid): object\n</code></pre> <p>Favorite Base</p> <p>Add a star to a base to make it a \\\"favorite\\\" base.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dtable_uuid = 'dtable_uuid_example'; // string | The UUID of the base.\n\ntry {\n    $result = $apiInstance-&gt;favoriteBase($dtable_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;favoriteBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes dtable_uuid string The UUID of the base. [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#listbases","title":"<code>listBases()</code>","text":"<pre><code>listBases(): object\n</code></pre> <p>List Bases</p> <p>List all the bases that the current user can administer. These include: - All the bases in the user's personal workspace; - All the bases in the groups where the current user is an owner or an admin. Each base's details are included in an object in the returned <code>dtables</code> array.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listBases();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_7","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/BasesApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#listfavorites","title":"<code>listFavorites()</code>","text":"<pre><code>listFavorites(): object\n</code></pre> <p>List Favorites</p> <p>List all the starred (favorite) bases in my library.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listFavorites();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listFavorites: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_8","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/BasesApi/#return-type_8","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_8","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#listgrouptrashedbases","title":"<code>listGroupTrashedBases()</code>","text":"<pre><code>listGroupTrashedBases($group_id): object\n</code></pre> <p>List Group Trashed Bases</p> <p>When a group base is deleted, it's sent to the group's trash bin. If you are the owner or administrator of this group, you have access to the group's trash bin.  Use this API request to take a look into your group's trash bin. You'll get a permission error if you are not the owner or admin of this group.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_9","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n\ntry {\n    $result = $apiInstance-&gt;listGroupTrashedBases($group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listGroupTrashedBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes group_id int"},{"location":"clients/php/User/Api/BasesApi/#return-type_9","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_9","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#listtrashedbases","title":"<code>listTrashedBases()</code>","text":"<pre><code>listTrashedBases($page, $per_page): object\n</code></pre> <p>List Trashed Bases</p> <p>List all the bases in the trash bin.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_10","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$page = 1; // int\n$per_page = 2; // int\n\ntry {\n    $result = $apiInstance-&gt;listTrashedBases($page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;listTrashedBases: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes page int [optional] per_page int [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type_10","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_10","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#movebaseintofolder","title":"<code>moveBaseIntoFolder()</code>","text":"<pre><code>moveBaseIntoFolder($workspace_id, $item_type, $item_id, $from, $to): object\n</code></pre> <p>Move Base into Folder</p> <p>Move your base from one folder to another by giving the <code>folder_id</code> of your source and target folders. Exception: the root folder doesn't have an ID, but can be identified with '/'. See example.  All the parameters in this request are required, as we might allow you to move folders into folders in the future, by then, you will be able to use another parameter in the <code>item_type</code>.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_11","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$item_type = 'item_type_example'; // string | Required.\n$item_id = 'item_id_example'; // string | When moving a base, use its `UUID`. Required.\n$from = 'from_example'; // string | From which folder are you moving the base out of? If from the root, use '/'. Otherwise use a `folder_id`. Required.\n$to = 'to_example'; // string | The ID of the target folder. Required.\n\ntry {\n    $result = $apiInstance-&gt;moveBaseIntoFolder($workspace_id, $item_type, $item_id, $from, $to);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;moveBaseIntoFolder: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. item_type string Required. [optional] item_id string When moving a base, use its `UUID`. Required. [optional] from string From which folder are you moving the base out of? If from the root, use '/'. Otherwise use a `folder_id`. Required. [optional] to string The ID of the target folder. Required. [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type_11","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_11","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#restoregrouptrashedbase","title":"<code>restoreGroupTrashedBase()</code>","text":"<pre><code>restoreGroupTrashedBase($group_id, $base_uuid): object\n</code></pre> <p>Restore Group Trashed Base</p> <p>With the UUID (retrievable with the previous call) of the trashed base, you can restore it with this request.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_12","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;restoreGroupTrashedBase($group_id, $base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;restoreGroupTrashedBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_12","title":"Parameters","text":"Name Type Description Notes group_id int base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/User/Api/BasesApi/#return-type_12","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_12","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#restoretrashedbase","title":"<code>restoreTrashedBase()</code>","text":"<pre><code>restoreTrashedBase($trashed_base_id): object\n</code></pre> <p>Restore Trashed Base</p> <p>Restore a trashed base from the trash bin. The base's ID can be retrieved from the call List Trashed Bases. The base's ID is written directly in the URL, like in this example, <code>497</code>.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_13","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$trashed_base_id = 497; // int | The ID of the trashed base.\n\ntry {\n    $result = $apiInstance-&gt;restoreTrashedBase($trashed_base_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;restoreTrashedBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_13","title":"Parameters","text":"Name Type Description Notes trashed_base_id int The ID of the trashed base."},{"location":"clients/php/User/Api/BasesApi/#return-type_13","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_13","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#searchbaseorapps","title":"<code>searchBaseOrApps()</code>","text":"<pre><code>searchBaseOrApps($query_str, $query_type): object\n</code></pre> <p>Search base or apps</p> <p>Search the base or apps of a user. Capitalization is irrelevant for the search and substrings are also allowed.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_14","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$query_str = test; // string | Search string. Substrings are allowed and capitalization does not matter.\n$query_type = 'query_type_example'; // string\n\ntry {\n    $result = $apiInstance-&gt;searchBaseOrApps($query_str, $query_type);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;searchBaseOrApps: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_14","title":"Parameters","text":"Name Type Description Notes query_str string Search string. Substrings are allowed and capitalization does not matter. [optional] query_type string [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type_14","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_14","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#unfavoritebase","title":"<code>unfavoriteBase()</code>","text":"<pre><code>unfavoriteBase($dtable_uuid): object\n</code></pre> <p>Unfavorite Base</p> <p>Remove the star of a base and therefore removing it from \\\"Favorites\\\".</p>"},{"location":"clients/php/User/Api/BasesApi/#example_15","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dtable_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;unfavoriteBase($dtable_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;unfavoriteBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_15","title":"Parameters","text":"Name Type Description Notes dtable_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/User/Api/BasesApi/#return-type_15","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_15","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#updatebase","title":"<code>updateBase()</code>","text":"<pre><code>updateBase($workspace_id, $name, $new_name, $icon, $color): object\n</code></pre> <p>Update Base</p> <p>Update a base's name, icon, and icon color.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_16","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$name = 'name_example'; // string | The old name of the base. Required.\n$new_name = 'new_name_example'; // string | The new name of the base. Optional.\n$icon = 'icon_example'; // string | The icon of the base. Optional. Refer to [\\\\\\\"Create A Base\\\\\\\"](/reference/post_api-v2-1-dtables) for the list of available icons.\n$color = 'color_example'; // string | The icon color of the base. Optional. Refer to [\\\\\\\"Create A Base\\\\\\\"](/reference/post_api-v2-1-dtables) for the list of available icon colors.\n\ntry {\n    $result = $apiInstance-&gt;updateBase($workspace_id, $name, $new_name, $icon, $color);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;updateBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_16","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. name string The old name of the base. Required. [optional] new_name string The new name of the base. Optional. [optional] icon string The icon of the base. Optional. Refer to \\\\\"Create A Base\\\\\" for the list of available icons. [optional] color string The icon color of the base. Optional. Refer to \\\\\"Create A Base\\\\\" for the list of available icon colors. [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type_16","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_16","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/BasesApi/#updatefolder","title":"<code>updateFolder()</code>","text":"<pre><code>updateFolder($workspace_id, $folder_id, $name): object\n</code></pre> <p>Update Folder</p> <p>Use this request to rename an existing folder with its <code>folder_id</code>.</p>"},{"location":"clients/php/User/Api/BasesApi/#example_17","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\BasesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$folder_id = 'folder_id_example'; // string\n$name = 'name_example'; // string | Name of your folder. If the name already exists in the workspace, the system will add a \\\\\\\"(1)\\\\\\\" to it.\n\ntry {\n    $result = $apiInstance-&gt;updateFolder($workspace_id, $folder_id, $name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling BasesApi-&gt;updateFolder: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/BasesApi/#parameters_17","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. folder_id string name string Name of your folder. If the name already exists in the workspace, the system will add a \\\\\"(1)\\\\\" to it. [optional]"},{"location":"clients/php/User/Api/BasesApi/#return-type_17","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/BasesApi/#authorization_17","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/","title":"SeaTable\\Client\\CommonDatasetApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description deleteCommonDataset() DELETE /api/v2.1/dtable/common-datasets/{dataset_id}/ Delete Common Dataset getCommonDataset() GET /api/v2.1/dtable/common-datasets/{dataset_id}/ Get Common Dataset getCommonDatasetInfo() GET /api/v2.1/dtable/common-datasets/{dataset_id}/info/ Get Common Dataset Info importCommonDataset() POST /api/v2.1/dtable/common-datasets/{dataset_id}/import/ Import Common Dataset listCommonDataset() GET /api/v2.1/dtable/common-datasets/ List Common Datasets listSyncHistory() GET /api/v2.1/dtable/common-datasets/syncs/ List Sync History publishCommonDataset() POST /api/v2.1/dtable/common-datasets/ Publish Common Dataset renameCommonDataset() PUT /api/v2.1/dtable/common-datasets/{dataset_id}/ Rename Common Dataset syncCommonDataset() POST /api/v2.1/dtable/common-datasets/{dataset_id}/sync/ Sync Common Dataset updateCommonDatasetSync() PUT /api/v2.1/dtable/common-datasets/{dataset_id}/sync/ Update Common Dataset Sync"},{"location":"clients/php/User/Api/CommonDatasetApi/#deletecommondataset","title":"<code>deleteCommonDataset()</code>","text":"<pre><code>deleteCommonDataset($dataset_id): object\n</code></pre> <p>Delete Common Dataset</p> <p>Delete a common dataset by its ID. This ID could be retrieved by the call e.g. List Common Datasets A Base Can Access.  This request doesn't delete anything in real. It just stops sharing that view from the original base. The data in the original base is intact.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dataset_id = 5; // int | The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here.\n\ntry {\n    $result = $apiInstance-&gt;deleteCommonDataset($dataset_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;deleteCommonDataset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters","title":"Parameters","text":"Name Type Description Notes dataset_id int The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here."},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#getcommondataset","title":"<code>getCommonDataset()</code>","text":"<pre><code>getCommonDataset($dataset_id): object\n</code></pre> <p>Get Common Dataset</p> <p>List the content of the common dataset by rows, columns and related users. The <code>dataset_id</code> used here is the ID you have retrieved from the response when you publish a common dataset.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dataset_id = 5; // int | The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here.\n\ntry {\n    $result = $apiInstance-&gt;getCommonDataset($dataset_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;getCommonDataset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes dataset_id int The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here."},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#getcommondatasetinfo","title":"<code>getCommonDatasetInfo()</code>","text":"<pre><code>getCommonDatasetInfo($dataset_id): object\n</code></pre> <p>Get Common Dataset Info</p> <p>List the basic information of the common dataset by the source table name and view name. The <code>dataset_id</code> used here is the ID you have retrieved from the response when you publish a common dataset.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dataset_id = 5; // int | The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here.\n\ntry {\n    $result = $apiInstance-&gt;getCommonDatasetInfo($dataset_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;getCommonDatasetInfo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes dataset_id int The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here."},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#importcommondataset","title":"<code>importCommonDataset()</code>","text":"<pre><code>importCommonDataset($dataset_id, $dst_dtable_uuid): object\n</code></pre> <p>Import Common Dataset</p> <p>Import a common dataset into your destination base. This will create a new table labeled as a common dataset table.    To import a common dataset into a base, the following conditions have to be met:    - The destination base is in a group, and  - You are the admin or owner of this group, and  - This group has access to the common dataset.    The ID of the common dataset can be retrieved via the request e.g. List Common Datasets A Base Can Access.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dataset_id = 5; // int | The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here.\n$dst_dtable_uuid = 'dst_dtable_uuid_example'; // string | The name of the base.\n\ntry {\n    $result = $apiInstance-&gt;importCommonDataset($dataset_id, $dst_dtable_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;importCommonDataset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes dataset_id int The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here. dst_dtable_uuid string The name of the base. [optional]"},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#listcommondataset","title":"<code>listCommonDataset()</code>","text":"<pre><code>listCommonDataset($dtable_uuid, $by_group): object\n</code></pre> <p>List Common Datasets</p> <p>List all the common datasets a particular base can access by its <code>base_uuid</code>.  Basically, when a common dataset is shared to a group and this base is in the group, it has access to the common dataset.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dtable_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$by_group = True; // bool | Whether return the list of datasets by groups when dtable_uuid is not given, default false, optional\n\ntry {\n    $result = $apiInstance-&gt;listCommonDataset($dtable_uuid, $by_group);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;listCommonDataset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes dtable_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. by_group bool Whether return the list of datasets by groups when dtable_uuid is not given, default false, optional [optional]"},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#listsynchistory","title":"<code>listSyncHistory()</code>","text":"<pre><code>listSyncHistory($dtable_uuid): object\n</code></pre> <p>List Sync History</p> <p>Use this call to list off the common datasets synchronization history of the current base.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dtable_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;listSyncHistory($dtable_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;listSyncHistory: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes dtable_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#publishcommondataset","title":"<code>publishCommonDataset()</code>","text":"<pre><code>publishCommonDataset($dataset_name, $workspace_id, $dtable_name, $table_name, $view_name): object\n</code></pre> <p>Publish Common Dataset</p> <p>You can publish a common dataset from a view, if the following conditions are met: - This base is in a group, and - You are the owner or admin of this group. After successful publishing, the returned <code>id</code> value is the ID of the common dataset.  All the request params are required.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dataset_name = 'dataset_name_example'; // string | The name of the common dataset.\n$workspace_id = 'workspace_id_example'; // string | The workspace ID where your base is.\n$dtable_name = 'dtable_name_example'; // string | The name of the base.\n$table_name = 'table_name_example'; // string | The name of the table.\n$view_name = 'view_name_example'; // string | The name of the view\n\ntry {\n    $result = $apiInstance-&gt;publishCommonDataset($dataset_name, $workspace_id, $dtable_name, $table_name, $view_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;publishCommonDataset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes dataset_name string The name of the common dataset. [optional] workspace_id string The workspace ID where your base is. [optional] dtable_name string The name of the base. [optional] table_name string The name of the table. [optional] view_name string The name of the view [optional]"},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#renamecommondataset","title":"<code>renameCommonDataset()</code>","text":"<pre><code>renameCommonDataset($dataset_id, $dataset_name): object\n</code></pre> <p>Rename Common Dataset</p> <p>Use this request to rename a common dataset.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dataset_id = 5; // int | The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here.\n$dataset_name = 'dataset_name_example'; // string | The name of the common dataset.\n\ntry {\n    $result = $apiInstance-&gt;renameCommonDataset($dataset_id, $dataset_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;renameCommonDataset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes dataset_id int The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here. dataset_name string The name of the common dataset. [optional]"},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#synccommondataset","title":"<code>syncCommonDataset()</code>","text":"<pre><code>syncCommonDataset($dataset_id, $dst_dtable_uuid, $is_sync, $dst_table_id, $dst_view_id)\n</code></pre> <p>Sync Common Dataset</p> <p>Common datasets do not automatically synchronize with the original view. Use this request regularly to keep your data up-to-date.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dataset_id = 5; // int | The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here.\n$dst_dtable_uuid = 'dst_dtable_uuid_example'; // string | The UUID of the destination base.\n$is_sync = True; // bool\n$dst_table_id = 'dst_table_id_example'; // string\n$dst_view_id = 'dst_view_id_example'; // string\n\ntry {\n    $apiInstance-&gt;syncCommonDataset($dataset_id, $dst_dtable_uuid, $is_sync, $dst_table_id, $dst_view_id);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;syncCommonDataset: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes dataset_id int The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here. dst_dtable_uuid string The UUID of the destination base. [optional] is_sync bool [optional] dst_table_id string [optional] dst_view_id string [optional]"},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_8","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_8","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#updatecommondatasetsync","title":"<code>updateCommonDatasetSync()</code>","text":"<pre><code>updateCommonDatasetSync($dataset_id, $update_common_dataset_sync_request): object\n</code></pre> <p>Update Common Dataset Sync</p> <p>You can change the configuration of your common dataset's syncing with these params:    <code>is_sync_periodically</code>: Whether syncing should be carried out daily (<code>true</code> or <code>false</code>, required);  <code>dst_dtable_uuid</code>: The UUID of the base where you'd like this common dataset to sync to;  <code>dst_table_id</code>: The ID of the destination table.    Attention: This configuration update doesn't establish a new common dataset synchronization, but only can update existing common dataset connections.</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#example_9","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\CommonDatasetApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dataset_id = 5; // int | The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here.\n$update_common_dataset_sync_request = new \\SeaTable\\Client\\User\\UpdateCommonDatasetSyncRequest(); // \\SeaTable\\Client\\User\\UpdateCommonDatasetSyncRequest\n\ntry {\n    $result = $apiInstance-&gt;updateCommonDatasetSync($dataset_id, $update_common_dataset_sync_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling CommonDatasetApi-&gt;updateCommonDatasetSync: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/CommonDatasetApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes dataset_id int The ID of the common dataset. When you e.g. publish a common dataset from a view, the returned `id` is what you need here. update_common_dataset_sync_request \\SeaTable\\Client\\User\\UpdateCommonDatasetSyncRequest [optional]"},{"location":"clients/php/User/Api/CommonDatasetApi/#return-type_9","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/CommonDatasetApi/#authorization_9","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/DepartmentsApi/","title":"SeaTable\\Client\\DepartmentsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description listDeparmentMembers() GET /api/v2.1/address-book/departments/{department_id}/members/ List Deparment Members listDepartments() GET /api/v2.1/address-book/departments/ List Departments"},{"location":"clients/php/User/Api/DepartmentsApi/#listdeparmentmembers","title":"<code>listDeparmentMembers()</code>","text":"<pre><code>listDeparmentMembers($department_id): object\n</code></pre> <p>List Deparment Members</p> <p>List the members of a department in your team (organization).</p>"},{"location":"clients/php/User/Api/DepartmentsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\DepartmentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$department_id = 10; // int | ID of the department. Required.\n\ntry {\n    $result = $apiInstance-&gt;listDeparmentMembers($department_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling DepartmentsApi-&gt;listDeparmentMembers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/DepartmentsApi/#parameters","title":"Parameters","text":"Name Type Description Notes department_id int ID of the department. Required."},{"location":"clients/php/User/Api/DepartmentsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/DepartmentsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/DepartmentsApi/#listdepartments","title":"<code>listDepartments()</code>","text":"<pre><code>listDepartments(): object\n</code></pre> <p>List Departments</p> <p>As a team (organization) user, you can use this API request to list all the departments in your team (organization).  The returned <code>id</code> values are the IDs of each department. If the <code>parent_group_id</code> is <code>-1</code>, it means this department is in the root level.</p>"},{"location":"clients/php/User/Api/DepartmentsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\DepartmentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listDepartments();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling DepartmentsApi-&gt;listDepartments: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/DepartmentsApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/DepartmentsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/DepartmentsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/","title":"SeaTable\\Client\\EmailAccountsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addEmailAccount() POST /api/v2.1/third-party-accounts/{base_uuid}/ Add Email Account deleteEmailAccount() DELETE /api/v2.1/third-party-accounts/{base_uuid}/{3rd_party_account_id}/ Delete Email Account getEmailAccount() GET /api/v2.1/third-party-accounts/{base_uuid}/detail/ Get Email Account getEmailSendingStatus() GET /api/v2.1/dtable-message-status/ Get Email Sending Status listEmailAccounts() GET /api/v2.1/third-party-accounts/{base_uuid}/ List Email Accounts updateEmailAccount() PUT /api/v2.1/third-party-accounts/{base_uuid}/{3rd_party_account_id}/ Update Email Account"},{"location":"clients/php/User/Api/EmailAccountsApi/#addemailaccount","title":"<code>addEmailAccount()</code>","text":"<pre><code>addEmailAccount($base_uuid, $add_email_account_request): object\n</code></pre> <p>Add Email Account</p> <p>Bound a third party email account in a base by using the params in the sample request body. The returned <code>id</code> value is the ID of this account.</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\EmailAccountsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$add_email_account_request = new \\SeaTable\\Client\\User\\AddEmailAccountRequest(); // \\SeaTable\\Client\\User\\AddEmailAccountRequest\n\ntry {\n    $result = $apiInstance-&gt;addEmailAccount($base_uuid, $add_email_account_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling EmailAccountsApi-&gt;addEmailAccount: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/EmailAccountsApi/#parameters","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. add_email_account_request \\SeaTable\\Client\\User\\AddEmailAccountRequest [optional]"},{"location":"clients/php/User/Api/EmailAccountsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#deleteemailaccount","title":"<code>deleteEmailAccount()</code>","text":"<pre><code>deleteEmailAccount($base_uuid, $_3rd_party_account_id): object\n</code></pre> <p>Delete Email Account</p> <p>Delete a third party account using its ID in the request URL.</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\EmailAccountsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$_3rd_party_account_id = 5; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteEmailAccount($base_uuid, $_3rd_party_account_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling EmailAccountsApi-&gt;deleteEmailAccount: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/EmailAccountsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. _3rd_party_account_id string"},{"location":"clients/php/User/Api/EmailAccountsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#getemailaccount","title":"<code>getEmailAccount()</code>","text":"<pre><code>getEmailAccount($base_uuid, $account_name)\n</code></pre> <p>Get Email Account</p> <p>Get the details of a 3rd party email account's information by its <code>account_name</code> in the URL.</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\EmailAccountsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$account_name = Email Server2; // string\n\ntry {\n    $apiInstance-&gt;getEmailAccount($base_uuid, $account_name);\n} catch (Exception $e) {\n    echo 'Exception when calling EmailAccountsApi-&gt;getEmailAccount: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/EmailAccountsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. account_name string [optional]"},{"location":"clients/php/User/Api/EmailAccountsApi/#return-type_2","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#getemailsendingstatus","title":"<code>getEmailSendingStatus()</code>","text":"<pre><code>getEmailSendingStatus($task_id): object\n</code></pre> <p>Get Email Sending Status</p> <p>Query the task status with the returned <code>task_id</code> when you Send An Email via 3rd Party Account. If you get an error message: <code>json {     \\\"error_msg\\\": \\\"task_id invalid.\\\" }</code> it means that the task has failed. This is most probably due to wrong account information.  Attention: After the task has been finished, you can only query it for once. A second query will also return the above error.</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\EmailAccountsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$task_id = 1616585864320; // int | The ID of the task, returned when you **Send An Email via 3rd Party Email Account**.\n\ntry {\n    $result = $apiInstance-&gt;getEmailSendingStatus($task_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling EmailAccountsApi-&gt;getEmailSendingStatus: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/EmailAccountsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes task_id int The ID of the task, returned when you Send An Email via 3rd Party Email Account. [optional]"},{"location":"clients/php/User/Api/EmailAccountsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#listemailaccounts","title":"<code>listEmailAccounts()</code>","text":"<pre><code>listEmailAccounts($base_uuid): object\n</code></pre> <p>List Email Accounts</p> <p>List all email accounts available in a base.</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\EmailAccountsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n\ntry {\n    $result = $apiInstance-&gt;listEmailAccounts($base_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling EmailAccountsApi-&gt;listEmailAccounts: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/EmailAccountsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid."},{"location":"clients/php/User/Api/EmailAccountsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#updateemailaccount","title":"<code>updateEmailAccount()</code>","text":"<pre><code>updateEmailAccount($base_uuid, $_3rd_party_account_id, $add_email_account_request): object\n</code></pre> <p>Update Email Account</p> <p>Change the account name, type, or detail (host, port, username or password) of a third party account using the account's ID in the URL. This ID can be retrieved by the call List 3rd Party Email Accounts, or by Add 3rd Party Email Account.</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\EmailAccountsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$base_uuid = 5c264e76-0e5a-448a-9f34-580b551364ca; // string | The unique identifier of a base. Sometimes also called dtable_uuid.\n$_3rd_party_account_id = 5; // string\n$add_email_account_request = new \\SeaTable\\Client\\User\\AddEmailAccountRequest(); // \\SeaTable\\Client\\User\\AddEmailAccountRequest\n\ntry {\n    $result = $apiInstance-&gt;updateEmailAccount($base_uuid, $_3rd_party_account_id, $add_email_account_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling EmailAccountsApi-&gt;updateEmailAccount: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/EmailAccountsApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes base_uuid string The unique identifier of a base. Sometimes also called dtable_uuid. _3rd_party_account_id string add_email_account_request \\SeaTable\\Client\\User\\AddEmailAccountRequest [optional]"},{"location":"clients/php/User/Api/EmailAccountsApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/EmailAccountsApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/FormsApi/","title":"SeaTable\\Client\\FormsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createForm() POST /api/v2.1/forms/ Create Form deleteForm() DELETE /api/v2.1/forms/{form_token}/ Delete Form duplicateForm() POST /api/v2.1/forms/{form_token}/duplicate/ Duplicate Form listForms() GET /api/v2.1/forms/ List Forms listSharedForms() GET /api/v2.1/forms/shared/ List Shared Forms updateForm() PUT /api/v2.1/forms/{form_token}/ Update Form uploadFormLogo() POST /api/v2.1/forms/{form_token}/logos/ Upload Form Logo"},{"location":"clients/php/User/Api/FormsApi/#createform","title":"<code>createForm()</code>","text":"<pre><code>createForm($workspace_id, $name, $form_config): object\n</code></pre> <p>Create Form</p> <p>Create a form in the base.  To customize this form, you can use the following request body in the <code>form_config</code> parameter and:  * Define the name of the form; * Choose which columns to include in it; * Set required fields; * Add descriptions; * Add remarks; * Send notifications; * Add a notice on the top of the form; * Add a notice on the bottom of the form; * Show a notice after submission; * Add a redirect link after submission; * Set a submission deadline.  <code>{         \\\"form_name\\\":\\\"Customer Survey\\\",              // The name of your form         \\\"columns\\\":[                                 // Choose the columns to include             {                 \\\"key\\\":\\\"0000\\\",                       // The column ID                 \\\"is_required\\\":false,                // Set obligation                 \\\"description\\\":\\\"\\\",                   // Add a description if needed                 \\\"filters\\\":[],                       // Conditional question (details follow)                 \\\"filter_conjunction\\\":\\\"And\\\"          // Filter behavior (details follow)             },             {                 \\\"key\\\":\\\"zJSb\\\",                 \\\"is_required\\\":false,                 \\\"description\\\":\\\"\\\",                 \\\"filters\\\":[],                 \\\"filter_conjunction\\\":\\\"And\\\"             },             {                 \\\"key\\\":\\\"xIy2\\\",                 \\\"is_required\\\":false,                 \\\"description\\\":\\\"\\\",                 \\\"filters\\\":[],                 \\\"filter_conjunction\\\":\\\"And\\\"             }         ],         \\\"table_id\\\":\\\"0000\\\",                          // ID of the table         \\\"remarkOption\\\":{                            // A notice at the bottom             \\\"isRemarkContentShow\\\":false,                           \\\"remarkContent\\\":\\\"\\\"             },         \\\"notification_config\\\":{                     // If notification will be sent               \\\"is_send_notification\\\":false,             \\\"notification_selected_users\\\":[]             },         \\\"top_remark_option\\\":{                       // A notice at the top               \\\"is_top_remark_content_show\\\":false,             \\\"top_remark_content\\\":\\\"\\\"             },         \\\"success_message_option\\\":{                  // A message after submission             \\\"is_success_message_show\\\":true,             \\\"success_message\\\":\\\"Thanks!\\\"             },         \\\"success_redirect_option\\\":{                 // A redirect URL after submission               \\\"is_success_redirect_show\\\":true,             \\\"success_redirect\\\":\\\"www.google.com\\\"             },         \\\"\\\"submit_deadline_option\\\":{                 // An optional submission deadline             \\\"is_submit_deadline_show\\\":true,             \\\"submit_deadline\\\":\\\"2021-10-28 00:00:00\\\"             }     }</code></p>"},{"location":"clients/php/User/Api/FormsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 'workspace_id_example'; // string | The workspace ID where your base is.\n$name = 'name_example'; // string\n$form_config = 'form_config_example'; // string | Define the form's name (required) and other details (optional). For a full list of available options, refer to the instruction above.\n\ntry {\n    $result = $apiInstance-&gt;createForm($workspace_id, $name, $form_config);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;createForm: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/FormsApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id string The workspace ID where your base is. [optional] name string [optional] form_config string Define the form's name (required) and other details (optional). For a full list of available options, refer to the instruction above. [optional]"},{"location":"clients/php/User/Api/FormsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/FormsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/FormsApi/#deleteform","title":"<code>deleteForm()</code>","text":"<pre><code>deleteForm($form_token): object\n</code></pre> <p>Delete Form</p> <p>Delete a form with its token.</p>"},{"location":"clients/php/User/Api/FormsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$form_token = 12345678-d378-4c12-8d7a-6da0fb48ee83; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteForm($form_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;deleteForm: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/FormsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes form_token string"},{"location":"clients/php/User/Api/FormsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/FormsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/FormsApi/#duplicateform","title":"<code>duplicateForm()</code>","text":"<pre><code>duplicateForm($form_token): object\n</code></pre> <p>Duplicate Form</p> <p>With a form's <code>form_token</code> (or <code>token</code> as returned by the call to list a user's or a base's forms), you can duplicate a form with this request.  In the response, the details of the newly created duplication are listed.</p>"},{"location":"clients/php/User/Api/FormsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$form_token = 12345678-d378-4c12-8d7a-6da0fb48ee83; // string\n\ntry {\n    $result = $apiInstance-&gt;duplicateForm($form_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;duplicateForm: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/FormsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes form_token string"},{"location":"clients/php/User/Api/FormsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/FormsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/FormsApi/#listforms","title":"<code>listForms()</code>","text":"<pre><code>listForms($workspace_id_query, $base_name): object\n</code></pre> <p>List Forms</p> <p>List all the forms of a base with full details of these forms. The returned <code>form_link</code> value is the URL of the form page, ready to be sent to survey participants.</p>"},{"location":"clients/php/User/Api/FormsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id_query = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base\n\ntry {\n    $result = $apiInstance-&gt;listForms($workspace_id_query, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;listForms: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/FormsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id_query int id of your workspace. base_name string name of your base"},{"location":"clients/php/User/Api/FormsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/FormsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/FormsApi/#listsharedforms","title":"<code>listSharedForms()</code>","text":"<pre><code>listSharedForms(): object\n</code></pre> <p>List Shared Forms</p> <p>List all the shared forms the user has access to.</p>"},{"location":"clients/php/User/Api/FormsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listSharedForms();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;listSharedForms: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/FormsApi/#parameters_4","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/FormsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/FormsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/FormsApi/#updateform","title":"<code>updateForm()</code>","text":"<pre><code>updateForm($form_token, $form_config): object\n</code></pre> <p>Update Form</p> <p>Update your form's configuration.</p>"},{"location":"clients/php/User/Api/FormsApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$form_token = 12345678-d378-4c12-8d7a-6da0fb48ee83; // string\n$form_config = 'form_config_example'; // string | Define the form's name (required) and other details (optional). For a full list of available options, refer to the instruction above.\n\ntry {\n    $result = $apiInstance-&gt;updateForm($form_token, $form_config);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;updateForm: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/FormsApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes form_token string form_config string Define the form's name (required) and other details (optional). For a full list of available options, refer to the instruction above. [optional]"},{"location":"clients/php/User/Api/FormsApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/FormsApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/FormsApi/#uploadformlogo","title":"<code>uploadFormLogo()</code>","text":"<pre><code>uploadFormLogo($form_token, $form_logo): object\n</code></pre> <p>Upload Form Logo</p> <p>Use this request to upload a custom logo for your form using your form's <code>form_token</code>.</p>"},{"location":"clients/php/User/Api/FormsApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\FormsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$form_token = 12345678-d378-4c12-8d7a-6da0fb48ee83; // string\n$form_logo = \"/path/to/file.txt\"; // \\SplFileObject | Path and file name to your logo image.\n\ntry {\n    $result = $apiInstance-&gt;uploadFormLogo($form_token, $form_logo);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FormsApi-&gt;uploadFormLogo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/FormsApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes form_token string form_logo \\SplFileObject\\SplFileObject Path and file name to your logo image. [optional]"},{"location":"clients/php/User/Api/FormsApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/FormsApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/","title":"SeaTable\\Client\\GroupsWorkspacesApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addGroupMember() POST /api/v2.1/groups/{group_id}/members/ Add Group Member copyBaseFromExternalLink() POST /api/v2.1/dtable-external-link/dtable-copy/ Copy Base from External Link copyBaseFromWorkspace() POST /api/v2.1/dtable-copy/ Copy Base from Workspace createGroup() POST /api/v2.1/groups/ Create Group deleteGroup() DELETE /api/v2.1/groups/{group_id}/ Delete Group getGroup() GET /api/v2.1/groups/{group_id}/ Get Group getGroupMembers() GET /api/v2.1/groups/{group_id}/members/ Get Group Members listGroups() GET /api/v2.1/groups/ List Groups listWorkspaces() GET /api/v2.1/workspaces/ List Workspaces removeGroupMember() DELETE /api/v2.1/groups/{group_id}/members/{group_member}/ Remove Group Member searchGroup() GET /api/v2.1/search-group/ Search Group searchGroupMembers() GET /api/v2.1/groups/{group_id}/search-member/ Search Group Members updateGroup() PUT /api/v2.1/groups/{group_id}/ Update Group updateGroupRole() PUT /api/v2.1/groups/{group_id}/members/{group_member}/ Update Group Role"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#addgroupmember","title":"<code>addGroupMember()</code>","text":"<pre><code>addGroupMember($group_id, $add_group_member_request): object\n</code></pre> <p>Add Group Member</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n$add_group_member_request = new \\SeaTable\\Client\\User\\AddGroupMemberRequest(); // \\SeaTable\\Client\\User\\AddGroupMemberRequest\n\ntry {\n    $result = $apiInstance-&gt;addGroupMember($group_id, $add_group_member_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;addGroupMember: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters","title":"Parameters","text":"Name Type Description Notes group_id int add_group_member_request \\SeaTable\\Client\\User\\AddGroupMemberRequest [optional]"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#copybasefromexternallink","title":"<code>copyBaseFromExternalLink()</code>","text":"<pre><code>copyBaseFromExternalLink($link, $dst_workspace_id)\n</code></pre> <p>Copy Base from External Link</p> <p>Copy a base from an external link to a workspace.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$link = 'link_example'; // string | Source external link.\n$dst_workspace_id = 56; // int | Destination workspace's ID.\n\ntry {\n    $apiInstance-&gt;copyBaseFromExternalLink($link, $dst_workspace_id);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;copyBaseFromExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes link string Source external link. [optional] dst_workspace_id int Destination workspace's ID. [optional]"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#copybasefromworkspace","title":"<code>copyBaseFromWorkspace()</code>","text":"<pre><code>copyBaseFromWorkspace($src_workspace_id, $name, $dst_workspace_id): object\n</code></pre> <p>Copy Base from Workspace</p> <p>Copy a base from a workspace to the destination workspace.  A workspace could be your own \\\"My library\\\", or a group's workspace. Therefore you need to define the <code>src_workspace_id</code> and <code>dst_workspace_id</code> in the call.   For the source workspace, you at least have to have the read permission of the base; for the source workspace, you must have write permission.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$src_workspace_id = 56; // int | Source workspace's ID.\n$name = 'name_example'; // string | Name of the base.\n$dst_workspace_id = 56; // int | Destination workspace's ID.\n\ntry {\n    $result = $apiInstance-&gt;copyBaseFromWorkspace($src_workspace_id, $name, $dst_workspace_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;copyBaseFromWorkspace: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes src_workspace_id int Source workspace's ID. name string Name of the base. dst_workspace_id int Destination workspace's ID."},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#creategroup","title":"<code>createGroup()</code>","text":"<pre><code>createGroup($create_group_request): object\n</code></pre> <p>Create Group</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$create_group_request = new \\SeaTable\\Client\\User\\CreateGroupRequest(); // \\SeaTable\\Client\\User\\CreateGroupRequest\n\ntry {\n    $result = $apiInstance-&gt;createGroup($create_group_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;createGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes create_group_request \\SeaTable\\Client\\User\\CreateGroupRequest [optional]"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#deletegroup","title":"<code>deleteGroup()</code>","text":"<pre><code>deleteGroup($group_id): object\n</code></pre> <p>Delete Group</p> <p>Delete a group with its ID.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteGroup($group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;deleteGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes group_id int"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#getgroup","title":"<code>getGroup()</code>","text":"<pre><code>getGroup($group_id): object\n</code></pre> <p>Get Group</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n\ntry {\n    $result = $apiInstance-&gt;getGroup($group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;getGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes group_id int"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#getgroupmembers","title":"<code>getGroupMembers()</code>","text":"<pre><code>getGroupMembers($group_id): object\n</code></pre> <p>Get Group Members</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n\ntry {\n    $result = $apiInstance-&gt;getGroupMembers($group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;getGroupMembers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes group_id int"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#listgroups","title":"<code>listGroups()</code>","text":"<pre><code>listGroups(): object\n</code></pre> <p>List Groups</p> <p>Show a list of all groups of the user.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listGroups();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;listGroups: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_7","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#listworkspaces","title":"<code>listWorkspaces()</code>","text":"<pre><code>listWorkspaces($detail): object\n</code></pre> <p>List Workspaces</p> <p>List all the workspaces/bases you have access to.  With the param <code>detail</code>, you can define if the returned list is with details (<code>true</code> or leave it by default) or without details (<code>false</code>). See the examples \\\"with detail=false\\\" and \\\"with detail=true\\\" for more information.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$detail = false; // bool | `true` or `false`, optional, `true` by default. When `false`, only the ID, name and type of each workspace is listed.\n\ntry {\n    $result = $apiInstance-&gt;listWorkspaces($detail);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;listWorkspaces: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes detail bool `true` or `false`, optional, `true` by default. When `false`, only the ID, name and type of each workspace is listed. [optional]"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_8","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_8","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#removegroupmember","title":"<code>removeGroupMember()</code>","text":"<pre><code>removeGroupMember($group_id, $group_member): object\n</code></pre> <p>Remove Group Member</p> <p>Group admins can remove other group members or a group member can leave the group.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_9","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n$group_member = 12345678-d378-4c12-8d7a-6da0fb48ee83; // string\n\ntry {\n    $result = $apiInstance-&gt;removeGroupMember($group_id, $group_member);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;removeGroupMember: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes group_id int group_member string"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_9","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_9","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#searchgroup","title":"<code>searchGroup()</code>","text":"<pre><code>searchGroup($q): object\n</code></pre> <p>Search Group</p> <p>Just give a search keyword in the <code>q</code> param.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_10","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$q = Micha; // string\n\ntry {\n    $result = $apiInstance-&gt;searchGroup($q);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;searchGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes q string [optional]"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_10","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_10","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#searchgroupmembers","title":"<code>searchGroupMembers()</code>","text":"<pre><code>searchGroupMembers($group_id, $q): object\n</code></pre> <p>Search Group Members</p> <p>As a group's administrator, you can use this API call to search for members in this group.  Just give a search keyword in the <code>q</code> param. Attention: Although a fussy search is allowed, unlike the web interface, the search via API is still case sensitive! A successful search will return each member's details that fit to your search criteria. See example.</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_11","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n$q = Micha; // string\n\ntry {\n    $result = $apiInstance-&gt;searchGroupMembers($group_id, $q);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;searchGroupMembers: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes group_id int q string [optional]"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_11","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_11","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#updategroup","title":"<code>updateGroup()</code>","text":"<pre><code>updateGroup($group_id, $update_group_request): object\n</code></pre> <p>Update Group</p> <p>Use this request to rename, and/or change owner of a group. In the request body, both parameters are optional. Only use the ones that you need to update: *   <code>owner</code> is the new owner of the group, include the user's ID here. If you don't want to change the owner, remove this parameter because if you enter the current owner's ID here, you'll get an error \\\"User xxx is already group owner\\\". *   <code>name</code> is the new name of your group. If you don't want to change the name, remove shi parameter because if you enter the current group name here you'll get an error \\\"There is already a group with that name\\\".</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_12","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n$update_group_request = new \\SeaTable\\Client\\User\\UpdateGroupRequest(); // \\SeaTable\\Client\\User\\UpdateGroupRequest\n\ntry {\n    $result = $apiInstance-&gt;updateGroup($group_id, $update_group_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;updateGroup: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_12","title":"Parameters","text":"Name Type Description Notes group_id int update_group_request \\SeaTable\\Client\\User\\UpdateGroupRequest [optional]"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_12","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_12","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#updategrouprole","title":"<code>updateGroupRole()</code>","text":"<pre><code>updateGroupRole($group_id, $group_member, $update_group_role_request): object\n</code></pre> <p>Update Group Role</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#example_13","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\GroupsWorkspacesApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$group_id = 1; // int\n$group_member = 12345678-d378-4c12-8d7a-6da0fb48ee83; // string\n$update_group_role_request = new \\SeaTable\\Client\\User\\UpdateGroupRoleRequest(); // \\SeaTable\\Client\\User\\UpdateGroupRoleRequest\n\ntry {\n    $result = $apiInstance-&gt;updateGroupRole($group_id, $group_member, $update_group_role_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling GroupsWorkspacesApi-&gt;updateGroupRole: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#parameters_13","title":"Parameters","text":"Name Type Description Notes group_id int group_member string update_group_role_request \\SeaTable\\Client\\User\\UpdateGroupRoleRequest [optional]"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#return-type_13","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/GroupsWorkspacesApi/#authorization_13","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ImportExportApi/","title":"SeaTable\\Client\\ImportExportApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description appendToTableFromFile() POST /api/v2.1/workspace/{workspace_id}/synchronous-import/append-excel-csv-to-table/ Append Excel CSV exportBase() GET /api/v2.1/workspace/{workspace_id}/synchronous-export/export-dtable/ Export Base exportBaseFromExternalLink() GET /dtable/external-links/{external_link_token}/download-zip/ Export Base from External Link exportBigDataView() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/convert-big-data-view-to-excel/ Export Big Data View to Excel exportTable() GET /api/v2.1/workspace/{workspace_id}/synchronous-export/export-table-to-excel/ Export Table exportView() GET /api/v2.1/workspace/{workspace_id}/synchronous-export/export-view-to-excel/ Export View importBasefromFile() POST /api/v2.1/workspace/{workspace_id}/synchronous-import/import-excel-csv-to-base/ Import Base from xlsx or csv importTableFromFile() POST /api/v2.1/workspace/{workspace_id}/synchronous-import/import-excel-csv-to-table/ Import Table from xlsx or csv updateFromFile() POST /api/v2.1/workspace/{workspace_id}/synchronous-import/update-table-via-excel-csv/ Update from xlsx or csv"},{"location":"clients/php/User/Api/ImportExportApi/#appendtotablefromfile","title":"<code>appendToTableFromFile()</code>","text":"<pre><code>appendToTableFromFile($workspace_id, $file, $dtable_uuid, $table_name): object\n</code></pre> <p>Append Excel CSV</p> <p>Hier muss noch eine Beschreibung erg\u00e4nzt werden.</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$file = \"/path/to/file.txt\"; // \\SplFileObject\n$dtable_uuid = 'dtable_uuid_example'; // string | The UUID of the base.\n$table_name = 'table_name_example'; // string | The name of the table.\n\ntry {\n    $result = $apiInstance-&gt;appendToTableFromFile($workspace_id, $file, $dtable_uuid, $table_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;appendToTableFromFile: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. file \\SplFileObject\\SplFileObject [optional] dtable_uuid string The UUID of the base. [optional] table_name string The name of the table. [optional]"},{"location":"clients/php/User/Api/ImportExportApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ImportExportApi/#exportbase","title":"<code>exportBase()</code>","text":"<pre><code>exportBase($dtable_name, $workspace_id, $password, $ignore_asset)\n</code></pre> <p>Export Base</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$dtable_name = Example; // string\n$workspace_id = 127; // int | id of your workspace.\n$password = 'password_example'; // string | The password of your Base.\n$ignore_asset = false; // bool | Set this to `true` to export the base without assets. Default is `false`.\n\ntry {\n    $apiInstance-&gt;exportBase($dtable_name, $workspace_id, $password, $ignore_asset);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;exportBase: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes dtable_name string workspace_id int id of your workspace. password string The password of your Base. [optional] ignore_asset bool Set this to `true` to export the base without assets. Default is `false`. [optional]"},{"location":"clients/php/User/Api/ImportExportApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ImportExportApi/#exportbasefromexternallink","title":"<code>exportBaseFromExternalLink()</code>","text":"<pre><code>exportBaseFromExternalLink($external_link_token)\n</code></pre> <p>Export Base from External Link</p> <p>Download a base with its external link as a .dtable zip file. Password protected external links are not supported yet.</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client()\n);\n$external_link_token = fleischkaesebroetchen; // string\n\ntry {\n    $apiInstance-&gt;exportBaseFromExternalLink($external_link_token);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;exportBaseFromExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes external_link_token string"},{"location":"clients/php/User/Api/ImportExportApi/#return-type_2","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization_2","title":"Authorization","text":"<p>No authorization required</p>"},{"location":"clients/php/User/Api/ImportExportApi/#exportbigdataview","title":"<code>exportBigDataView()</code>","text":"<pre><code>exportBigDataView($workspace_id, $base_name, $table_id, $view_id)\n</code></pre> <p>Export Big Data View to Excel</p> <p>Hier muss noch eine Beschreibung erg\u00e4nzt werden</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$table_id = 0000; // string | The id of the table. The id of a table is unique inside a base and is often used to identify a table. **Important: the table_id is not the table_name**.\n$view_id = Jz4d; // string | id of view, string\n\ntry {\n    $apiInstance-&gt;exportBigDataView($workspace_id, $base_name, $table_id, $view_id);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;exportBigDataView: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. view_id string id of view, string"},{"location":"clients/php/User/Api/ImportExportApi/#return-type_3","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ImportExportApi/#exporttable","title":"<code>exportTable()</code>","text":"<pre><code>exportTable($table_id, $table_name, $dtable_name, $workspace_id)\n</code></pre> <p>Export Table</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$table_id = 0000; // string | The id of the table. The id of a table is unique inside a base and is often used to identify a table. **Important: the table_id is not the table_name**.\n$table_name = Table1; // string | The name of the table.\n$dtable_name = Example; // string\n$workspace_id = 127; // int | id of your workspace.\n\ntry {\n    $apiInstance-&gt;exportTable($table_id, $table_name, $dtable_name, $workspace_id);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;exportTable: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. table_name string The name of the table. dtable_name string workspace_id int id of your workspace."},{"location":"clients/php/User/Api/ImportExportApi/#return-type_4","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ImportExportApi/#exportview","title":"<code>exportView()</code>","text":"<pre><code>exportView($table_id, $table_name, $dtable_name, $view_id, $view_name, $workspace_id)\n</code></pre> <p>Export View</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$table_id = 0000; // string | The id of the table. The id of a table is unique inside a base and is often used to identify a table. **Important: the table_id is not the table_name**.\n$table_name = Table1; // string | The name of the table.\n$dtable_name = Example; // string\n$view_id = Jz4d; // string | id of view, string\n$view_name = Default View; // string | name of view, required, string\n$workspace_id = 127; // int | id of your workspace.\n\ntry {\n    $apiInstance-&gt;exportView($table_id, $table_name, $dtable_name, $view_id, $view_name, $workspace_id);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;exportView: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. table_name string The name of the table. dtable_name string view_id string id of view, string view_name string name of view, required, string workspace_id int id of your workspace."},{"location":"clients/php/User/Api/ImportExportApi/#return-type_5","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ImportExportApi/#importbasefromfile","title":"<code>importBasefromFile()</code>","text":"<pre><code>importBasefromFile($workspace_id, $dtable, $folder): object\n</code></pre> <p>Import Base from xlsx or csv</p> <p>With this request, you can create a base by uploading a .xlsx or a .csv file.</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$dtable = \"/path/to/file.txt\"; // \\SplFileObject\n$folder = 'folder_example'; // string | If you would like to create the base into a folder, give its `folder_id` here. A base is created in the root folder by default. Optional.\n\ntry {\n    $result = $apiInstance-&gt;importBasefromFile($workspace_id, $dtable, $folder);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;importBasefromFile: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. dtable \\SplFileObject\\SplFileObject [optional] folder string If you would like to create the base into a folder, give its `folder_id` here. A base is created in the root folder by default. Optional. [optional]"},{"location":"clients/php/User/Api/ImportExportApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ImportExportApi/#importtablefromfile","title":"<code>importTableFromFile()</code>","text":"<pre><code>importTableFromFile($workspace_id, $file, $dtable_uuid): object\n</code></pre> <p>Import Table from xlsx or csv</p> <p>An XLSX or CSV file can also be imported as a new table in your base. Just select the <code>file</code> and tell SeaTable your base's UUID and the file will be added to that base as a new table. The new table's name will be the filename by default.</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$file = \"/path/to/file.txt\"; // \\SplFileObject\n$dtable_uuid = 'dtable_uuid_example'; // string | The UUID of the base.\n\ntry {\n    $result = $apiInstance-&gt;importTableFromFile($workspace_id, $file, $dtable_uuid);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;importTableFromFile: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. file \\SplFileObject\\SplFileObject [optional] dtable_uuid string The UUID of the base. [optional]"},{"location":"clients/php/User/Api/ImportExportApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/ImportExportApi/#updatefromfile","title":"<code>updateFromFile()</code>","text":"<pre><code>updateFromFile($workspace_id, $file, $dtable_uuid, $table_name, $selected_columns): object\n</code></pre> <p>Update from xlsx or csv</p>"},{"location":"clients/php/User/Api/ImportExportApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\ImportExportApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$file = \"/path/to/file.txt\"; // \\SplFileObject\n$dtable_uuid = 'dtable_uuid_example'; // string | The UUID of the base.\n$table_name = 'table_name_example'; // string | The name of the table.\n$selected_columns = 'selected_columns_example'; // string | The columns to update. Use comma (,) to separate column names. Required.\n\ntry {\n    $result = $apiInstance-&gt;updateFromFile($workspace_id, $file, $dtable_uuid, $table_name, $selected_columns);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling ImportExportApi-&gt;updateFromFile: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/ImportExportApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. file \\SplFileObject\\SplFileObject [optional] dtable_uuid string The UUID of the base. [optional] table_name string The name of the table. [optional] selected_columns string The columns to update. Use comma (,) to separate column names. Required. [optional]"},{"location":"clients/php/User/Api/ImportExportApi/#return-type_8","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/ImportExportApi/#authorization_8","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/NotificationsApi/","title":"SeaTable\\Client\\NotificationsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addNotificationRule() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/notification-rules/ Add Notification Rule deleteNotificationRule() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/notification-rules/{notification_rule_id}/ Delete Notification Rule listNotificationRules() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/notification-rules/ List Notification Rules markNotificationAsSeen() DELETE /api/v2.1/notifications/ Mark Notifications As Seen updateNotificationRule() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/notification-rules/{notification_rule_id}/ Update Notification Rule"},{"location":"clients/php/User/Api/NotificationsApi/#addnotificationrule","title":"<code>addNotificationRule()</code>","text":"<pre><code>addNotificationRule($workspace_id, $base_name, $body): object\n</code></pre> <p>Add Notification Rule</p> <p>Use this request to add a new notification rule for a base.  Input Parameters workspace_id \\[int, required\\]  &gt; The ID of the workspace where the base is stored.  base_name \\[string, required\\]  &gt; The name of the base.  RuleData \\[JSON object, required\\]  &gt; In this JSON object, use the following params to define this notification rule: &gt;  &gt; run_condition \\[enum(__<code>per_day</code>__, <code>per_update</code>__), required\\] &gt;  &gt; &gt; Define whether the action should be triggered by date or table update. For Records near deadline, use <code>per_day</code> and for Records modified and Records meet specific conditions after modification, use <code>per_update</code>. Details see below. &gt;  &gt; trigger \\[JSON object, required\\] &gt;  &gt; &gt; In this JSON object, define the trigger of the rule with the following params: &gt; &gt;  &gt; &gt; &gt; rule_name \\[string, required\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; The name of the rule. &gt; &gt; &gt;  &gt; &gt; &gt; table_id \\[string, required\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; The ID of the table. &gt; &gt; &gt;  &gt; &gt; &gt; view_id \\[string, required\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; The ID of the view. &gt; &gt; &gt;  &gt; &gt; &gt; condition \\[enum(__<code>rows_modified</code>__, <code>near_deadline</code>__, <code>filters_satisfy</code>__), required\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; - For 'Records near deadline', use <code>per_day</code> in the run_condition param and <code>near_deadline</code> here. &gt; &gt; &gt; &gt; - For 'Records modified', use <code>per_update</code> in the run_condition param and <code>rows_modified</code> here. &gt; &gt; &gt; &gt; - For 'Records meet specific conditions after modification', use <code>per_update</code> in the run_condition param and <code>filters_satisfy</code> here. &gt; &gt;  &gt; &gt; For the case Records near deadline, when <code>run_condition</code> is <code>per_day</code> and <code>condition</code> is <code>near_deadline</code>, you'll define which date column to use as deadline dates, and optionally define how many days before and to which time of the day should the notification be sent: &gt; &gt;  &gt; &gt; &gt; date_column_name \\[string, required\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; For 'Records near deadline', give the name of the date column that contains the deadline dates. If left blank, the first date column in the table will be taken as deadline. &gt; &gt; &gt;  &gt; &gt; &gt; alarm_days \\[int, optional\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; Use a number to define how many days before the deadline should the notification be triggered. &gt; &gt; &gt;  &gt; &gt; &gt; notify_hour \\[int(0-23), optional\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; Specify to which hour of the day should the notification be sent. &gt; &gt;  &gt; &gt; For the case Records modified, when <code>run_condition</code> is <code>per_update</code> and <code>condition</code> is <code>rows_modified</code>, a notification is sent right away inside the base editor. If this notification is not read within two hours, it'll be sent via email, if the receiver has enabled email notification in their personal settings: &gt; &gt;  &gt; &gt; &gt; There is no further trigger conditions necessary. &gt; &gt;  &gt; &gt; For the case Records meet specific conditions after modification, when <code>run_condition</code> is <code>per_update</code> and <code>condition</code> is <code>filters_satisfy</code>, you can define which fields to watch and set filters: &gt; &gt;  &gt; &gt; &gt; watch_all_columns \\[enum(<code>true</code>, <code>false</code>, optional, <code>true</code> by default)\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; Use <code>true</code> or leave this param blank, if you want all columns to be watched. &gt; &gt; &gt;  &gt; &gt; &gt; column_keys \\[list, optional\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; When certain columns should be watched, use this list to include their keys, so only when there's modification in these columns, this notification rule will be triggered. &gt; &gt; &gt;  &gt; &gt; &gt; filters and filter_conjunction refer to the API Request Base Operations &gt; Rows &gt; List Filtered Rows. You can define filters for all the fields in the table as a combination to the watched fields. So that only when the filtered records in the watched fields are modified, will this notification rule be triggered. &gt;  &gt; action \\[JSON object, required\\] &gt;  &gt; &gt; In this JSON object, define the users to be notified with the following params: &gt; &gt;  &gt; &gt; &gt; type \\[enum(__<code>notify</code>__), optional\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; For the moment, there's only one option to notify the user. The <code>notify</code> value means a notification will be sent inside the base editor, and when this isn't read within 2 hours, it'll be sent via email to the user, if the user's email setting is activated. In the near future, SeaTable will provide the option to send emails directly to users even outside your organization by configuring an email sending service. &gt; &gt; &gt;  &gt; &gt; &gt; users \\[list, optional\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; In this list, provide the users' IDs to be notified. Alternatively, use the <code>users_column_key</code> to automatically select users from a collaborator column. &gt; &gt; &gt;  &gt; &gt; &gt; users_column_key \\[string, optional\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; Select users to be notified from a collaborator column by providing its key. &gt; &gt; &gt;  &gt; &gt; &gt; default_msg \\[string, optional\\] &gt; &gt; &gt;  &gt; &gt; &gt; &gt; Here you can write a short message to remind notified users why this notification is sent, for example \\\"The battery has to be changed in 2 days!\\\".</p>"},{"location":"clients/php/User/Api/NotificationsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$body = array('key' =&gt; new \\stdClass); // object\n\ntry {\n    $result = $apiInstance-&gt;addNotificationRule($workspace_id, $base_name, $body);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;addNotificationRule: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/NotificationsApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. body object [optional]"},{"location":"clients/php/User/Api/NotificationsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/NotificationsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/NotificationsApi/#deletenotificationrule","title":"<code>deleteNotificationRule()</code>","text":"<pre><code>deleteNotificationRule($workspace_id, $base_name, $notification_rule_id): object\n</code></pre> <p>Delete Notification Rule</p> <p>Delete an existing notification rule.  The <code>notification_rule_id</code> is the ID of the notification to be deleted. This can be retrieved by List Notification Rules or can be seen when you Add Base Notification Rule.</p>"},{"location":"clients/php/User/Api/NotificationsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$notification_rule_id = 1; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteNotificationRule($workspace_id, $base_name, $notification_rule_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;deleteNotificationRule: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/NotificationsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. notification_rule_id string"},{"location":"clients/php/User/Api/NotificationsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/NotificationsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/NotificationsApi/#listnotificationrules","title":"<code>listNotificationRules()</code>","text":"<pre><code>listNotificationRules($workspace_id, $base_name): object\n</code></pre> <p>List Notification Rules</p> <p>Use this request to list all the existing notification rules in the current base.</p>"},{"location":"clients/php/User/Api/NotificationsApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listNotificationRules($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;listNotificationRules: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/NotificationsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/NotificationsApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/NotificationsApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/NotificationsApi/#marknotificationasseen","title":"<code>markNotificationAsSeen()</code>","text":"<pre><code>markNotificationAsSeen(): object\n</code></pre> <p>Mark Notifications As Seen</p> <p>Delete all notifications sent to the current user.</p>"},{"location":"clients/php/User/Api/NotificationsApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;markNotificationAsSeen();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;markNotificationAsSeen: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/NotificationsApi/#parameters_3","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/NotificationsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/NotificationsApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/NotificationsApi/#updatenotificationrule","title":"<code>updateNotificationRule()</code>","text":"<pre><code>updateNotificationRule($workspace_id, $base_name, $notification_rule_id, $update_notification_rule_request): object\n</code></pre> <p>Update Notification Rule</p> <p>Update the params of an existing notification rule.  The <code>notification_rule_id</code> is the ID of the notification to be updated. This can be retrieved by List Notification Rules or can be seen when you Add Base Notification Rule.  For the exact params that you can update, refer to the params list in the call Add Base Notification Rule.</p>"},{"location":"clients/php/User/Api/NotificationsApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\NotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$notification_rule_id = 1; // string\n$update_notification_rule_request = new \\SeaTable\\Client\\User\\UpdateNotificationRuleRequest(); // \\SeaTable\\Client\\User\\UpdateNotificationRuleRequest\n\ntry {\n    $result = $apiInstance-&gt;updateNotificationRule($workspace_id, $base_name, $notification_rule_id, $update_notification_rule_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling NotificationsApi-&gt;updateNotificationRule: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/NotificationsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. notification_rule_id string update_notification_rule_request \\SeaTable\\Client\\User\\UpdateNotificationRuleRequest [optional]"},{"location":"clients/php/User/Api/NotificationsApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/NotificationsApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/","title":"SeaTable\\Client\\SharingApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createGroupShare() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-shares/ Create Group Share createGroupViewShare() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/ Create Group View Share createUserShare() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share/ Create User Share createUserViewShare() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/ Create User View Share deleteGroupAllViewShare() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/ Delete Group View Share deleteGroupShare() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-shares/{group_id}/ Delete Group Share deleteGroupViewShare() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/{group_view_share_id}/ Delete Group View Share deleteUserAllViewShare() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/ Delete User View Share deleteUserShare() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share/ Delete User Share deleteUserViewShare() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/{user_view_share_id}/ Delete User View Share leaveSharedView() DELETE /api/v2.1/dtables/view-shares-user-shared/{user_view_share_id}/ Leave Shared View listCollaborators() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/related-users/ List Collaborators listGroupShares() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-shares/ List Group Shares listGroupViewShares() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/ List Group View Shares listMyGroupShares() GET /api/v2.1/dtables/group-shared/ List My Group Shares listMyGroupViewShares() GET /api/v2.1/dtables/view-shares-group-shared/ My Group View Shares listMyShares() GET /api/v2.1/dtables/shared/ List My Shares listMyUserViewShares() GET /api/v2.1/dtables/view-shares-user-shared/ List My User View Shares listUserShares() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share/ List User Shares listUserViewShares() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/ List User View Shares updateGroupShare() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-shares/{group_id}/ Update Group Share updateGroupViewShare() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/{group_view_share_id}/ Update Group View Share updateUserShare() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share/ Update User Share updateUserViewShare() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares/{user_view_share_id}/ Update User View Share"},{"location":"clients/php/User/Api/SharingApi/#creategroupshare","title":"<code>createGroupShare()</code>","text":"<pre><code>createGroupShare($workspace_id, $base_name, $group_id, $permission): object\n</code></pre> <p>Create Group Share</p> <p>Share a base from My Bases to a group with read-only or read and write permissions.</p>"},{"location":"clients/php/User/Api/SharingApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$group_id = 'group_id_example'; // string | The ID of the group.\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n\ntry {\n    $result = $apiInstance-&gt;createGroupShare($workspace_id, $base_name, $group_id, $permission);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;createGroupShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. group_id string The ID of the group. [optional] permission string `r` for read only or `rw` for read and write [optional]"},{"location":"clients/php/User/Api/SharingApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#creategroupviewshare","title":"<code>createGroupViewShare()</code>","text":"<pre><code>createGroupViewShare($workspace_id, $base_name, $table_id, $view_id, $permission, $to_group_id): object\n</code></pre> <p>Create Group View Share</p> <p>Share a view to a group, thus you are the <code>FromUser</code> here.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$table_id = 'table_id_example'; // string\n$view_id = 'view_id_example'; // string\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n$to_group_id = 'to_group_id_example'; // string | The ID of the group.\n\ntry {\n    $result = $apiInstance-&gt;createGroupViewShare($workspace_id, $base_name, $table_id, $view_id, $permission, $to_group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;createGroupViewShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. table_id string [optional] view_id string [optional] permission string `r` for read only or `rw` for read and write [optional] to_group_id string The ID of the group. [optional]"},{"location":"clients/php/User/Api/SharingApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#createusershare","title":"<code>createUserShare()</code>","text":"<pre><code>createUserShare($workspace_id, $base_name, $permission, $email): object\n</code></pre> <p>Create User Share</p> <p>Share a base to a certain user with certain permission.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n$email = 'email_example'; // string | The user ID ending with @auth.local\n\ntry {\n    $result = $apiInstance-&gt;createUserShare($workspace_id, $base_name, $permission, $email);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;createUserShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. permission string `r` for read only or `rw` for read and write [optional] email string The user ID ending with @auth.local [optional]"},{"location":"clients/php/User/Api/SharingApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#createuserviewshare","title":"<code>createUserViewShare()</code>","text":"<pre><code>createUserViewShare($workspace_id, $base_name, $permission, $to_user, $table_id, $view_id): object\n</code></pre> <p>Create User View Share</p> <p>Start sharing a view to another user, which is the <code>ToUser</code> in this case.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n$to_user = 'to_user_example'; // string | The user ID ending with @auth.local\n$table_id = 'table_id_example'; // string\n$view_id = 'view_id_example'; // string\n\ntry {\n    $result = $apiInstance-&gt;createUserViewShare($workspace_id, $base_name, $permission, $to_user, $table_id, $view_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;createUserViewShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. permission string `r` for read only or `rw` for read and write [optional] to_user string The user ID ending with @auth.local [optional] table_id string [optional] view_id string [optional]"},{"location":"clients/php/User/Api/SharingApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#deletegroupallviewshare","title":"<code>deleteGroupAllViewShare()</code>","text":"<pre><code>deleteGroupAllViewShare($table_id, $view_id, $workspace_id, $base_name): object\n</code></pre> <p>Delete Group View Share</p> <p>Stop sharing the view to all the groups.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$table_id = 0000; // string | The id of the table. The id of a table is unique inside a base and is often used to identify a table. **Important: the table_id is not the table_name**.\n$view_id = Jz4d; // string | id of view, string\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;deleteGroupAllViewShare($table_id, $view_id, $workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;deleteGroupAllViewShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. view_id string id of view, string workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#deletegroupshare","title":"<code>deleteGroupShare()</code>","text":"<pre><code>deleteGroupShare($workspace_id, $base_name, $group_id): object\n</code></pre> <p>Delete Group Share</p> <p>Stop sharing a base to a certain group.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$group_id = 1; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteGroupShare($workspace_id, $base_name, $group_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;deleteGroupShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. group_id int"},{"location":"clients/php/User/Api/SharingApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#deletegroupviewshare","title":"<code>deleteGroupViewShare()</code>","text":"<pre><code>deleteGroupViewShare($workspace_id, $base_name, $group_view_share_id): object\n</code></pre> <p>Delete Group View Share</p> <p>Use this request to stop sharing a view to a certain group as <code>FromUser</code>. If you would like to stop sharing it with all of the groups you are in, use the next request.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$group_view_share_id = 6; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteGroupViewShare($workspace_id, $base_name, $group_view_share_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;deleteGroupViewShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. group_view_share_id int"},{"location":"clients/php/User/Api/SharingApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#deleteuserallviewshare","title":"<code>deleteUserAllViewShare()</code>","text":"<pre><code>deleteUserAllViewShare($table_id, $view_id, $workspace_id, $base_name): object\n</code></pre> <p>Delete User View Share</p> <p>Stop sharing a view to all users.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$table_id = 0000; // string | The id of the table. The id of a table is unique inside a base and is often used to identify a table. **Important: the table_id is not the table_name**.\n$view_id = Jz4d; // string | id of view, string\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;deleteUserAllViewShare($table_id, $view_id, $workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;deleteUserAllViewShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. view_id string id of view, string workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#deleteusershare","title":"<code>deleteUserShare()</code>","text":"<pre><code>deleteUserShare($workspace_id, $base_name): object\n</code></pre> <p>Delete User Share</p> <p>Stop sharing a base to a user.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_8","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;deleteUserShare($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;deleteUserShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingApi/#return-type_8","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_8","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#deleteuserviewshare","title":"<code>deleteUserViewShare()</code>","text":"<pre><code>deleteUserViewShare($workspace_id, $base_name, $user_view_share_id): object\n</code></pre> <p>Delete User View Share</p> <p>Stop sharing a view to a certain user. The <code>user_view_share_id</code> here is the value you can retrieve from the above requests when you list, add or update a sharing permission.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_9","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$user_view_share_id = 15; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteUserViewShare($workspace_id, $base_name, $user_view_share_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;deleteUserViewShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. user_view_share_id int"},{"location":"clients/php/User/Api/SharingApi/#return-type_9","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_9","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#leavesharedview","title":"<code>leaveSharedView()</code>","text":"<pre><code>leaveSharedView($user_view_share_id): object\n</code></pre> <p>Leave Shared View</p> <p>Delete your access to a view shared to you. After executing this request, you won't be able to see that view as a <code>ToUser</code>.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_10","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_view_share_id = 15; // int\n\ntry {\n    $result = $apiInstance-&gt;leaveSharedView($user_view_share_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;leaveSharedView: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes user_view_share_id int"},{"location":"clients/php/User/Api/SharingApi/#return-type_10","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_10","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listcollaborators","title":"<code>listCollaborators()</code>","text":"<pre><code>listCollaborators($workspace_id, $base_name): object\n</code></pre> <p>List Collaborators</p> <p>List all the collaborators (related users who have read&amp;write permission) to a base.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_11","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listCollaborators($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listCollaborators: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingApi/#return-type_11","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_11","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listgroupshares","title":"<code>listGroupShares()</code>","text":"<pre><code>listGroupShares($workspace_id, $base_name): object\n</code></pre> <p>List Group Shares</p> <p>List all the groups a particular base is being shared to.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_12","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listGroupShares($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listGroupShares: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_12","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingApi/#return-type_12","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_12","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listgroupviewshares","title":"<code>listGroupViewShares()</code>","text":"<pre><code>listGroupViewShares($workspace_id, $base_name): object\n</code></pre> <p>List Group View Shares</p> <p>This request lets you, as <code>FromUser</code>, see which views you are sharing to the groups you are in.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_13","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listGroupViewShares($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listGroupViewShares: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_13","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingApi/#return-type_13","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_13","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listmygroupshares","title":"<code>listMyGroupShares()</code>","text":"<pre><code>listMyGroupShares(): object\n</code></pre> <p>List My Group Shares</p> <p>List all the bases shared to the groups I am in. These bases may include:  * Bases you or others created in the group; * Bases you or others shared or copied to the group.  In the returned object, each group's ID and the details of each base are listed in the form of <code>\\\"group_id\\\":[bases]</code> Judging by the <code>workspace_id</code> you can determine if a base is in the group or shared to the group.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_14","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listMyGroupShares();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listMyGroupShares: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_14","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/SharingApi/#return-type_14","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_14","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listmygroupviewshares","title":"<code>listMyGroupViewShares()</code>","text":"<pre><code>listMyGroupViewShares(): object\n</code></pre> <p>My Group View Shares</p> <p>As <code>ToUser</code>, you can use this request to list all the views shared to you via your groups.  In the response you can see which views you are being shared to via which groups.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_15","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listMyGroupViewShares();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listMyGroupViewShares: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_15","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/SharingApi/#return-type_15","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_15","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listmyshares","title":"<code>listMyShares()</code>","text":"<pre><code>listMyShares(): object\n</code></pre> <p>List My Shares</p> <p>List all the bases currently shared to you. This request only lists off all the bases shared explicit to YOU, not your groups. To see all the bases shared to your groups, use the request List Bases Shared to My Groups.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_16","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listMyShares();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listMyShares: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_16","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/SharingApi/#return-type_16","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_16","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listmyuserviewshares","title":"<code>listMyUserViewShares()</code>","text":"<pre><code>listMyUserViewShares(): object\n</code></pre> <p>List My User View Shares</p> <p>List all the views shared to you.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_17","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listMyUserViewShares();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listMyUserViewShares: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_17","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/SharingApi/#return-type_17","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_17","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listusershares","title":"<code>listUserShares()</code>","text":"<pre><code>listUserShares($workspace_id, $base_name): object\n</code></pre> <p>List User Shares</p> <p>List all the users sharing a base (except the current user). This request only lists off all the individual users sharing the base, which does not includ groups and group members sharing this base.  To see which groups are sharing this base, use the request List Groups Base is Shared To.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_18","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listUserShares($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listUserShares: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_18","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingApi/#return-type_18","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_18","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#listuserviewshares","title":"<code>listUserViewShares()</code>","text":"<pre><code>listUserViewShares($workspace_id, $base_name): object\n</code></pre> <p>List User View Shares</p> <p>Use this request to list all the views you are currently sharing to other users.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_19","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listUserViewShares($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;listUserViewShares: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_19","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingApi/#return-type_19","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_19","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#updategroupshare","title":"<code>updateGroupShare()</code>","text":"<pre><code>updateGroupShare($workspace_id, $base_name, $group_id, $permission): object\n</code></pre> <p>Update Group Share</p> <p>Change the sharing permission (read-only/read and write) to a group.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_20","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$group_id = 1; // int\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n\ntry {\n    $result = $apiInstance-&gt;updateGroupShare($workspace_id, $base_name, $group_id, $permission);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;updateGroupShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_20","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. group_id int permission string `r` for read only or `rw` for read and write [optional]"},{"location":"clients/php/User/Api/SharingApi/#return-type_20","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_20","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#updategroupviewshare","title":"<code>updateGroupViewShare()</code>","text":"<pre><code>updateGroupViewShare($workspace_id, $base_name, $group_view_share_id, $permission): object\n</code></pre> <p>Update Group View Share</p> <p>Update the permission of a view sharing as a <code>FromUser</code>.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_21","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$group_view_share_id = 6; // int\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n\ntry {\n    $result = $apiInstance-&gt;updateGroupViewShare($workspace_id, $base_name, $group_view_share_id, $permission);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;updateGroupViewShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_21","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. group_view_share_id int permission string `r` for read only or `rw` for read and write [optional]"},{"location":"clients/php/User/Api/SharingApi/#return-type_21","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_21","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#updateusershare","title":"<code>updateUserShare()</code>","text":"<pre><code>updateUserShare($workspace_id, $base_name, $permission, $email): object\n</code></pre> <p>Update User Share</p> <p>Change the sharing permission (read-only or read and write) of a base to a user.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_22","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n$email = 'email_example'; // string | The user ID ending with @auth.local\n\ntry {\n    $result = $apiInstance-&gt;updateUserShare($workspace_id, $base_name, $permission, $email);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;updateUserShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_22","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. permission string `r` for read only or `rw` for read and write [optional] email string The user ID ending with @auth.local [optional]"},{"location":"clients/php/User/Api/SharingApi/#return-type_22","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_22","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingApi/#updateuserviewshare","title":"<code>updateUserViewShare()</code>","text":"<pre><code>updateUserViewShare($workspace_id, $base_name, $user_view_share_id, $permission): object\n</code></pre> <p>Update User View Share</p> <p>As <code>FromUser</code>, you can use this request to update the sharing permission to a certain user.</p>"},{"location":"clients/php/User/Api/SharingApi/#example_23","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$user_view_share_id = 15; // int\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n\ntry {\n    $result = $apiInstance-&gt;updateUserViewShare($workspace_id, $base_name, $user_view_share_id, $permission);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingApi-&gt;updateUserViewShare: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingApi/#parameters_23","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. user_view_share_id int permission string `r` for read only or `rw` for read and write [optional]"},{"location":"clients/php/User/Api/SharingApi/#return-type_23","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingApi/#authorization_23","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingLinksApi/","title":"SeaTable\\Client\\SharingLinksApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createBaseExternalLink() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/external-links/ Create Base External Link createInviteLink() POST /api/v2.1/dtables/invite-links/ Create Invite Link createViewExternalLink() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/view-external-links/ Create View External Link deleteExternalLink() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/external-links/{external_link_token}/ Delete External Link deleteInviteLink() DELETE /api/v2.1/dtables/invite-links/{invite_link_token}/ Delete Invite Link deleteViewExternalLink() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/view-external-links/{view_external_link_token}/ Delete View External Link listBaseExternalLinks() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/external-links/ List Base External Links listViewExternalLinks() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/view-external-links/ List View External Links"},{"location":"clients/php/User/Api/SharingLinksApi/#createbaseexternallink","title":"<code>createBaseExternalLink()</code>","text":"<pre><code>createBaseExternalLink($workspace_id, $base_name, $password, $expire_days, $token): object\n</code></pre> <p>Create Base External Link</p> <p>Generate a read-only external link for a base.</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$password = 'password_example'; // string\n$expire_days = 56; // int | Add expiration period in days. Optional.\n$token = 'token_example'; // string | An optional custom token of the generated link. For example, it'll appear as \\\\\\\"https&lt;span&gt;://cloud.seatable.io/dtable/view-external-links/custom/example/\\\\\\\". If not given, SeaTable will give a random token to the link.\n\ntry {\n    $result = $apiInstance-&gt;createBaseExternalLink($workspace_id, $base_name, $password, $expire_days, $token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;createBaseExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingLinksApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. password string [optional] expire_days int Add expiration period in days. Optional. [optional] token string An optional custom token of the generated link. For example, it'll appear as \\\\\"https&lt;span&gt;://cloud.seatable.io/dtable/view-external-links/custom/example/\\\\\". If not given, SeaTable will give a random token to the link. [optional]"},{"location":"clients/php/User/Api/SharingLinksApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#createinvitelink","title":"<code>createInviteLink()</code>","text":"<pre><code>createInviteLink($table_name, $workspace_id, $permission, $password, $expire_days): object\n</code></pre> <p>Create Invite Link</p> <p>Use this request to generate an invite link for your base. See below for the details for the params.  In the response:  *   If you have set a password, it won't be returned in the response. As soon as the response code is 200, your password has been successfully set. *   The <code>token</code> returned is the invite link's token. You'd need it in other requests like Get Base-Token with Invite-Link, or Delete Invite Link.</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$table_name = 'table_name_example'; // string | The name of the table.\n$workspace_id = 'workspace_id_example'; // string | The workspace ID where your base is.\n$permission = 'permission_example'; // string | `r` for read only or `rw` for read and write\n$password = 'password_example'; // string\n$expire_days = 56; // int | Add expiration period in days. Optional.\n\ntry {\n    $result = $apiInstance-&gt;createInviteLink($table_name, $workspace_id, $permission, $password, $expire_days);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;createInviteLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingLinksApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes table_name string The name of the table. [optional] workspace_id string The workspace ID where your base is. [optional] permission string `r` for read only or `rw` for read and write [optional] password string [optional] expire_days int Add expiration period in days. Optional. [optional]"},{"location":"clients/php/User/Api/SharingLinksApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#createviewexternallink","title":"<code>createViewExternalLink()</code>","text":"<pre><code>createViewExternalLink($workspace_id, $base_name, $table_id, $view_id, $token, $password, $expire_days): object\n</code></pre> <p>Create View External Link</p> <p>Create a view external link from a view and optionally custom the link's token, password, permission and expiration days.</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$table_id = 'table_id_example'; // string\n$view_id = 'view_id_example'; // string\n$token = 'token_example'; // string | An optional custom token of the generated link. For example, it'll appear as \\\\\\\"https&lt;span&gt;://cloud.seatable.io/dtable/view-external-links/custom/example/\\\\\\\". If not given, SeaTable will give a random token to the link.\n$password = 'password_example'; // string\n$expire_days = 56; // int | Add expiration period in days. Optional.\n\ntry {\n    $result = $apiInstance-&gt;createViewExternalLink($workspace_id, $base_name, $table_id, $view_id, $token, $password, $expire_days);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;createViewExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingLinksApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. table_id string [optional] view_id string [optional] token string An optional custom token of the generated link. For example, it'll appear as \\\\\"https&lt;span&gt;://cloud.seatable.io/dtable/view-external-links/custom/example/\\\\\". If not given, SeaTable will give a random token to the link. [optional] password string [optional] expire_days int Add expiration period in days. Optional. [optional]"},{"location":"clients/php/User/Api/SharingLinksApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#deleteexternallink","title":"<code>deleteExternalLink()</code>","text":"<pre><code>deleteExternalLink($workspace_id, $base_name, $external_link_token): object\n</code></pre> <p>Delete External Link</p> <p>Delete a base external link by its token.</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$external_link_token = fleischkaesebroetchen; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteExternalLink($workspace_id, $base_name, $external_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;deleteExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingLinksApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. external_link_token string"},{"location":"clients/php/User/Api/SharingLinksApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#deleteinvitelink","title":"<code>deleteInviteLink()</code>","text":"<pre><code>deleteInviteLink($invite_link_token): object\n</code></pre> <p>Delete Invite Link</p> <p>Delete an invite link via its <code>token</code>.  Deleting an invite link won't stop sharing the base with the other users. If you want to stop sharing it, you can  *   either use the base sharing dialogue on the web interface to stop sharing the base to certain users, or *   use the API request to Stop Sharing Base to a user.</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$invite_link_token = 65432148a9074901923d; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteInviteLink($invite_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;deleteInviteLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingLinksApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes invite_link_token string"},{"location":"clients/php/User/Api/SharingLinksApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#deleteviewexternallink","title":"<code>deleteViewExternalLink()</code>","text":"<pre><code>deleteViewExternalLink($workspace_id, $base_name, $view_external_link_token): object\n</code></pre> <p>Delete View External Link</p> <p>Delete a view external link by its token. This token could be a custom token or a random token. Include the token in the URL, in this example, it's <code>example</code>.</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$view_external_link_token = f234baec8ce44028978a; // string\n\ntry {\n    $result = $apiInstance-&gt;deleteViewExternalLink($workspace_id, $base_name, $view_external_link_token);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;deleteViewExternalLink: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingLinksApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. view_external_link_token string"},{"location":"clients/php/User/Api/SharingLinksApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#listbaseexternallinks","title":"<code>listBaseExternalLinks()</code>","text":"<pre><code>listBaseExternalLinks($workspace_id, $base_name): object\n</code></pre> <p>List Base External Links</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#example_6","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listBaseExternalLinks($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;listBaseExternalLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingLinksApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingLinksApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#authorization_6","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#listviewexternallinks","title":"<code>listViewExternalLinks()</code>","text":"<pre><code>listViewExternalLinks($table_id, $view_id, $workspace_id, $base_name): object\n</code></pre> <p>List View External Links</p> <p>List all the external links generated for a specific view with the table's and the view's IDs.    Normally when you open a view in the browser, you can see the <code>tid</code> and <code>vid</code> in the address line, which are indeed the <code>table_id</code> and <code>view_id</code> here.</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#example_7","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SharingLinksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$table_id = 0000; // string | The id of the table. The id of a table is unique inside a base and is often used to identify a table. **Important: the table_id is not the table_name**.\n$view_id = Jz4d; // string | id of view, string\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listViewExternalLinks($table_id, $view_id, $workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SharingLinksApi-&gt;listViewExternalLinks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SharingLinksApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes table_id string The id of the table. The id of a table is unique inside a base and is often used to identify a table. Important: the table_id is not the table_name. view_id string id of view, string workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/SharingLinksApi/#return-type_7","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SharingLinksApi/#authorization_7","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SnapshotsApi/","title":"SeaTable\\Client\\SnapshotsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description listSnapshots() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/snapshots/ List Snapshots restoreSnapshot() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/snapshots/{commit_id}/restore/ Restore Snapshot"},{"location":"clients/php/User/Api/SnapshotsApi/#listsnapshots","title":"<code>listSnapshots()</code>","text":"<pre><code>listSnapshots($workspace_id, $base_name, $page, $per_page): object\n</code></pre> <p>List Snapshots</p> <p>List all the snapshots currently available in a base. The snapshots are saved as <code>.dtable</code> files, and therefore returned as a base name with this suffix. The <code>commit_id</code> is the ID of the snapshot, and the <code>ctime</code> is the time of creation.</p>"},{"location":"clients/php/User/Api/SnapshotsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SnapshotsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$page = 1; // int\n$per_page = 2; // int\n\ntry {\n    $result = $apiInstance-&gt;listSnapshots($workspace_id, $base_name, $page, $per_page);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SnapshotsApi-&gt;listSnapshots: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SnapshotsApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. page int [optional] per_page int [optional]"},{"location":"clients/php/User/Api/SnapshotsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SnapshotsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SnapshotsApi/#restoresnapshot","title":"<code>restoreSnapshot()</code>","text":"<pre><code>restoreSnapshot($workspace_id, $base_name, $commit_id, $snapshot_name): object\n</code></pre> <p>Restore Snapshot</p> <p>Restore a snapshot and save it as a new base besides the existing base.   The <code>commit_id</code> is the ID of the snapshot to be restored. This can be retrieved with the call List Snapshots.  You can give the restored base a new name by defining the value of the <code>snapshot_name</code> param. If left blank, SeaTable gives the restored base a default name which is a combination of the original base name and \\\"(restored)\\\" or similar.</p>"},{"location":"clients/php/User/Api/SnapshotsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SnapshotsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$commit_id = 7ee107a4eadb9561e8ce7699494939015f0d101b; // string\n$snapshot_name = 'snapshot_name_example'; // string | The name of the restored base. Optional. If left blank, a default name will be given.\n\ntry {\n    $result = $apiInstance-&gt;restoreSnapshot($workspace_id, $base_name, $commit_id, $snapshot_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SnapshotsApi-&gt;restoreSnapshot: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SnapshotsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. commit_id string snapshot_name string The name of the restored base. Optional. If left blank, a default name will be given. [optional]"},{"location":"clients/php/User/Api/SnapshotsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SnapshotsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SystemNotificationsApi/","title":"SeaTable\\Client\\SystemNotificationsApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description listSystemNotifications() GET /api/v2.1/sys-user-notifications/unseen/ List System Notifications markSystemNotificationsAsSeen() PUT /api/v2.1/sys-user-notifications/{sys_notification_id}/seen/ Mark System Notification As Seen"},{"location":"clients/php/User/Api/SystemNotificationsApi/#listsystemnotifications","title":"<code>listSystemNotifications()</code>","text":"<pre><code>listSystemNotifications(): object\n</code></pre> <p>List System Notifications</p> <p>List all the notifications that are unseen by the users. A user can only mark a system notification as seen by clicking on the \\\"x\\\" to close it.</p>"},{"location":"clients/php/User/Api/SystemNotificationsApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SystemNotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;listSystemNotifications();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemNotificationsApi-&gt;listSystemNotifications: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SystemNotificationsApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/SystemNotificationsApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SystemNotificationsApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/SystemNotificationsApi/#marksystemnotificationsasseen","title":"<code>markSystemNotificationsAsSeen()</code>","text":"<pre><code>markSystemNotificationsAsSeen($sys_notification_id): object\n</code></pre> <p>Mark System Notification As Seen</p> <p>Mark a system notification as seen with its ID.</p>"},{"location":"clients/php/User/Api/SystemNotificationsApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\SystemNotificationsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$sys_notification_id = 1; // string | The id of the notification.\n\ntry {\n    $result = $apiInstance-&gt;markSystemNotificationsAsSeen($sys_notification_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling SystemNotificationsApi-&gt;markSystemNotificationsAsSeen: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/SystemNotificationsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes sys_notification_id string The id of the notification."},{"location":"clients/php/User/Api/SystemNotificationsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/SystemNotificationsApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/UserApi/","title":"SeaTable\\Client\\UserApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description addUserAvatar() POST /api/v2.1/user-avatar/ Upload/Update User Avatar getAccountInfo() GET /api2/account/info/ Get Account Info getPublicUserInfo() GET /api/v2.1/user-common-info/{user_id}/ Get Public User Info listPublicUserInfos() POST /api/v2.1/user-list/ List Public User Infos searchUser() GET /api2/search-user/ Search User updateEmailAddress() PUT /api/v2.1/user/contact-email/ Update Email Address"},{"location":"clients/php/User/Api/UserApi/#adduseravatar","title":"<code>addUserAvatar()</code>","text":"<pre><code>addUserAvatar($avatar, $avatar_size): object\n</code></pre> <p>Upload/Update User Avatar</p> <p>Upload an image to make it your current avatar. After successful uploading/updating your avatar, the file will be renamed and converted to .png. The URL of your new avatar is returned in the response.</p>"},{"location":"clients/php/User/Api/UserApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\UserApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$avatar = \"/path/to/file.txt\"; // \\SplFileObject | Upload an image file. Authorized extensions are : .jpg, .png, .jpeg, .gif. Accepted max. size is 1.0 MB.\n$avatar_size = 'avatar_size_example'; // string\n\ntry {\n    $result = $apiInstance-&gt;addUserAvatar($avatar, $avatar_size);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi-&gt;addUserAvatar: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/UserApi/#parameters","title":"Parameters","text":"Name Type Description Notes avatar \\SplFileObject\\SplFileObject Upload an image file. Authorized extensions are : .jpg, .png, .jpeg, .gif. Accepted max. size is 1.0 MB. [optional] avatar_size string [optional]"},{"location":"clients/php/User/Api/UserApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/UserApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/UserApi/#getaccountinfo","title":"<code>getAccountInfo()</code>","text":"<pre><code>getAccountInfo(): object\n</code></pre> <p>Get Account Info</p> <p>Get the detailed account information with the user's Account Token.</p>"},{"location":"clients/php/User/Api/UserApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\UserApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance-&gt;getAccountInfo();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi-&gt;getAccountInfo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/UserApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"clients/php/User/Api/UserApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/UserApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/UserApi/#getpublicuserinfo","title":"<code>getPublicUserInfo()</code>","text":"<pre><code>getPublicUserInfo($user_id): object\n</code></pre> <p>Get Public User Info</p> <p>Get the common info from a user by his email address.</p>"},{"location":"clients/php/User/Api/UserApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\UserApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$user_id = 123456789f1e4c8d8e1c31415867317c@auth.local; // string\n\ntry {\n    $result = $apiInstance-&gt;getPublicUserInfo($user_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi-&gt;getPublicUserInfo: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/UserApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes user_id string"},{"location":"clients/php/User/Api/UserApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/UserApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/UserApi/#listpublicuserinfos","title":"<code>listPublicUserInfos()</code>","text":"<pre><code>listPublicUserInfos($list_public_user_infos_request): object\n</code></pre> <p>List Public User Infos</p> <p>List the details of other users identified by their email addresses.</p>"},{"location":"clients/php/User/Api/UserApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\UserApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$list_public_user_infos_request = new \\SeaTable\\Client\\User\\ListPublicUserInfosRequest(); // \\SeaTable\\Client\\User\\ListPublicUserInfosRequest\n\ntry {\n    $result = $apiInstance-&gt;listPublicUserInfos($list_public_user_infos_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi-&gt;listPublicUserInfos: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/UserApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes list_public_user_infos_request \\SeaTable\\Client\\User\\ListPublicUserInfosRequest [optional]"},{"location":"clients/php/User/Api/UserApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/UserApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/UserApi/#searchuser","title":"<code>searchUser()</code>","text":"<pre><code>searchUser($q): object\n</code></pre> <p>Search User</p> <p>Just search for a user with the string or substring in the <code>q</code> param. You can search by <code>email</code> (case sensitive), <code>name</code> (case insensitive) or <code>contact_email</code> (case insensitive).  Substrings are allowed.</p>"},{"location":"clients/php/User/Api/UserApi/#example_4","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\UserApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$q = Micha; // string\n\ntry {\n    $result = $apiInstance-&gt;searchUser($q);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi-&gt;searchUser: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/UserApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes q string [optional]"},{"location":"clients/php/User/Api/UserApi/#return-type_4","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/UserApi/#authorization_4","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/UserApi/#updateemailaddress","title":"<code>updateEmailAddress()</code>","text":"<pre><code>updateEmailAddress($new_contact_email): object\n</code></pre> <p>Update Email Address</p> <p>Update the user's email address. This feature is disabled on cloud.seatable.io. If you would like to change your email address in a self-hosted instance, contact your system administrator to check if this feature is activated.</p>"},{"location":"clients/php/User/Api/UserApi/#example_5","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\UserApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$new_contact_email = 'new_contact_email_example'; // string | The new email address of the user.\n\ntry {\n    $result = $apiInstance-&gt;updateEmailAddress($new_contact_email);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi-&gt;updateEmailAddress: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/UserApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes new_contact_email string The new email address of the user. [optional]"},{"location":"clients/php/User/Api/UserApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/UserApi/#authorization_5","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/WebhooksApi/","title":"SeaTable\\Client\\WebhooksApi","text":"<p>All URIs are relative to https://cloud.seatable.io, except if the operation defines another base path.</p> Method HTTP request Description createWebhook() POST /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/webhooks/ Create Webhook deleteWebhook() DELETE /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/webhooks/{webhook_id}/ Delete Webhook listWebhooks() GET /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/webhooks/ List Webhooks updateWebhook() PUT /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/webhooks/{webhook_id}/ Update Webhook"},{"location":"clients/php/User/Api/WebhooksApi/#createwebhook","title":"<code>createWebhook()</code>","text":"<pre><code>createWebhook($workspace_id, $base_name, $url, $secret): object\n</code></pre> <p>Create Webhook</p> <p>Create a new webhook for a base.</p>"},{"location":"clients/php/User/Api/WebhooksApi/#example","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\WebhooksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$url = 'url_example'; // string | The URL of the webhook. It should start with `http(s)`. Required.\n$secret = 56; // int | When you set a secret, you'll receive the X-SeaTable-Signature header, whose value is the result of SHA1 encryption of the secret key, in the webhook POST request. Optional.\n\ntry {\n    $result = $apiInstance-&gt;createWebhook($workspace_id, $base_name, $url, $secret);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling WebhooksApi-&gt;createWebhook: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/WebhooksApi/#parameters","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. url string The URL of the webhook. It should start with `http(s)`. Required. [optional] secret int When you set a secret, you'll receive the X-SeaTable-Signature header, whose value is the result of SHA1 encryption of the secret key, in the webhook POST request. Optional. [optional]"},{"location":"clients/php/User/Api/WebhooksApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/WebhooksApi/#authorization","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/WebhooksApi/#deletewebhook","title":"<code>deleteWebhook()</code>","text":"<pre><code>deleteWebhook($workspace_id, $base_name, $webhook_id): object\n</code></pre> <p>Delete Webhook</p> <p>Remove a webhook from a base.</p>"},{"location":"clients/php/User/Api/WebhooksApi/#example_1","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\WebhooksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$webhook_id = 1; // int\n\ntry {\n    $result = $apiInstance-&gt;deleteWebhook($workspace_id, $base_name, $webhook_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling WebhooksApi-&gt;deleteWebhook: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/WebhooksApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. webhook_id int"},{"location":"clients/php/User/Api/WebhooksApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/WebhooksApi/#authorization_1","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/WebhooksApi/#listwebhooks","title":"<code>listWebhooks()</code>","text":"<pre><code>listWebhooks($workspace_id, $base_name): object\n</code></pre> <p>List Webhooks</p> <p>List all the webhooks created in a base.</p>"},{"location":"clients/php/User/Api/WebhooksApi/#example_2","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\WebhooksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n\ntry {\n    $result = $apiInstance-&gt;listWebhooks($workspace_id, $base_name);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling WebhooksApi-&gt;listWebhooks: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/WebhooksApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base."},{"location":"clients/php/User/Api/WebhooksApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/WebhooksApi/#authorization_2","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Api/WebhooksApi/#updatewebhook","title":"<code>updateWebhook()</code>","text":"<pre><code>updateWebhook($workspace_id, $base_name, $webhook_id, $url, $secret): object\n</code></pre> <p>Update Webhook</p> <p>Update the URL and/or secret of a webhook.</p>"},{"location":"clients/php/User/Api/WebhooksApi/#example_3","title":"Example","text":"<pre><code>&lt;?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure Bearer authorization: AccountTokenAuth (use the right token for your request)\n$config = SeaTable\\Client\\Configuration::getDefaultConfiguration()-&gt;setAccessToken('YOUR_TOKEN');\n\n$apiInstance = new SeaTable\\Client\\User\\WebhooksApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n$workspace_id = 127; // int | id of your workspace.\n$base_name = My Projects; // string | name of your base.\n$webhook_id = 1; // int\n$url = 'url_example'; // string | The URL of the webhook. It should start with `http(s)`. Required.\n$secret = 56; // int | When you set a secret, you'll receive the X-SeaTable-Signature header, whose value is the result of SHA1 encryption of the secret key, in the webhook POST request. Optional.\n\ntry {\n    $result = $apiInstance-&gt;updateWebhook($workspace_id, $base_name, $webhook_id, $url, $secret);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling WebhooksApi-&gt;updateWebhook: ', $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"clients/php/User/Api/WebhooksApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes workspace_id int id of your workspace. base_name string name of your base. webhook_id int url string The URL of the webhook. It should start with `http(s)`. Required. [optional] secret int When you set a secret, you'll receive the X-SeaTable-Signature header, whose value is the result of SHA1 encryption of the secret key, in the webhook POST request. Optional. [optional]"},{"location":"clients/php/User/Api/WebhooksApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"clients/php/User/Api/WebhooksApi/#authorization_3","title":"Authorization","text":"<p>AccountTokenAuth</p>"},{"location":"clients/php/User/Model/Action/","title":"# Action","text":""},{"location":"clients/php/User/Model/Action/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] users string[] [optional]"},{"location":"clients/php/User/Model/ActionAddRecord/","title":"# ActionAddRecord","text":""},{"location":"clients/php/User/Model/ActionAddRecord/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] row array Is an object including the column key and desired content of each field that you would like to add in the new record. [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional]"},{"location":"clients/php/User/Model/ActionAddRecordToOtherTable/","title":"# ActionAddRecordToOtherTable","text":""},{"location":"clients/php/User/Model/ActionAddRecordToOtherTable/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] dst_table_id string [optional] row \\SeaTable\\Client\\User\\ActionAddRecordToOtherTableRow [optional]"},{"location":"clients/php/User/Model/ActionAddRecordToOtherTableRow/","title":"# ActionAddRecordToOtherTableRow","text":""},{"location":"clients/php/User/Model/ActionAddRecordToOtherTableRow/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/ActionCalculateAccumulatedValue/","title":"# ActionCalculateAccumulatedValue","text":""},{"location":"clients/php/User/Model/ActionCalculateAccumulatedValue/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] result_column string [optional] calculate_column string [optional]"},{"location":"clients/php/User/Model/ActionCalculateDelta/","title":"# ActionCalculateDelta","text":""},{"location":"clients/php/User/Model/ActionCalculateDelta/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] result_column string [optional] calculate_column string [optional]"},{"location":"clients/php/User/Model/ActionCalculatePercentage/","title":"# ActionCalculatePercentage","text":""},{"location":"clients/php/User/Model/ActionCalculatePercentage/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] result_column string [optional] calculate_column string [optional]"},{"location":"clients/php/User/Model/ActionCalculateRank/","title":"# ActionCalculateRank","text":""},{"location":"clients/php/User/Model/ActionCalculateRank/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] result_column string [optional] calculate_column string [optional]"},{"location":"clients/php/User/Model/ActionExtractUserName/","title":"# ActionExtractUserName","text":""},{"location":"clients/php/User/Model/ActionExtractUserName/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] _id string [optional] extract_column_key string [optional] result_column_key string [optional]"},{"location":"clients/php/User/Model/ActionLinkRecord/","title":"# ActionLinkRecord","text":""},{"location":"clients/php/User/Model/ActionLinkRecord/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] link_id string [optional] linked_table_id string [optional] match_conditions \\SeaTable\\Client\\User\\ActionLinkRecordMatchConditionsInner[] [optional]"},{"location":"clients/php/User/Model/ActionLinkRecordMatchConditionsInner/","title":"# ActionLinkRecordMatchConditionsInner","text":""},{"location":"clients/php/User/Model/ActionLinkRecordMatchConditionsInner/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] other_column_key string [optional]"},{"location":"clients/php/User/Model/ActionLockRecord/","title":"# ActionLockRecord","text":""},{"location":"clients/php/User/Model/ActionLockRecord/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] is_locked string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional]"},{"location":"clients/php/User/Model/ActionLookupAndCopy/","title":"# ActionLookupAndCopy","text":""},{"location":"clients/php/User/Model/ActionLookupAndCopy/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] table_condition \\SeaTable\\Client\\User\\ActionLookupAndCopyTableCondition [optional] equal_column_conditions \\SeaTable\\Client\\User\\ActionLookupAndCopyEqualColumnConditionsInner[] [optional] fill_column_conditions \\SeaTable\\Client\\User\\ActionLookupAndCopyEqualColumnConditionsInner[] [optional]"},{"location":"clients/php/User/Model/ActionLookupAndCopyEqualColumnConditionsInner/","title":"# ActionLookupAndCopyEqualColumnConditionsInner","text":""},{"location":"clients/php/User/Model/ActionLookupAndCopyEqualColumnConditionsInner/#properties","title":"Properties","text":"Name Type Description Notes from_column_key string [optional] copy_to_column_key string [optional]"},{"location":"clients/php/User/Model/ActionLookupAndCopyTableCondition/","title":"# ActionLookupAndCopyTableCondition","text":""},{"location":"clients/php/User/Model/ActionLookupAndCopyTableCondition/#properties","title":"Properties","text":"Name Type Description Notes from_table_id string [optional] copy_to_table_id string [optional]"},{"location":"clients/php/User/Model/ActionNotify/","title":"# ActionNotify","text":""},{"location":"clients/php/User/Model/ActionNotify/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] users string[] [optional] default_msg string Is the content of the message. [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] users_column_key string Is a list of keys of columns that are the types of collaborator, creator or modifier. [optional]"},{"location":"clients/php/User/Model/ActionRecordsMeetSpecificConditionsAfterModificationInner/","title":"# ActionRecordsMeetSpecificConditionsAfterModificationInner","text":""},{"location":"clients/php/User/Model/ActionRecordsMeetSpecificConditionsAfterModificationInner/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] users string[] [optional] default_msg string Is the content of the message. [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] users_column_key string Is a list of keys of columns that are the types of collaborator, creator or modifier. [optional] account_id int Is the ID of the third party account you added in this base. [optional] subject string [optional] send_to string is the receiver's email address. For multiple addresses see above. [optional] copy_to string is the CC receiver's email address. For multiple addresses see above. [optional] row \\SeaTable\\Client\\User\\ActionAddRecordToOtherTableRow [optional] is_locked string [optional] updates array Is an object including the column key and desired content of each field that you would like to modify. [optional] link_id string [optional] linked_table_id string [optional] match_conditions \\SeaTable\\Client\\User\\ActionLinkRecordMatchConditionsInner[] [optional] dst_table_id string [optional] script_name string [optional] workspace_id int [optional] owner string [optional] org_id int [optional] repo_id string [optional]"},{"location":"clients/php/User/Model/ActionRunPeriodicallyInner/","title":"# ActionRunPeriodicallyInner","text":""},{"location":"clients/php/User/Model/ActionRunPeriodicallyInner/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] users string[] [optional] default_msg string Is the content of the message. [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] users_column_key string Is a list of keys of columns that are the types of collaborator, creator or modifier. [optional] account_id int Is the ID of the third party account you added in this base. [optional] subject string [optional] send_to string is the receiver's email address. For multiple addresses see above. [optional] copy_to string is the CC receiver's email address. For multiple addresses see above. [optional] row array Is an object including the column key and desired content of each field that you would like to add in the new record. [optional] link_id string [optional] linked_table_id string [optional] match_conditions \\SeaTable\\Client\\User\\ActionLinkRecordMatchConditionsInner[] [optional] script_name string [optional] workspace_id int [optional] owner string [optional] org_id int [optional] repo_id string [optional] result_column string [optional] calculate_column string [optional] extract_column_key string [optional] result_column_key string [optional] table_condition \\SeaTable\\Client\\User\\ActionLookupAndCopyTableCondition [optional] equal_column_conditions \\SeaTable\\Client\\User\\ActionLookupAndCopyEqualColumnConditionsInner[] [optional] fill_column_conditions \\SeaTable\\Client\\User\\ActionLookupAndCopyEqualColumnConditionsInner[] [optional]"},{"location":"clients/php/User/Model/ActionRunPeriodicallyOnRecordsInner/","title":"# ActionRunPeriodicallyOnRecordsInner","text":""},{"location":"clients/php/User/Model/ActionRunPeriodicallyOnRecordsInner/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] users string[] [optional] default_msg string Is the content of the message. [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] users_column_key string Is a list of keys of columns that are the types of collaborator, creator or modifier. [optional] account_id int Is the ID of the third party account you added in this base. [optional] subject string [optional] send_to string is the receiver's email address. For multiple addresses see above. [optional] copy_to string is the CC receiver's email address. For multiple addresses see above. [optional] is_locked string [optional]"},{"location":"clients/php/User/Model/ActionRunPythonScript/","title":"# ActionRunPythonScript","text":""},{"location":"clients/php/User/Model/ActionRunPythonScript/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] script_name string [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional] workspace_id int [optional] owner string [optional] org_id int [optional] repo_id string [optional]"},{"location":"clients/php/User/Model/ActionSendEmail/","title":"# ActionSendEmail","text":""},{"location":"clients/php/User/Model/ActionSendEmail/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] default_msg string Is the content of the message. [optional] account_id int Is the ID of the third party account you added in this base. [optional] subject string [optional] send_to string is the receiver's email address. For multiple addresses see above. [optional] copy_to string is the CC receiver's email address. For multiple addresses see above. [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional]"},{"location":"clients/php/User/Model/ActionUpdateRecord/","title":"# ActionUpdateRecord","text":""},{"location":"clients/php/User/Model/ActionUpdateRecord/#properties","title":"Properties","text":"Name Type Description Notes type string [optional] updates array Is an object including the column key and desired content of each field that you would like to modify. [optional] _id string It's an ID of the action.  If you have multiple actions in one rule, they should carry different IDs.  You can decide which ID an action should carry. [optional]"},{"location":"clients/php/User/Model/AddEmailAccountRequest/","title":"# AddEmailAccountRequest","text":""},{"location":"clients/php/User/Model/AddEmailAccountRequest/#properties","title":"Properties","text":"Name Type Description Notes account_name string [optional] account_type string [optional] detail \\SeaTable\\Client\\User\\Detail [optional]"},{"location":"clients/php/User/Model/AddGroupMemberRequest/","title":"# AddGroupMemberRequest","text":""},{"location":"clients/php/User/Model/AddGroupMemberRequest/#properties","title":"Properties","text":"Name Type Description Notes email string [optional]"},{"location":"clients/php/User/Model/AddPassword/","title":"# AddPassword","text":""},{"location":"clients/php/User/Model/AddPassword/#properties","title":"Properties","text":"Name Type Description Notes name string Name of the Base [optional] operation string [optional] password string [optional]"},{"location":"clients/php/User/Model/AddRecordToOtherTableRowDate/","title":"# AddRecordToOtherTableRowDate","text":""},{"location":"clients/php/User/Model/AddRecordToOtherTableRowDate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/AddRecordToOtherTableRowDateTime/","title":"# AddRecordToOtherTableRowDateTime","text":""},{"location":"clients/php/User/Model/AddRecordToOtherTableRowDateTime/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/BasePasswordRequest/","title":"# BasePasswordRequest","text":""},{"location":"clients/php/User/Model/BasePasswordRequest/#properties","title":"Properties","text":"Name Type Description Notes name string Name of the Base [optional] operation string [optional] password string [optional] new_password string [optional]"},{"location":"clients/php/User/Model/ChooseADateColumn/","title":"# ChooseADateColumn","text":""},{"location":"clients/php/User/Model/ChooseADateColumn/#properties","title":"Properties","text":"Name Type Description Notes set_type string [optional] date_column_key string [optional]"},{"location":"clients/php/User/Model/Contains/","title":"# Contains","text":""},{"location":"clients/php/User/Model/Contains/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\ContainsFilterTerm [optional]"},{"location":"clients/php/User/Model/ContainsFilterTerm/","title":"# ContainsFilterTerm","text":""},{"location":"clients/php/User/Model/ContainsFilterTerm/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/CreateAutomationRuleRequest/","title":"# CreateAutomationRuleRequest","text":""},{"location":"clients/php/User/Model/CreateAutomationRuleRequest/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyOnRecordsMeetPerMonthTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyOnRecordsInner[] [optional]"},{"location":"clients/php/User/Model/CreateGroupRequest/","title":"# CreateGroupRequest","text":""},{"location":"clients/php/User/Model/CreateGroupRequest/#properties","title":"Properties","text":"Name Type Description Notes name string The name of the group. [optional]"},{"location":"clients/php/User/Model/Detail/","title":"# Detail","text":""},{"location":"clients/php/User/Model/Detail/#properties","title":"Properties","text":"Name Type Description Notes email_host string [optional] email_port int [optional] host_user string [optional] password string [optional]"},{"location":"clients/php/User/Model/DoesNotContain/","title":"# DoesNotContain","text":""},{"location":"clients/php/User/Model/DoesNotContain/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\ContainsFilterTerm [optional]"},{"location":"clients/php/User/Model/Equal/","title":"# Equal","text":""},{"location":"clients/php/User/Model/Equal/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional]"},{"location":"clients/php/User/Model/FilterTermEmpty/","title":"# FilterTermEmpty","text":""},{"location":"clients/php/User/Model/FilterTermEmpty/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/FiltersInner/","title":"# FiltersInner","text":""},{"location":"clients/php/User/Model/FiltersInner/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term int [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/Greater/","title":"# Greater","text":""},{"location":"clients/php/User/Model/Greater/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional]"},{"location":"clients/php/User/Model/GreaterOrEqual/","title":"# GreaterOrEqual","text":""},{"location":"clients/php/User/Model/GreaterOrEqual/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional]"},{"location":"clients/php/User/Model/HasAllOf/","title":"# HasAllOf","text":""},{"location":"clients/php/User/Model/HasAllOf/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string[] [optional]"},{"location":"clients/php/User/Model/HasAnyOf/","title":"# HasAnyOf","text":""},{"location":"clients/php/User/Model/HasAnyOf/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string[] [optional]"},{"location":"clients/php/User/Model/HasNoneOf/","title":"# HasNoneOf","text":""},{"location":"clients/php/User/Model/HasNoneOf/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string[] [optional]"},{"location":"clients/php/User/Model/ImportUsersToAppRequest/","title":"# ImportUsersToAppRequest","text":""},{"location":"clients/php/User/Model/ImportUsersToAppRequest/#properties","title":"Properties","text":"Name Type Description Notes users_info \\SeaTable\\Client\\User\\UsersInfo[] [optional]"},{"location":"clients/php/User/Model/IncludeMe/","title":"# IncludeMe","text":""},{"location":"clients/php/User/Model/IncludeMe/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string[] [optional]"},{"location":"clients/php/User/Model/Is/","title":"# Is","text":""},{"location":"clients/php/User/Model/Is/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional]"},{"location":"clients/php/User/Model/IsAdmin/","title":"# IsAdmin","text":""},{"location":"clients/php/User/Model/IsAdmin/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/IsAnyOf/","title":"# IsAnyOf","text":""},{"location":"clients/php/User/Model/IsAnyOf/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string[] [optional]"},{"location":"clients/php/User/Model/IsCurrentUserID/","title":"# IsCurrentUserID","text":""},{"location":"clients/php/User/Model/IsCurrentUserID/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional]"},{"location":"clients/php/User/Model/IsEmpty/","title":"# IsEmpty","text":""},{"location":"clients/php/User/Model/IsEmpty/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional]"},{"location":"clients/php/User/Model/IsExactly/","title":"# IsExactly","text":""},{"location":"clients/php/User/Model/IsExactly/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string[] [optional]"},{"location":"clients/php/User/Model/IsInactive/","title":"# IsInactive","text":""},{"location":"clients/php/User/Model/IsInactive/#properties","title":"Properties","text":"Name Type Description Notes is_inactive bool"},{"location":"clients/php/User/Model/IsNoneOf/","title":"# IsNoneOf","text":""},{"location":"clients/php/User/Model/IsNoneOf/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string[] [optional]"},{"location":"clients/php/User/Model/IsNot/","title":"# IsNot","text":""},{"location":"clients/php/User/Model/IsNot/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional]"},{"location":"clients/php/User/Model/IsNotEmpty/","title":"# IsNotEmpty","text":""},{"location":"clients/php/User/Model/IsNotEmpty/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional]"},{"location":"clients/php/User/Model/IsWithinTheNextMonth/","title":"# IsWithinTheNextMonth","text":""},{"location":"clients/php/User/Model/IsWithinTheNextMonth/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinTheNextNumberOfDays/","title":"# IsWithinTheNextNumberOfDays","text":""},{"location":"clients/php/User/Model/IsWithinTheNextNumberOfDays/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term int [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinTheNextWeek/","title":"# IsWithinTheNextWeek","text":""},{"location":"clients/php/User/Model/IsWithinTheNextWeek/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinTheNextYear/","title":"# IsWithinTheNextYear","text":""},{"location":"clients/php/User/Model/IsWithinTheNextYear/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinThePastMonth/","title":"# IsWithinThePastMonth","text":""},{"location":"clients/php/User/Model/IsWithinThePastMonth/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinThePastNumberOfDays/","title":"# IsWithinThePastNumberOfDays","text":""},{"location":"clients/php/User/Model/IsWithinThePastNumberOfDays/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term int [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinThePastWeek/","title":"# IsWithinThePastWeek","text":""},{"location":"clients/php/User/Model/IsWithinThePastWeek/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinThePastYear/","title":"# IsWithinThePastYear","text":""},{"location":"clients/php/User/Model/IsWithinThePastYear/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinThisMonth/","title":"# IsWithinThisMonth","text":""},{"location":"clients/php/User/Model/IsWithinThisMonth/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinThisWeek/","title":"# IsWithinThisWeek","text":""},{"location":"clients/php/User/Model/IsWithinThisWeek/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/IsWithinThisYear/","title":"# IsWithinThisYear","text":""},{"location":"clients/php/User/Model/IsWithinThisYear/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/Less/","title":"# Less","text":""},{"location":"clients/php/User/Model/Less/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional]"},{"location":"clients/php/User/Model/LessOrEqual/","title":"# LessOrEqual","text":""},{"location":"clients/php/User/Model/LessOrEqual/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional]"},{"location":"clients/php/User/Model/ListPublicUserInfosRequest/","title":"# ListPublicUserInfosRequest","text":""},{"location":"clients/php/User/Model/ListPublicUserInfosRequest/#properties","title":"Properties","text":"Name Type Description Notes user_id_list string[] [optional]"},{"location":"clients/php/User/Model/ModifyPassword/","title":"# ModifyPassword","text":""},{"location":"clients/php/User/Model/ModifyPassword/#properties","title":"Properties","text":"Name Type Description Notes name string Name of the Base [optional] operation string [optional] password string [optional] new_password string [optional]"},{"location":"clients/php/User/Model/NotEqual/","title":"# NotEqual","text":""},{"location":"clients/php/User/Model/NotEqual/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional]"},{"location":"clients/php/User/Model/RecordsMeetSpecificConditionsAfterModification/","title":"# RecordsMeetSpecificConditionsAfterModification","text":""},{"location":"clients/php/User/Model/RecordsMeetSpecificConditionsAfterModification/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRecordsMeetSpecificConditionsAfterModification [optional] actions \\SeaTable\\Client\\User\\ActionRecordsMeetSpecificConditionsAfterModificationInner[] [optional]"},{"location":"clients/php/User/Model/RowAdded/","title":"# RowAdded","text":""},{"location":"clients/php/User/Model/RowAdded/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRowAdded [optional] actions \\SeaTable\\Client\\User\\ActionRecordsMeetSpecificConditionsAfterModificationInner[] [optional]"},{"location":"clients/php/User/Model/RunPeriodically/","title":"# RunPeriodically","text":""},{"location":"clients/php/User/Model/RunPeriodically/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyPerMonthTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyInner[] [optional]"},{"location":"clients/php/User/Model/RunPeriodicallyOnRecordsMeetConditions/","title":"# RunPeriodicallyOnRecordsMeetConditions","text":""},{"location":"clients/php/User/Model/RunPeriodicallyOnRecordsMeetConditions/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyOnRecordsMeetPerMonthTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyOnRecordsInner[] [optional]"},{"location":"clients/php/User/Model/SpecificDate/","title":"# SpecificDate","text":""},{"location":"clients/php/User/Model/SpecificDate/#properties","title":"Properties","text":"Name Type Description Notes set_type string [optional] value string [optional]"},{"location":"clients/php/User/Model/TheDayRunningTheTask/","title":"# TheDayRunningTheTask","text":""},{"location":"clients/php/User/Model/TheDayRunningTheTask/#properties","title":"Properties","text":"Name Type Description Notes set_type string [optional] offset int [optional] offset_by string [optional]"},{"location":"clients/php/User/Model/Trigger/","title":"# Trigger","text":""},{"location":"clients/php/User/Model/Trigger/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] condition string [optional] table_id string [optional] view_id string [optional]"},{"location":"clients/php/User/Model/TriggerRecordsMeetSpecificConditionsAfterModification/","title":"# TriggerRecordsMeetSpecificConditionsAfterModification","text":""},{"location":"clients/php/User/Model/TriggerRecordsMeetSpecificConditionsAfterModification/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] table_id string [optional] view_id string [optional] condition \\SeaTable\\Client\\User\\TriggerRecordsMeetSpecificConditionsAfterModificationCondition [optional] filters \\SeaTable\\Client\\User\\FiltersInner[] [optional] filter_conjunction string [optional] column_keys string[] [optional] watch_all_columns bool [optional]"},{"location":"clients/php/User/Model/TriggerRecordsMeetSpecificConditionsAfterModificationCondition/","title":"# TriggerRecordsMeetSpecificConditionsAfterModificationCondition","text":""},{"location":"clients/php/User/Model/TriggerRecordsMeetSpecificConditionsAfterModificationCondition/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/TriggerRowAdded/","title":"# TriggerRowAdded","text":""},{"location":"clients/php/User/Model/TriggerRowAdded/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] table_id string [optional] view_id string [optional] condition \\SeaTable\\Client\\User\\TriggerRowAddedCondition [optional] filters \\SeaTable\\Client\\User\\FiltersInner[] [optional] filter_conjunction string [optional] column_keys string[] [optional] watch_all_columns string [optional]"},{"location":"clients/php/User/Model/TriggerRowAddedCondition/","title":"# TriggerRowAddedCondition","text":""},{"location":"clients/php/User/Model/TriggerRowAddedCondition/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyByCondition/","title":"# TriggerRunPeriodicallyByCondition","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyByCondition/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyCondition/","title":"# TriggerRunPeriodicallyCondition","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyCondition/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerDay/","title":"# TriggerRunPeriodicallyOnRecordsMeetPerDay","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerDay/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyOnRecordsMeetPerDayTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyOnRecordsInner[] [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerDayTrigger/","title":"# TriggerRunPeriodicallyOnRecordsMeetPerDayTrigger","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerDayTrigger/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] table_id string [optional] view_id string [optional] condition \\SeaTable\\Client\\User\\TriggerRunPeriodicallyByCondition [optional] date_column_name string [optional] filters \\SeaTable\\Client\\User\\FiltersInner[] [optional] filter_conjunction string [optional] notify_hour int [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerMonth/","title":"# TriggerRunPeriodicallyOnRecordsMeetPerMonth","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerMonth/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyOnRecordsMeetPerMonthTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyOnRecordsInner[] [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerMonthTrigger/","title":"# TriggerRunPeriodicallyOnRecordsMeetPerMonthTrigger","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerMonthTrigger/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] table_id string [optional] view_id string [optional] condition \\SeaTable\\Client\\User\\TriggerRunPeriodicallyByCondition [optional] date_column_name string [optional] filters \\SeaTable\\Client\\User\\FiltersInner[] [optional] filter_conjunction string [optional] notify_month_day int [optional] notify_month_hour int [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerWeek/","title":"# TriggerRunPeriodicallyOnRecordsMeetPerWeek","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerWeek/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyOnRecordsMeetPerWeekTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyOnRecordsInner[] [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerWeekTrigger/","title":"# TriggerRunPeriodicallyOnRecordsMeetPerWeekTrigger","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyOnRecordsMeetPerWeekTrigger/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] table_id string [optional] view_id string [optional] condition \\SeaTable\\Client\\User\\TriggerRunPeriodicallyByCondition [optional] date_column_name string [optional] filters \\SeaTable\\Client\\User\\FiltersInner[] [optional] filter_conjunction string [optional] notify_week_day int [optional] notify_week_hour int [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerDay/","title":"# TriggerRunPeriodicallyPerDay","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerDay/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyPerDayTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyInner[] [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerDayTrigger/","title":"# TriggerRunPeriodicallyPerDayTrigger","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerDayTrigger/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] table_id string [optional] view_id string [optional] condition \\SeaTable\\Client\\User\\TriggerRunPeriodicallyCondition [optional] date_column_name string [optional] notify_hour int [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerMonth/","title":"# TriggerRunPeriodicallyPerMonth","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerMonth/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyPerMonthTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyInner[] [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerMonthTrigger/","title":"# TriggerRunPeriodicallyPerMonthTrigger","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerMonthTrigger/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] table_id string [optional] view_id string [optional] condition \\SeaTable\\Client\\User\\TriggerRunPeriodicallyCondition [optional] date_column_name string [optional] notify_month_day int [optional] notify_month_hour int [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerWeek/","title":"# TriggerRunPeriodicallyPerWeek","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerWeek/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\TriggerRunPeriodicallyPerWeekTrigger [optional] actions \\SeaTable\\Client\\User\\ActionRunPeriodicallyInner[] [optional]"},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerWeekTrigger/","title":"# TriggerRunPeriodicallyPerWeekTrigger","text":""},{"location":"clients/php/User/Model/TriggerRunPeriodicallyPerWeekTrigger/#properties","title":"Properties","text":"Name Type Description Notes rule_name string [optional] table_id string [optional] view_id string [optional] condition \\SeaTable\\Client\\User\\TriggerRunPeriodicallyCondition [optional] date_column_name string [optional] notify_week_day int [optional] notify_week_hour int [optional]"},{"location":"clients/php/User/Model/UnsetPassword/","title":"# UnsetPassword","text":""},{"location":"clients/php/User/Model/UnsetPassword/#properties","title":"Properties","text":"Name Type Description Notes name string Name of the Base [optional] operation string [optional] password string [optional]"},{"location":"clients/php/User/Model/UpdateCommonDatasetSyncRequest/","title":"# UpdateCommonDatasetSyncRequest","text":""},{"location":"clients/php/User/Model/UpdateCommonDatasetSyncRequest/#properties","title":"Properties","text":"Name Type Description Notes is_sync_periodically bool [optional] dst_dtable_uuid string The UUID of the destination base. [optional] dst_table_id string [optional]"},{"location":"clients/php/User/Model/UpdateGroupRequest/","title":"# UpdateGroupRequest","text":""},{"location":"clients/php/User/Model/UpdateGroupRequest/#properties","title":"Properties","text":"Name Type Description Notes name string The name of the group. [optional] owner string [optional]"},{"location":"clients/php/User/Model/UpdateGroupRoleRequest/","title":"# UpdateGroupRoleRequest","text":""},{"location":"clients/php/User/Model/UpdateGroupRoleRequest/#properties","title":"Properties","text":"Name Type Description Notes is_admin \\SeaTable\\Client\\User\\IsAdmin [optional]"},{"location":"clients/php/User/Model/UpdateNotificationRuleRequest/","title":"# UpdateNotificationRuleRequest","text":""},{"location":"clients/php/User/Model/UpdateNotificationRuleRequest/#properties","title":"Properties","text":"Name Type Description Notes run_condition string [optional] trigger \\SeaTable\\Client\\User\\Trigger [optional] action \\SeaTable\\Client\\User\\Action [optional]"},{"location":"clients/php/User/Model/UsersInfo/","title":"# UsersInfo","text":""},{"location":"clients/php/User/Model/UsersInfo/#properties","title":"Properties","text":"Name Type Description Notes email string [optional] role_id int [optional]"},{"location":"clients/php/User/Model/XDaysBeforeRunningTheTask/","title":"# XDaysBeforeRunningTheTask","text":""},{"location":"clients/php/User/Model/XDaysBeforeRunningTheTask/#properties","title":"Properties","text":"Name Type Description Notes set_type string [optional] offset int [optional] offset_by string [optional]"},{"location":"clients/php/User/Model/XxxExactDate/","title":"# XxxExactDate","text":""},{"location":"clients/php/User/Model/XxxExactDate/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term string [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxNumberOfDaysAgo/","title":"# XxxNumberOfDaysAgo","text":""},{"location":"clients/php/User/Model/XxxNumberOfDaysAgo/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term int [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxNumberOfDaysFromNow/","title":"# XxxNumberOfDaysFromNow","text":""},{"location":"clients/php/User/Model/XxxNumberOfDaysFromNow/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term int [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxOneMonthAgo/","title":"# XxxOneMonthAgo","text":""},{"location":"clients/php/User/Model/XxxOneMonthAgo/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxOneMonthFromNow/","title":"# XxxOneMonthFromNow","text":""},{"location":"clients/php/User/Model/XxxOneMonthFromNow/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxOneWeekAgo/","title":"# XxxOneWeekAgo","text":""},{"location":"clients/php/User/Model/XxxOneWeekAgo/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxOneWeekFromNow/","title":"# XxxOneWeekFromNow","text":""},{"location":"clients/php/User/Model/XxxOneWeekFromNow/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxToday/","title":"# XxxToday","text":""},{"location":"clients/php/User/Model/XxxToday/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxTomorrow/","title":"# XxxTomorrow","text":""},{"location":"clients/php/User/Model/XxxTomorrow/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"clients/php/User/Model/XxxYesterday/","title":"# XxxYesterday","text":""},{"location":"clients/php/User/Model/XxxYesterday/#properties","title":"Properties","text":"Name Type Description Notes column_key string [optional] filter_predicate string [optional] filter_term \\SeaTable\\Client\\User\\FilterTermEmpty [optional] filter_term_modifier string [optional]"},{"location":"introduction/basic_concepts/","title":"Basic concepts","text":"<p>SeaTable is the world leading self-hosted no-code platform. With seatable, you can digitize processes and workflows in the shortest possible time without having to write a line of code.</p> <p>Even though you don't need any programming skills to use SeaTable, the digital Lego construction kit for developers offers various interfaces and automation options.</p>"},{"location":"introduction/basic_concepts/#right-solution-for-your-purpose","title":"Right solution for your purpose","text":"<p>Depending on what you want to do with seatable, this manual is divided into three major sections. This manual explains how you can build such solutions by yourself.</p> <p>Here are three examples, one for each section of this documentation:</p>"},{"location":"introduction/basic_concepts/#python-script-to-get-the-structure-of-a-base","title":"Python script to get the structure of a base","text":"<p>You can take the following python code and copy&amp;paste it to SeaTable. It will return the complete metastructure of your base. Easy or not?</p> Python codeOutput <pre><code>from seatable_api import Base, context\nbase = Base(context.api_token, context.server_url)\nbase.auth()\n\nmetadata = base.get_metadata()\n\nprint(\"--- COMPLETE BASE STRUCTURE WITH ALL BASES AND COLUMNS ---\")\nfor table in metadata['tables']:\n    print('.')\n    print(\"Table: \"+table['name']+\" (ID: \"+table['_id']+\")\")\nfor column in table['columns']:\n    link_target = \"\"\n    if column['type'] == \"link\":\n        link_target = \" --&gt; \"+column['data']['other_table_id']\n        if column['data']['other_table_id'] == table['_id']:\n            link_target = \" --&gt; \"+column['data']['table_id']\n    print(\"  --&gt; \"+column['name']+\" (\"+column['type']+link_target+\")\")\n</code></pre> <pre><code>--- COMPLETE BASE STRUCTURE WITH ALL BASES AND COLUMNS ---\n.\nTable: Opportunities (ID: 9g8f)\n--&gt; Name (text)\n--&gt; Status (single-select)\n--&gt; Prio (single-select)\n--&gt; Owner (collaborator)\n--&gt; Customer (link --&gt; deGa)\n--&gt; Estimated value (number)\n--&gt; Proposal deadline (date)\n--&gt; Contacts (link --&gt; lYb8)\n--&gt; Interactions (link --&gt; 0000)\n.\nTable: Interactions (ID: 0000)\n--&gt; Interaction ID (auto-number)\n--&gt; Opportunity (link --&gt; 9g8f)\n--&gt; Type (single-select)\n--&gt; Interaction (formula)\n--&gt; Opportunity status (formula)\n--&gt; Date and time (date)\n--&gt; Contact (link --&gt; lYb8)\n--&gt; Notes (long-text)#\n</code></pre>"},{"location":"introduction/basic_concepts/#gallery-plugin","title":"Gallery-Plugin","text":"<p>SeaTable provides some Plugins to visualize your data. Examples for such a plugin are the Gallery, Timeline, Kanban and so on. But SeaTable has everything that you build your own plugin. There are no limits to the imagination, it just requires some time and React skills.</p> <p></p>"},{"location":"introduction/basic_concepts/#custom-app-seatable-ideas","title":"Custom app: SeaTable ideas","text":"<p>There are multiple API classes available for various programming languages. This enables you to build any app or website you want.</p> <p>Our feature request tool SeaTable Ideas is an example for such a website. It uses SeaTable as database and the frontend is build completely with PHP and the slim framework.</p> <p>.</p>"},{"location":"introduction/basic_concepts/#data-model","title":"Data model","text":"<p>As a developer you typically interact with a single base. In SeaTable, a base can contain multiple tables, and each table contains multiple rows and columns. A row contains multiple fields.</p> <p>The logic is like this:</p> <pre><code>SeaTable Base\n\u251c\u2500 Table 1\n\u2502  \u2514\u2500 View A\n|     \u2514\u2500 Row 1\n|     \u2514\u2500 Row 2\n|     \u2514\u2500 Row 3\n\u2502  \u2514\u2500 View B\n|     \u2514\u2500 Row 3\n|     \u2514\u2500 Row 4\n\u2514\u2500 Table 2\n|  \u2514\u2500 ...\n</code></pre> <p>SeaTable offers a visual interface, which can be operated with the browser.</p> <p></p> <p>Look at the SeaTable API Reference for more details about the different objects in SeaTable like:</p> <ul> <li>Table</li> <li>View</li> <li>Row &amp; column</li> <li>Link</li> </ul>"},{"location":"introduction/basic_concepts/#authentication","title":"Authentication","text":"<p>The actual authentication depends on the development approach one chooses.</p> ScriptsPluginsClient APIs <p>Javascript Scripts does not require any authentication at all because these scripts are executed in the browser of the user and the user has to be authenticated already.</p> <p>Plugin Scripts require an authentication to get data from the base, but the <code>context</code> objects contains everything for an easy authentication.</p> <p>Plugins interact with the data of one base. SeaTable provides all required functions for easy authentication.</p> <p>If you want to build your own application you always have to authenticate with a base token against the base.</p>"},{"location":"introduction/get_support/","title":"Get support","text":"<p>Next to this developer guide there are more documentations available. To learn more about the SeaTable API, the installation of your own server or the usage or SeaTable, please refer to their respective manuals:</p> <ul> <li>SeaTable User Manual</li> <li>SeaTable Admin Manual</li> <li>SeaTable API Reference</li> </ul> <p>See the official SeaTable channel on YouTube for tutorials, guides and overviews. Visit our blog for latest news and to learn more about what is going on in and around SeaTable.</p> <p>At any time you could have a look at the SeaTable Community Forum to share your experience with other users or report issues or bugs.</p> <p>Enterprise support</p> <p>If you're using SeaTable in your organization and need assistance, e.g., to digitalization of processes, develop custom solutions or improve efficiency, get in touch to discuss our enterprise support offerings.</p> <p>We're happy to help!</p>"},{"location":"introduction/requirements/","title":"Requirements","text":"<p>You've decided to venture into developing your own script, plugin, or custom application\u2014excellent choice! This guide is designed to cover all aspects of this journey. While some descriptions might seem obvious to seasoned professionals, this manual is crafted to assist novice developers who are just starting out.</p>"},{"location":"introduction/requirements/#development-system","title":"Development system","text":"<p>To begin your development journey with SeaTable, you'll need a SeaTable system. If you're planning to create short scripts, SeaTable Cloud could be a suitable option. However, for more in-depth development or when creating plugins, it's highly recommended to set up your own SeaTable Server. Refer to the Admin manual for installation instructions.</p>"},{"location":"introduction/requirements/#programming-skills","title":"Programming skills","text":"<p>Your development requirements will vary based on your intended project. Below is an outline of the skills you might need:</p> ScriptsPluginsClient API's <p>Scripts inside SeaTable can only be written with either Javascript or Python. Therefore you will only require one of these programming languages.</p> <p>The development of a custom plugin for your own SeaTable Server requires profound knowlegde of Javascript and react.</p> <p>Even if the <code>SeaTable plugin templates</code> offers some reusable components, you will need some experience with react to build the interface of your plugin.</p> <p>Due to the publicly available and well documented API documentation, you can theoretically interact with SeaTable using any programming language.</p>"},{"location":"introduction/requirements/#learn-the-fundamentals","title":"Learn the fundamentals","text":"<p>If you're relatively new to development, diving into general tutorials can lay a strong foundation for your SeaTable development journey.</p> <p>While numerous free online tutorials cover various programming languages, investing in a comprehensive online course or a well-structured book can be invaluable. While free resources are available, a structured course or book often offers a more cohesive and thorough learning experience.</p> <p>These paid resources, though requiring a small investment, often provide:</p> <ul> <li>Structured Learning: A step-by-step approach ensuring a coherent understanding.</li> <li>Comprehensive Content: In-depth coverage of essential concepts and practical applications.</li> <li>Consistency: Ensuring continuity and coherence in learning.</li> </ul> <p>Remember, while free tutorials are abundant, investing in a structured resource can significantly expedite your learning process and provide a solid understanding of programming fundamentals essential for SeaTable development.</p> <p>This are personal recommendations</p> <p>The following sources does not contain any affiliate links and we do not earn any money from these recommendations. These are just good sources that we have used ourselves in the past.</p> JavascriptPythonReact Free online course <p>A solid and free online course is available from codecademy.com. The course Learn JavaScript requires a registration but is free and teaches you in approx. 20 hours all necessary skills.</p> Best online course <p>The best online course on javascript comes from Mosh Hamedani. Mosh manages to explain all the important basics for programming with Javascript in his course The Ultimate JavaScript Series. Once you have completed this course, you should be able to write your first scripts with ease. A monthly subscription costs just $29.</p> Book for Beginners <p>If you prefer a book, then we can recommend JavaScript from Beginner to Professional. It gives you all the basics for your first steps with Javascript.</p> Free online course <p>An easy to follow beginner guide comes from Google. At https://developers.google.com/edu/python?hl=de you can find this well balanced course to learn how to do your first steps.</p> Best online course <p>The best online course on Python comes from Mosh Hamedani. Mosh manages to explain all the important basics for programming with Python in his course Complete Python Mastery. Once you have completed this course, you should be able to write your first scripts with ease. A monthly subscription costs just $29.</p> Book for Beginners <p>Our recommended book for beginners is called Learn Python in One Day and Learn It Well and as far as we can tell it keeps his promise. Most of our working students have read this book if they want to learn more about Python.</p> Free online course <p>This free online course comes to you from Scrimba. Scrimba is a coding bootcamp with mainly paid courses and a high amount of interactive screencasts. The react course Learn React is fortunately free of charge.</p> Best online course <p>The best online course on React comes from Mosh Hamedani. Mosh will guide and teach you React until and will build a complete Video Game Discovery App. The course is called React 18 for Beginners.</p>"},{"location":"plugins/","title":"SeaTable plugin development process","text":"<p>In this guide, we will demonstrate step by step how to write a plugin to SeaTable. This plugin can display the basic information of the base, including</p> <ul> <li>Number of tables</li> <li>Number of records</li> <li>Number of collaborators</li> </ul> <p>The code of the plugin development example is very simple. You can click this github link to get the source code.</p> <p>The plugin development process is as follows.</p>"},{"location":"plugins/#the-basic-process-of-plugin-development","title":"The basic process of plugin development","text":""},{"location":"plugins/#1-install-development-tool","title":"1. Install development tool","text":"<p>Using npm:</p> <pre><code>$ npm install -g create-dtable-plugin\n</code></pre>"},{"location":"plugins/#2-create-plugin","title":"2. Create plugin","text":"<pre><code>$ create-dtable-plugin init seatable-plugin-table-info\n</code></pre> <p>Install dependencies</p> <pre><code>$ cd seatable-plugin-table-info\n$ npm install\n</code></pre>"},{"location":"plugins/#3-modify-the-plugin-configuration","title":"3. Modify the plugin configuration","text":"<p>Modify the info.json configuration file in the plugin-config folder.</p> <pre><code>\"name\": '',                   // The name can only contain letters, numbers and underscores\n\"version\": '',                // Plugin version number\n\"display_name\": '',           // The name displayed by the plugin\n\"description\": '',            // Description of plugin\n</code></pre> <p>There is no need to add other configuration parameters, other parameters are automatically generated by the packaging tool.</p> <p>Optional operation</p> <ul> <li>Add a custom icon.png to the plugin-config folder as the icon of the plugin (it may not be provided, the default icon is used. The icon.png requires 128x128 pixels)</li> <li>Add a custom card_image.png to the plugin-config folder as the background image of the plugin icon (it may not be provided, the default background is displayed. The card_image.png requires 560x240 pixels)</li> </ul>"},{"location":"plugins/#4-modify-the-plugin-registration-function-in-the-entryjs-file","title":"4. Modify the plugin registration function in the entry.js file","text":"<p>Modify</p> <pre><code>window.app.registerPluginItemCallback(\"test\", TaskList.execute);\n</code></pre> <p>to</p> <pre><code>window.app.registerPluginItemCallback(name, TaskList.execute);\n</code></pre> <p>The name value here is the \"name\" value in plugin-config/info.json.</p>"},{"location":"plugins/#5-add-plugin-development-configuration-file","title":"5. Add plugin development configuration file","text":"<p>There is a file setting.local.dist.js in the project src folder, copy it and name it setting.local.js</p> <p>The content of the file is as follows, and you can modify it according to the comments</p> <pre><code>const config = {\n  APIToken: \"**\", // The apiToken of the dtable\n  server: \"**\", // The deployment URL of the dtable\n  workspaceID: \"**\", // The workspaceID of the dtable\n  dtableName: \"**\", // The name of the dtable to which the plugin\n  lang: \"**\", // Plugin default language type, 'en' or 'zh-cn'\n};\n</code></pre>"},{"location":"plugins/#6-start-development","title":"6. Start development","text":"<p>Run local development environment</p> <pre><code>$ npm start\n</code></pre> <p>Open localhost:3000 on the browser, you can see that the plugin dialog has been opened, and the interface function provided by the dtable-sdk library is displayed by default in the dialog</p> <ol> <li>getTables: obtained table information of the dtable base</li> <li>getRelatedUsers: get detailed information of dtable collaborators</li> </ol> <p>Main code and purpose</p> <ul> <li>/src/index.js: entry file for local development plugin</li> <li>/src/entry.js: follow the entry file when SeaTable is run as a plugin</li> <li>/src/app.js: the main code of the plugin</li> </ul>"},{"location":"plugins/#7-display-basic-information-of-the-table","title":"7. Display basic information of the table","text":"<p>Write a TableInfo component, this component needs to pass in two props, tables and collaborators</p> <pre><code>class TableInfo extends React.Component {}\n\nconst propTypes = {\n  tables: PropTypes.array.isRequired,\n  collaborators: PropTypes.array.isRequired,\n};\n\nTableInfo.propTypes = propTypes;\n\nexport default TableInfo;\n</code></pre> <p>Get the number of tables</p> <pre><code>getTablesNumber = (tables) =&gt; {\n  return tables &amp;&amp; Array.isArray(tables) ? tables.length : 0;\n};\n</code></pre> <p>Get the number of records</p> <pre><code>getRecords = (tables) =&gt; {\n  let recordsNumber = 0;\n  if (!tables) return recordsNumber;\n  for (let i = 0; i &lt; tables.length; i++) {\n    const table = tables[i];\n    const rows = table.rows;\n    if (rows &amp;&amp; Array.isArray(rows)) {\n      recordsNumber += rows.length;\n    }\n  }\n  return recordsNumber;\n};\n</code></pre> <p>Get the number of collaborators</p> <pre><code>renderCollaborators = (collaborators) =&gt; {\n  if (!collaborators || !Array.isArray(collaborators)) {\n    return null;\n  }\n  return collaborators.map((collaborator, index) =&gt; {\n    return (\n      &lt;div key={index} className=\"collaborator\"&gt;\n        &lt;span className=\"collaborator-avatar-container\"&gt;\n          &lt;img\n            className=\"collaborator-avatar\"\n            alt=\"\"\n            src={collaborator.avatar_url}\n          /&gt;\n        &lt;/span&gt;\n        &lt;span className=\"collaborator-name\"&gt;{collaborator.name}&lt;/span&gt;\n      &lt;/div&gt;\n    );\n  });\n};\n</code></pre> <p>Interface rendering: the number of tables, the number of records and the number of collaborators</p> <pre><code>render() {\n  const { tables, collaborators } = this.props;\n  return (\n    &lt;div&gt;\n      &lt;div&gt;{'Number of tables: '}{this.getTablesNumber(tables)}&lt;/div&gt;&lt;br/&gt;\n      &lt;div&gt;{'Total number of records: '}{this.getRecords(tables)}&lt;/div&gt;&lt;br/&gt;\n      &lt;div&gt;{'Number of collaborators: '}{collaborators ? collaborators.length : 0}&lt;/div&gt;&lt;br/&gt;\n      &lt;div className=\"plugin-collaborators\"&gt;{this.renderCollaborators(collaborators)}&lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre> <p>In the parent component app.js, use the <code>TableInfo</code> component , modify the render function in app.js, and pass in tables and collaborators.</p> <pre><code>import TableInfo from './table-info';\n\nclass App extends React.Component{\n  let tables = this.dtable.getTables();\n  let collaborators = this.dtable.getRelatedUsers();\n  render() {\n    return (\n      &lt;Modal isOpen={showDialog} toggle={this.onPluginToggle} contentClassName=\"dtable-plugin plugin-container\" size='lg'&gt;\n        &lt;ModalHeader className=\"test-plugin-header\" toggle={this.onPluginToggle}&gt;{'Plugin'}&lt;/ModalHeader&gt;\n        &lt;ModalBody className=\"test-plugin-content\"&gt;\n          &lt;TableInfo tables={tables} collaborators={collaborators}/&gt;\n        &lt;/ModalBody&gt;\n      &lt;/Modal&gt;\n    );\n  }\n}\n</code></pre> <p>Add the css/table-info.css file and modify the style of the plugin.</p> <p>Run <code>npm start</code> again, you can see the following information on the browser localhost: 3000.</p> <pre><code>Number of tables: X\nTotal number of records: XXX\nNumber of collaborators: X\n</code></pre>"},{"location":"plugins/#8-package-upload-plugin","title":"8. Package upload plugin","text":"<ol> <li> <p>Execute <code>npm run build-plugin</code> to package the plugin, and the path of the packaged plugin is /plugin/task.zip</p> </li> <li> <p>Upload the plugin task.zip to dtable</p> </li> </ol>"},{"location":"plugins/environments/","title":"dtable","text":""},{"location":"plugins/environments/#init","title":"Init","text":"<p>The plugin development environment is divided into two types, the development environment and the production environment. Because of the different environments, the initialization methods are also different:</p> <ul> <li> <p>In the development environment, you need to provide the configuration file required by the plugin, which is used to initialize the plugin and obtain the data required by the plugin.</p> </li> <li> <p>In the production environment, you need to install the plugin, then the plugin can directly read the data of the base in the current browser to initialize the plugin.</p> </li> </ul>"},{"location":"plugins/environments/#initialize-the-plugin","title":"Initialize the plugin","text":""},{"location":"plugins/environments/#development-environment","title":"Development environment","text":"<p>Initialize the plugin in the development environment</p> <pre><code>import DTable from \"dtable-sdk\";\n\nconst dtable = new DTable();\nconst settings = {\n  server: \"https://cloud.seatable.cn\",\n  APIToken: \"50c17897ae8b1c7c428d459fc2c379a9bc3806cc\",\n};\nawait dtable.init(config);\n</code></pre>"},{"location":"plugins/environments/#production-environment","title":"Production environment","text":"<p>Initialize the plugin in the production environment</p> <pre><code>import DTable from \"dtable-sdk\";\n\nconst dtable = new Dtable();\nconst dtableStore = window.app.dtableStore; // Get initialization data from the production environment\nawait dtable.initBrowser(dtableStore);\n</code></pre>"},{"location":"plugins/environments/#monitoring-event-changes","title":"Monitoring event changes","text":""},{"location":"plugins/environments/#subscribe-events","title":"Subscribe events","text":"Event type description use dtable-connect Indicates that a link has been established with the server, and the data loading is complete Update state and UI display local-dtable-changed Indicates that some operations have been performed locally, and the data has changed Update state and UI display remote-dtable-changed Indicates that some operations sent by the server have been performed locally, and the data has changed Update state and UI display <pre><code>import DTable from 'dtable-sdk';\n\nconst dtable = new Dtable();\ndtable.subscribe('dtable-connect', () =&gt; {...});\ndtable.subscribe('local-dtable-changed', () =&gt; {...});\ndtable.subscribe('remote-dtable-changed', () =&gt; {...});\n</code></pre>"},{"location":"plugins/environments/#example","title":"Example","text":"<p>This is an initialization example in the development environment.</p> <p>Since two environments need to be compatible, the initialization operations for general plugin development are as follows:</p> <pre><code>import Dtable from 'dtable-sdk';\nimport PropTypes from 'prop-types';\n\nconst propsTypes = {\n  isDevelopment: PropTypes.bool\n};\n\nconst settings = {\n  \"server\": \"https://cloud.seatable.cn\",\n  \"APIToken\": \"50c17897ae8b1c7c428d459fc2c379a9bc3806cc\",\n};\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n    this.dtable = new Dtable();\n  }\n\n  async componentDidMount() {\n    const { isDevelopment } = this.props;\n    if (isDevelopment) {\n      await dtable.init(settings);\n      await this.dtable.syncWithServer();\n      this.dtable.subscribe('dtable-connect', this.resetData);\n    } else {\n      const dtableStore = window.app.dtableStore;\n      dtable.initBrowser(dtableStore);\n    }\n\n    this.dtable.subscribe('local-dtable-changed', this.resetData);\n    this.dtable.subscribe('remote-dtable-changed', this.resetData);\n  }\n\n  resetData = () =&gt; {\n    // ...\n    this.setState({isLoading: false});\n  }\n\n  render() {\n    return (\n      ...\n    );\n  }\n\n}\n</code></pre>"},{"location":"plugins/methods/","title":"Methods","text":"<p>This is a list of all available objects and methods in SeaTable you can use in the plugin development.</p> <p>For a more detailed description of the used parameters, refer to the data model at the SeaTable API Reference.</p>"},{"location":"plugins/methods/#common","title":"Common","text":"<p>Base represents a table in SeaTable. The <code>base</code> object provide a way to read, manipulate and output data in/from your base. The following methods are available.</p>"},{"location":"plugins/methods/#users","title":"Users","text":"getRelatedUsers <p>Get other users associated with the current base (collaborators of the table, the shared person of the table, etc.)</p> <pre><code>dtable.getRelatedUsers()\n</code></pre> <p>Example</p> <pre><code>const collaborators = dtable.getRelatedUsers();\n</code></pre> getCollaboratorsName <p>Get a list of names of collaborators</p> <p><pre><code>dtable.getCollaboratorsName(collaborators, value)\n</code></pre> Arguments</p> <ul> <li>collaborators: collaborator list in this base</li> <li>value: email list of collaborators</li> </ul> <p>Example</p> <pre><code>const collaborators = dtable.getRelatedUsers();\nconst value = ['abc@seafile.com', 'shun@seafile.com'];\nconst name = dtable.getCollaboratorsName(collaborators, value); // 'abc, shun'\n</code></pre>"},{"location":"plugins/methods/#views","title":"Views","text":"getViewRowsColor <p>Get the color attributes of the row data in the view</p> <pre><code>dtable.getViewRowsColor(rows, view, table)\n</code></pre> <p>Arguments</p> <ul> <li>rows: the rows of the color attribute</li> <li>view: view object</li> <li>table: table object</li> </ul> <p>Example</p> <pre><code>const tableName = 'tableName';\nconst viewName = 'viewName';\nconst table = dtable.getTableByName(tableName);\nconst view = dtable.getViewByName(table, viewName);\nconst rows = dtable.getViewRows(view, table);\nconst rowsColor = dtable.getViewRowsColor(rows, view, table);\n</code></pre>"},{"location":"plugins/methods/#output","title":"Output","text":"getTableFormulaResults <p>Get the data in the calculation formula column of the table</p> <pre><code>dtable.getTableFormulaResults(table, rows)\n</code></pre> <p>Arguments</p> <ul> <li>table: table object</li> <li>rows: row data of the relevant data of the calculation formula column</li> </ul> <p>Example</p> <pre><code>const tableName = 'tableName';\nconst viewName = 'viewName';\nconst table = dtable.getTableByName(tableName);\nconst view = dtable.getViewByName(table, viewName);\nconst rows = dtable.getViewRows(view, table);\nconst formulaResult = dtable.getTableFormulaResults(table, rows);\n</code></pre> getLinkCellValue <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getLinkDisplayString <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getLinkDisplayString <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getNumberDisplayString <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getGeolocationDisplayString <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getDurationDisplayString <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getDateDisplayString <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre>"},{"location":"plugins/methods/#tables","title":"Tables","text":"addTable <p>Get a list of names of collaborators</p> <p>Example</p> deleteTable <p>Get a list of names of collaborators</p> <p>Example</p> renameTable <p>Get a list of names of collaborators</p> <p>Example</p> getTables <p>Get a list of names of collaborators</p> <p>Example</p> getActiveTable <p>Get a list of names of collaborators</p> <p>Example</p> getTableByName <p>Get a list of names of collaborators</p> <p>Example</p> getTableById <p>Get a list of names of collaborators</p> <p>Example</p> importDataIntoNewTable <p>Get a list of names of collaborators</p> <p>Example</p>"},{"location":"plugins/methods/#views_1","title":"Views","text":"addView <p>Get a list of names of collaborators</p> <p>Example</p> deleteView <p>Get a list of names of collaborators</p> <p>Example</p> renameView <p>Get a list of names of collaborators</p> <p>Example</p> getViews <p>Get a list of names of collaborators</p> <p>Example</p> getNonArchiveViews <p>Get a list of names of collaborators</p> <p>Example</p> getActiveView <p>Get a list of names of collaborators</p> <p>Example</p> getViewByName <p>Get a list of names of collaborators</p> <p>Example</p> getViewById <p>Get a list of names of collaborators</p> <p>Example</p> isDefaultView <p>Get a list of names of collaborators</p> <p>Example</p> isGroupView <p>Get a list of names of collaborators</p> <p>Example</p> isFilterView <p>Get a list of names of collaborators</p> <p>Example</p>"},{"location":"plugins/methods/#columns","title":"Columns","text":"getColumns <p>Get a list of names of collaborators</p> <p>Example</p> getShownColumns <p>Get a list of names of collaborators</p> <p>Example</p> getColumnsByType <p>Get a list of names of collaborators</p> <p>Example</p> getColumnByName <p>Get a list of names of collaborators</p> <p>Example</p> getColumnByKey <p>Get a list of names of collaborators</p> <p>Example</p> modifyColumnData <p>Get a list of names of collaborators</p> <p>Example</p>"},{"location":"plugins/methods/#rows","title":"Rows","text":"sqlQuery <p>Use sql statement to query a dtable</p> <pre><code>dtable.sqlQuery(sql)\n</code></pre> <p>Arguments</p> <ul> <li>sql: SQL statement to be executed</li> </ul> <p>Note: By default, up to 100 results are returned. If you need more results, please add the limit parameter in the sql statement</p> <p>Possible errors include</p> <ul> <li>ValueError: sql can not be empty</li> <li>ConnectionError: network error</li> <li>Exception: no such table</li> <li>Exception: no such column</li> <li>Exception: columns in group by should match columns in select</li> </ul> <p>Example</p> <pre><code>dtable.sqlQuery('select name, price, year from Bill')\n</code></pre> <pre><code>[\n    {'_id': 'PzBiZklNTGiGJS-4c0_VLw', 'name': 'Bob', 'price': 300, 'year': 2019},\n    {'_id': 'Ep7odyv1QC2vDQR2raMvSA', 'name': 'Bob', 'price': 300, 'year': 2021},\n    {'_id': 'f1x3X_8uTtSDUe9D60VlYQ', 'name': 'Tom', 'price': 100, 'year': 2019},\n    {'_id': 'NxeaB5pDRFKOItUs_Ugxug', 'name': 'Tom', 'price': 100, 'year': 2020},\n    {'_id': 'W0BrjGQpSES9nfSytvXgMA', 'name': 'Tom', 'price': 200, 'year': 2021},\n    {'_id': 'EvwCWtX3RmKYKHQO9w2kLg', 'name': 'Jane', 'price': 200, 'year': 2020},\n    {'_id': 'BTiIGSTgR06UhPLhejFctA', 'name': 'Jane', 'price': 200, 'year': 2021}\n]\n</code></pre> <p>WHERE</p> <pre><code>dtable.sqlQuery('select name, price from Bill where year = 2021 ')\n</code></pre> <pre><code>[\n    {'_id': 'Ep7odyv1QC2vDQR2raMvSA', 'name': 'Bob', 'price': 300},\n    {'_id': 'W0BrjGQpSES9nfSytvXgMA', 'name': 'Tom', 'price': 200},\n    {'_id': 'BTiIGSTgR06UhPLhejFctA', 'name': 'Jane', 'price': 200}\n]\n</code></pre> <p>ORDER BY</p> <pre><code>dtable.sqlQuery('select name, price, year from Bill order by year')\n</code></pre> <pre><code>[\n    {'_id': 'PzBiZklNTGiGJS-4c0_VLw', 'name': 'Bob', 'price': 300, 'year': 2019},\n    {'_id': 'f1x3X_8uTtSDUe9D60VlYQ', 'name': 'Tom', 'price': 100, 'year': 2019},\n    {'_id': 'NxeaB5pDRFKOItUs_Ugxug', 'name': 'Tom', 'price': 100, 'year': 2020},\n    {'_id': 'EvwCWtX3RmKYKHQO9w2kLg', 'name': 'Jane', 'price': 200, 'year': 2020},\n    {'_id': 'Ep7odyv1QC2vDQR2raMvSA', 'name': 'Bob', 'price': 300, 'year': 2021},\n    {'_id': 'W0BrjGQpSES9nfSytvXgMA', 'name': 'Tom', 'price': 200, 'year': 2021},\n    {'_id': 'BTiIGSTgR06UhPLhejFctA', 'name': 'Jane', 'price': 200, 'year': 2021}\n]\n</code></pre> <p>GROUP BY</p> <pre><code>dtable.sqlQuery('select name, sum(price) from Bill group by name')\n</code></pre> <pre><code>[\n    {'SUM(price)': 600, 'name': 'Bob'},\n    {'SUM(price)': 400, 'name': 'Tom'},\n    {'SUM(price)': 400, 'name': 'Jane'}\n]\n</code></pre> <p>DISTINCT</p> <pre><code>dtable.sqlQuery('select distinct name from Bill')\n</code></pre> <pre><code>[\n    {'_id': 'PzBiZklNTGiGJS-4c0_VLw', 'name': 'Bob'},\n    {'_id': 'f1x3X_8uTtSDUe9D60VlYQ', 'name': 'Tom'},\n    {'_id': 'EvwCWtX3RmKYKHQO9w2kLg', 'name': 'Jane'}\n]\n</code></pre> appendRow <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> deleteRowById <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> deleteRowsByIds <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> modifyRow <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> forEachRow <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getTableLinkRows <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getViewRows <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getGroupRows <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getInsertedRowInitData <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getRowsByID <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> getRowById <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre> moveGroupRows <p>Get a list of names of collaborators</p> <pre><code>\n</code></pre> <p>Example</p> <pre><code>\n</code></pre>"},{"location":"plugins/methods/#plugins","title":"Plugins","text":"getPluginSettings <p>Get a list of names of collaborators</p> <p>Example</p> updatePluginSettings <p>Get a list of names of collaborators</p> <p>Example</p> deletePluginSettings <p>Get a list of names of collaborators</p> <p>Example</p>"},{"location":"plugins/methods/#constants","title":"Constants","text":"ColumnTypes <p>Get a list of names of collaborators</p> <p>Example</p> Column icon configs <p>Get a list of names of collaborators</p> <p>Example</p> Column options <p>Get a list of names of collaborators</p> <p>Example</p> Formula result type <p>Get a list of names of collaborators</p> <p>Example</p> Select option colors <p>Get a list of names of collaborators</p> <p>Example</p> Table permission type <p>Get a list of names of collaborators</p> <p>Example</p>"},{"location":"scripts/","title":"Scripts in SeaTable","text":""},{"location":"scripts/#scripts-in-general","title":"Scripts in general","text":"<p>Scripts are executed directly in SeaTable. If you need more information how to run a script, please read the following help article Run script manually, by button or by automation.</p> <p></p> <p>Scripts are used to interact with the data in a base. Currently, python and javascript are available as script languages.</p> <p>Javascript is executed directly in the user's browser, requires no authentication, and is used for simple data operations.</p> <p>Python, on the other hand, is executed on the SeaTable server. Unlike javascript, every Python script requires authentication and is suitable for more extensive automations and processes.</p>"},{"location":"scripts/#how-to-start","title":"How to start?","text":"<p>Each chapter provide you with explanations about the available objects and methods. Multiple examples should help you to start immediately and get a feeling about the possibilities.</p> <p>Here are some additional help articles from the user manual explaining how to create, execute and monitor a script in SeaTable:</p> <p>Links to the SeaTable User Manual:</p> <ul> <li>Creating and deleting a script</li> <li>Run script manually, by button or by automation</li> <li>The execution log of scripts</li> </ul>"},{"location":"scripts/javascript/basic_structure_js/","title":"Basic structure","text":"<p>The JavaScript script runs directly in the current browser and is suitable for simple data processing. JavaScript does not require any authentication.</p> <p>Two JavaScript APIs in SeaTable</p> <p>SeaTable offers two different ways to use JavaScript with SeaTable. You can executing a JS-Script directly in SeaTable and there is a JavaScript Client API. The functions are similar but not identical. If you want to use a JavaScript in SeaTable, stay at this section, otherwise switch to the Client APIs.</p>"},{"location":"scripts/javascript/basic_structure_js/#interact-with-your-base","title":"Interact with your base","text":"<p>JavaScript provide pre-defined objects, corresponding methods of this objects and utilities. On top, normal JavaScript operations like <code>console.log</code> or calculations are working as usual.</p> <ul> <li>base</li> <li>output</li> <li>context</li> <li>base utilities</li> </ul>"},{"location":"scripts/javascript/basic_structure_js/#lets-beginn","title":"Let's beginn","text":"<p>Let's make this concrete and let us look at some basic examples.</p> <ol> <li>Jump to your seatable webinterface</li> <li>Create a new Script of the type <code>Javascript</code></li> <li>Copy the following code</li> <li>Run the script</li> </ol> <p>You will learn from these examples, that it is quite easy to read, output and even manipulate the data of a base inside SeaTable with the predefined objects and the corresponding methods.</p> Get number of tablesGet column namesWrite new rowUpdate one specific cell <pre><code>const tables = base.getTables(); // (1)!\noutput.text(tables.length); // (2)!\n</code></pre> <ol> <li> <ol> <li><code>base</code> is the predefined-object provided by SeaTable containing all bases of a base.</li> <li><code>getTables()</code> is the function to get all bases from the object <code>base</code>.</li> </ol> </li> <li> <ol> <li><code>output</code> is also a predefined-object provided by SeaTable.</li> <li><code>length</code> is just a normal operation in JavaScript.</li> </ol> </li> </ol> <p>As you can see, the script will output the number of tables in your base. Read the comments behind the two lines to get more information about the difference between a predefined object, a method of this object and an ordinary JavaScript function.</p> <pre><code>const table = base.getTableByName('Table1'); // (1)!\nconst view = base.getViewByName(table, 'Default View'); // (2)!\nconst rows = base.getRows(table, view); // (3)!\n\nfor (var i=0; i&lt;rows.length; i++) { // (4)!\nconst row = rows[i];\noutput.text(row['Name']);\n}\n</code></pre> <ol> <li>get the content of the table <code>Table1</code>.</li> <li>get the content of the view <code>Default View</code>.</li> <li>get the row of this view <code>Default View</code> in this table <code>Table1</code>.</li> <li>iterate over all rows and print them</li> </ol> <p>This time, we will get the <code>Name</code> of all columns in the table <code>Table1</code> and the view <code>Default View</code>.</p> <pre><code>comming soon.\n</code></pre> <pre><code>comming soon.\n</code></pre>"},{"location":"scripts/javascript/common_questions/","title":"Common questions (JavaScript)","text":"How to output a variable? <p>To output the content of a variable you should use quotation mark instead of single or double quotes.</p> <pre><code># correct way to output the variable\n`name_of_variable`\n\n# will not work\n\"name_of_variable\"\n</code></pre>"},{"location":"scripts/javascript/examples/","title":"Examples","text":"<p>Currenty this documentation contains three examples for easy to follow script with Javascript. You can just copy&amp;paste them in any base in SeaTable any run them.</p>"},{"location":"scripts/javascript/examples/#add-rows","title":"Add rows","text":"<p>short explanation will follow soon.</p>"},{"location":"scripts/javascript/examples/#get-incremental","title":"Get Incremental","text":"<p>short explanation will follow soon.</p>"},{"location":"scripts/javascript/examples/#statistics","title":"Statistics","text":"<p>short explanation will follow soon.</p>"},{"location":"scripts/javascript/examples/auto-add-rows/","title":"Example: Automatically calculate...","text":"<pre><code>// Automatically record monthly repetitive items in a ledger\n\nconst table = base.getTableByName('Daily expenses');\n\n// get date objects on the 10th and 20th of the current month\nvar date = new Date();\nvar date10 = new Date(date.setDate(10));\nvar date20 = new Date(date.setDate(20));\n\n// create two new expense items\nvar feeAWS = {'Name': 'Amazon cloud service', \n              'Date': base.utils.formatDate(date10),\n              'Type': 'Cloud service'\n             };\nvar feeClean = {'Name': 'Clean', \n                'Date': base.utils.formatDate(date20),\n                'Type': 'Daily office',\n                'Fee': 260\n               };\n\n// auto add data               \nbase.addRow(table, feeAWS);\nbase.addRow(table, feeClean);\n</code></pre>"},{"location":"scripts/javascript/examples/get-incremental/","title":"Get incrementals","text":"<pre><code>const tableName = 'A table';\nconst viewName = 'Default view';\n\n// name of the column that records total number at a specific time\nconst columnName = 'Total number';\n\n// name of the column that need to calculate incremental value\nconst incrementalColumnName = 'Incremental number';\n\n// get table\nconst table = base.getTableByName(tableName);\n// get view \nconst view = base.getViewByName(table, viewName);\n\n// if current view is a grouped view\nif (view.groupbys &amp;&amp; view.groupbys.length &gt; 0) {\n  // get group view rows\n  const groupViewRows = base.getGroupedRows(table, view);\n\n  groupViewRows.map((group) =&gt; {\n    group.rows.map((row, index, rows) =&gt; {\n        // get current row value\n        const currentNumber = row[columnName];\n        if (!currentNumber) return;\n        // calculate increment\n        const previousRow = rows[index - 1];\n        // if there is no previousRow, set increaseCount to 0\n        const previousNumber = previousRow ? previousRow[columnName] : currentNumber;\n        const increaseCount = currentNumber - previousNumber;\n        // set calculated increment to row\n        base.modifyRow(table, row, {[incrementalColumnName]: increaseCount});\n    });\n  });\n} else {\n    // get current view rows\n    const rows = base.getRows(table, view);\n    rows.map((row, rowIndex, rows) =&gt; {\n    // calculate increment\n    const currentNumber = row[columnName];\n    if (!currentNumber) return;\n    const previousRow = rows[rowIndex - 1];\n    // if there is no previousRow, set increaseCount to 0\n    const previousNumber = previousRow ? previousRow[columnName] : currentNumber;\n    const increaseCount = currentNumber - previousNumber;\n    // set calculated increment to row\n    base.modifyRow(table, row, {[incrementalColumnName]: increaseCount});\n  });\n}\n</code></pre>"},{"location":"scripts/javascript/examples/statistics-attendance/","title":"staticstics","text":"<pre><code>const originTableName = 'Attendance table';\nconst originViewName = 'Default view';\nconst originNameColumnName = 'Name';\nconst originDepartmentColumnName = 'Department';\nconst originDateColumnName = 'Date';\nconst originTimeColumnName = 'Attendance time';\n\nconst targetTableName = 'Statistics attendance';\nconst targetNameColumnName = 'Name';\nconst targetDepartmentColumnName = 'Department';\nconst targetDateColumnName = 'Date';\nconst targetStartTimeColumnName = 'Clock-In';\nconst targetEndTimeColumnName = 'Clock-Out';\nconst targetTable = base.getTableByName(targetTableName);\n\nconst table = base.getTableByName(originTableName);\nconst view = base.getViewByName(table, originViewName);\nconst rows = base.getRows(table, view);\n\n// sort the rows in the table according to the date column;\nrows.sort((row1, row2) =&gt; {\n    if (row1[originDateColumnName] &lt; row2[originDateColumnName]) {\n      return -1;\n    } else if (row1[originDateColumnName] &gt; row2[originDateColumnName]) {\n      return 1; \n    } else {\n      return 0;\n    }\n});\n\n/*\n group all rows via date and save them to groupedRows, the format\n of the object is {'2020-09-01': [row, ...], '2020-09-02': [row, ...]}\n*/\nconst groupedRows = {};\nrows.forEach((row) =&gt; {\n  const date = row[originDateColumnName]; \n  if (!groupedRows[date]) {\n    groupedRows[date] = [];\n  }\n  groupedRows[date].push(row);\n});\n\nconst dateKeys = Object.keys(groupedRows);\n\n// traverse all the groups in groupedRows\ndateKeys.forEach((dateKey) =&gt; { \n  // get all attendance data of all members on the current date\n  const dateRows = groupedRows[dateKey];\n  const staffDateStatItem = {};\n  // traverse these rows of data and group by the name of the employee, get the clock-in and clock-out time of each employee that day, and save it to staffDateStatItem\n  // the format is { a1: {Name: 'a1', Date: '2020-09-01', Clock-In: '08:00', Clock-Out: '18:00'},... }\n  dateRows.forEach((row)=&gt; {\n    const name = row[originNameColumnName];\n    if (!staffDateStatItem[name]) {\n      // Generate a new row based on the original row data, and add Clock-In and Clock-Out columns in the newly generated row\n      staffDateStatItem[name] = { [targetNameColumnName]: name, [targetDateColumnName]: row[originDateColumnName], [targetDepartmentColumnName]: row[originDepartmentColumnName], [targetEndTimeColumnName]: row[originTimeColumnName], [targetStartTimeColumnName]: row[originTimeColumnName]};\n    } else {\n      // when the column name of the row is repeated, compare the time, choose the largest one as the Clock-Out time, and the smallest one as the Clock-In time\n      const time = row[originTimeColumnName];\n      const staffItem = staffDateStatItem[name];\n      if (compareTime(staffItem[targetStartTimeColumnName], time)) {\n        staffItem[targetStartTimeColumnName] = time;\n      } else if (compareTime(time, staffItem[targetEndTimeColumnName])) {\n        staffItem[targetEndTimeColumnName] = time;\n      } \n    }\n  });\n\n  // write the attendance data of all employees on the current date into the table\n  Object.keys(staffDateStatItem).forEach((name) =&gt; {\n    base.addRow(targetTable, staffDateStatItem[name]);\n  });  \n});\n\n// compare the size of two string format time\nfunction compareTime(time1, time2) {\n  const t1 = time1.split(':');\n  const t2 = time2.split(':');\n  if (parseInt(t1[0]) &gt; parseInt(t2[0])) {\n    return true;\n  } else if (parseInt(t1[0]) &lt; parseInt(t2[0])) {\n    return false; \n  } else if (parseInt(t1[0]) == parseInt(t2[0])) {\n    if (parseInt(t1[1]) &gt; parseInt(t2[1])) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n</code></pre>"},{"location":"scripts/javascript/objects/","title":"Predefined objects in SeaTable (Javascript)","text":"<p>JavaScript in SeaTable relies on the JavaScript library <code>seatable-api-js</code> which can be found on GitHub.</p> <p>This manual list all available objects and methods that are availabe within Javascript scripts in SeaTable.</p> <p>Need specific function?</p> <p>The JavaScript class does not yet cover all available functions of the SeaTable API. If you are missing a special function, please contact us at support@seatable.io and we will try to add the missing functions.</p> <p>For a more detailed description of the used parameters, refer to the data model at the SeaTable API Reference.</p>"},{"location":"scripts/javascript/objects/#base-object","title":"Base object","text":"<p>Base object provide a way to read, manipulate and output data in/from your base. The following methods are available.</p>"},{"location":"scripts/javascript/objects/columns/","title":"Columns","text":""},{"location":"scripts/javascript/objects/columns/#get-columns","title":"Get Columns","text":"<p>getColumns</p> <p>Get all the columns in the table, and return all the column objects in an array.</p> <pre><code>base.getColumns(table: Object/String);\n</code></pre> <p>Examples <pre><code>const table  = base.getTableByName('Table1');\nconst columns = base.getColumns(table);\n\ncolumn.forEach((column) =&gt; {\n    output.text(column.name);\n})\n</code></pre></p> <pre><code>const columns = base.getColumns('Table1');\n</code></pre> <p>listColumns</p> <pre><code>Get the columns by name of table and view, if view_name is not set, all columns in table will be returned\n\n``` js\nbase.listColumns(table_name: String, view_name: String);\n```\n\n__Examples__\n``` js\nconst table_name  = 'Table1'\nconst view_name = 'Default'\nconst columns = base.listColumns(table_name, view_name);\n\ncolumn.forEach((column) =&gt; {\n    output.text(column.name);\n})\n```\n\n``` js\nconst columns = base.listColumns('Table1');\n```\n</code></pre> <p>getShownColumns</p> <p>Get all the displayed columns in a view, excluding the hidden columns in the view, and return an array.</p> <pre><code>base.getShownColumns(table: Object/String, view: Object/String);\n</code></pre> <p>Examples <pre><code>const table  = base.getTableByName('Table1');\nconst view = base.getViewByName(table, 'view 1');\nconst columns = base.getShownColumns(table, view);\ncolumn.forEach((column) =&gt; {\n    output.text(column.name);\n})\n</code></pre></p> <pre><code>const columns = base.getShownColumns('Table1', 'view 1');\n</code></pre> <p>getColumnByName</p> <p>Get the column object via its name.</p> <pre><code>base.getColumnByName(table: Object/String, name: String);\n</code></pre> <p>Examples <pre><code>const column = base.getColumnByName(table, 'Column name');\noutput.text(column.name);\n</code></pre></p> <pre><code>const column = base.getColumnByName('Table1', 'Column name');\n</code></pre> <p>getColumnsByType</p> <p>Get all specific types of columns in the table.</p> <pre><code>const columns = base.getColumnsByType(table: Object/String, type: String);\n</code></pre> <p>Examples <pre><code>const table  = base.getTableByName('Table1');\nconst columns = base.getColumnsByType(table, 'text');\noutput.text(column.length);\n</code></pre></p> <pre><code>const columns = base.getColumnsByType('Table1', 'text');\noutput.text(column.length);\n</code></pre>"},{"location":"scripts/javascript/objects/context/","title":"Context","text":"<p>When the script runs, the context object provides the context. The usage is as follows.</p> <p>currentTable</p> <p>Returns the name of the currently selected table.</p> <pre><code>base.context.currentTable\n</code></pre> <p>Example</p> <pre><code>const name = base.context.currentTable\noutput.text(`The name of the current table is: ${name}`)\n</code></pre> <p>currentRow</p> <p>Returns the currently selected row and returns the complete row object including <code>_id</code>, <code>_mtime</code>, <code>_ctime</code>. If no row is selected, this function returns <code>undefined</code>.</p> <pre><code>base.context.currentRow\n</code></pre> <p>Example</p> <pre><code>const row = base.context.currentRow\noutput.text(row)\n</code></pre>"},{"location":"scripts/javascript/objects/links/","title":"Links","text":""},{"location":"scripts/javascript/objects/links/#get-links","title":"Get Links","text":"<p>getLinkedRecords</p> <p>List the linked records of rows. You can get the linked records of multiple rows.</p> <pre><code>base.getLinkedRecords(table_id, link_column_key, rows)\n</code></pre> <ul> <li>table_id: the id of link table</li> <li>link_column_key: the column key of the link column of link table ( not link_id )</li> <li>rows: a list, each item of the which contains a row info including row_id, offset (defualt by 0) and limit (default by 10) of link table</li> </ul> <p>Example</p> <pre><code>base.getLinkedRecords('0000', '89o4', [\n{'row_id': 'FzNqJxVUT8KrRjewBkPp8Q', 'limit': 2, 'offset': 0},\n{'row_id': 'Jmnrkn6TQdyRg1KmOM4zZg', 'limit': 20}\n])\n\n// a key-value data structure returned as below\n// key: row_id of link table\n// value: a list which includes the row info of linked table\n{\n'FzNqJxVUT8KrRjewBkPp8Q': [\n    {'row_id': 'LocPgVvsRm6bmnzjFDP9bA', 'display_value': '1'},\n    {'row_id': 'OA6x7CYoRuyc2pT52Znfmw', 'display_value': '3'},\n    ...\n],\n'Jmnrkn6TQdyRg1KmOM4zZg': [\n    {'row_id': 'LocPgVvsRm6bmnzjFDP9bA', 'display_value': '1'},\n    {'row_id': 'OA6x7CYoRuyc2pT52Znfmw', 'display_value': '3'},\n    ...\n]\n}\n</code></pre>"},{"location":"scripts/javascript/objects/links/#get-link-id","title":"Get Link ID","text":"<p>getColumnLinkId</p> <p>Get the link id by column name.</p> <pre><code>base.getColumnLinkId(tableName, columnName)\n</code></pre> <p>Example</p> <pre><code>base.getColumnLinkId('Table1', 'Record')\n</code></pre>"},{"location":"scripts/javascript/objects/links/#add-links","title":"Add Links","text":"<p>addLink</p> <p>Add link, link other table records. Get more information about linking columns from the SeaTable API Reference.</p> <pre><code>base.addLink(linkId, tableName, linkedTableName, rowId, linkedRowId)\n</code></pre> <p>Example</p> <pre><code>base.addLink('5WeC', 'Table1', 'Table2', 'CGtoJB1oQM60RiKT-c5J-g', 'PALm2wPKTCy-jdJNv_UWaQ')\n</code></pre>"},{"location":"scripts/javascript/objects/links/#remove-links","title":"Remove Links","text":"<p>removeLink</p> <p>Delete the link row.</p> <pre><code>base.removeLink(linkId, tableName, linkedTableName, rowId, linkedRowId)\n</code></pre> <p>Example</p> <pre><code>base.removeLink('5WeC', 'Table1', 'Table2', 'CGtoJB1oQM60RiKT-c5J-g', 'PALm2wPKTCy-jdJNv_UWaQ')\n</code></pre>"},{"location":"scripts/javascript/objects/links/#update-links","title":"Update Links","text":"<p>updateLinks</p> <p>Remove all existing row links and add new links.</p> <pre><code>base.updateLinks(linkId, tableName, linkedTableName, rowId, updatedlinkedRowIds)\n</code></pre> <p>Example</p> <pre><code>const rows = base.getRows('contact', 'Default_view');\n// Update row links to [rows[0]._id, rows[1]._id, rows[2]._id, rows[3]._id]\nbase.updateLinks('5WeC', 'Table1', 'Table2', 'CGtoJB1oQM60RiKT-c5J-g', [rows[0]._id, rows[1]._id, rows[2]._id, rows[3]._id])\n</code></pre> <p>batchUpdateLinks</p> <p>Batch update infos of link-type columns</p> <pre><code>base.batchUpdateLinks(link_id, table_id, other_table_id, row_id_list, other_rows_ids_map)\n</code></pre>"},{"location":"scripts/javascript/objects/output/","title":"Output","text":"<p>Output object supports output strings in text or Markdown format.</p> <p>text</p> <p>Prints the content of the passed variable as normal text. Code Syntax is ignored and just printed.</p> <pre><code>output.text(anything: String/Object/Array)\n</code></pre> <p>Example</p> <pre><code>const table = base.getActiveTable();\noutput.text(table.name);\n</code></pre> <p>markdown</p> <p>Prints the content of the passed variable. Markdown formating is used to style the output.</p> <pre><code>output.markdown(anything: String/Object/Array)\n</code></pre> <p>Example</p> <pre><code>const table = base.getActiveTable();\noutput.markdown(`# This is a headline and prints the name of the table: ${table.name}`);\n</code></pre>"},{"location":"scripts/javascript/objects/rows/","title":"Rows","text":"<p>Interact with the rows of a SeaTable base.</p>"},{"location":"scripts/javascript/objects/rows/#get-rows","title":"Get rows","text":"<p>getRows</p> <p>Get all the rows of the view and return an array.</p> <pre><code>base.getRows(table: Object/String, view: Object/String);\n</code></pre> <p>Examples</p> <pre><code>const table = base.getTableByName('Table1');\nconst view = base.getViewByName(table, 'view1');\nconst rows = base.getRows(table, view);\n</code></pre> <pre><code>const rows = base.getRows('Table1', 'view1');\n</code></pre> <p>query</p> <p>Use sql to query a base. SQL-Query is the most powerful function to the data from a base. Most SQL-syntax is support.</p> <pre><code>await base.query(sql)\n</code></pre> <p>Example: Get everything with a wildcard</p> <pre><code>const data = await base.query('select * from Bill')\noutput.text(data) // (1)!\n</code></pre> <ol> <li>Returns for example the following:     <pre><code>[\n    {\"name\":\"Bob\",\"price\":\"300\",\"year\":\"2021\"},\n    {\"name\":\"Bob\",\"price\":\"300\",\"year\":\"2019\"},\n    {\"name\":\"Tom\",\"price\":\"100\",\"year\":\"2019\"},\n    {\"name\":\"Tom\",\"price\":\"100\",\"year\":\"2020\"},\n    {\"name\":\"Tom\",\"price\":\"200\",\"year\":\"2021\"},\n    {\"name\":\"Jane\",\"price\":\"200\",\"year\":\"2020\"},\n    {\"name\":\"Jane\",\"price\":\"200\",\"year\":\"2021\"}\n]\n</code></pre></li> </ol> <p>Example: WHERE</p> <pre><code>const data = await base.query('select name, price from Bill where year = 2021')\noutput.text(data) // (1)!\n\nconst data = await base.query('select name, price from Bill where name = \"Bob\"')\noutput.text(data) // (2)!\n</code></pre> <ol> <li>Returns for example the following:     <pre><code>[\n    {\"name\":\"Bob\",\"price\":\"300\"},\n    {\"name\":\"Tom\",\"price\":\"200\"},\n    {\"name\":\"Jane\",\"price\":\"200\"}\n]\n</code></pre></li> <li>Returns for example the following:     <pre><code>[\n    {\"name\":\"Bob\",\"price\":\"300\",\"year\":\"2021\"},\n    {\"name\":\"Bob\",\"price\":\"300\",\"year\":\"2019\"}\n]\n</code></pre></li> </ol> <p>Example: GROUP BY</p> <pre><code>const data = await base.query('select name, sum(price) from Bill group by name')\noutput.text(data) // (1)!\n</code></pre> <ol> <li>Returns for example the following:     <pre><code>[\n    {'SUM(price)': 600, 'name': 'Bob'},\n    {'SUM(price)': 400, 'name': 'Tom'},\n    {'SUM(price)': 400, 'name': 'Jane'}\n]\n</code></pre></li> </ol> <p>Example: DISTINCT</p> <pre><code>const data = await base.query('select distinct name from Bill')\noutput.text(data) // (1)!\n</code></pre> <ol> <li>Returns for example the following:     <pre><code>[\n    {'SUM(price)': 600, 'name': 'Bob'},\n    {'SUM(price)': 400, 'name': 'Tom'},\n    {'SUM(price)': 400, 'name': 'Jane'}\n]\n</code></pre></li> </ol> <p>getGroupedRows</p> <p>Get rows in the grouped view.</p> <pre><code>base.getGroupedRows(table: Object/String, view: Object/String);\n</code></pre> <p>Example</p> <pre><code>const table = base.getTableByName('Table1');\nconst view = base.getViewByName(table, 'GroupedView');\nconst groupViewRows = base.getGroupedRows(table, view);\n</code></pre> <pre><code>const groupViewRows = base.getGroupedRows('Table1', 'GroupedView');\n</code></pre> <p>getRow / getRowById (deprecated)</p> <p>Get a <code>row</code> via its <code>id</code> and return a row object.</p> <pre><code>base.getRow(table: Object/String, rowId: String);\n</code></pre> <p>Examples</p> <pre><code>const table = base.getTableByName('Table1');\nconst row = base.getRow(table, \"M_lSEOYYTeuKTaHCEOL7nw\");\n</code></pre> <pre><code>const row = base.getRow('Table1', \"M_lSEOYYTeuKTaHCEOL7nw\");\n</code></pre>"},{"location":"scripts/javascript/objects/rows/#delete-row","title":"Delete row","text":"<p>deleteRow / deleteRowById (deprecated)</p> <p>Delete a <code>row</code> in a table by its <code>id</code>.</p> <pre><code>base.deleteRow(table: Object/String, rowId: String);\n</code></pre> <p>Examples</p> <pre><code>const table = base.getTableByName('Table1');\nbase.deleteRow(table, 'M_lSEOYYTeuKTaHCEOL7nw');\n</code></pre> <pre><code>base.deleteRow('Table1', 'M_lSEOYYTeuKTaHCEOL7nw');\n</code></pre>"},{"location":"scripts/javascript/objects/rows/#add-row","title":"Add row","text":"<p>appendRow / addRow(deprecated)</p> <p>Add a row to a table.</p> <pre><code>base.appendRow(table: Object/String, rowData: Object, viewName?: String)\n</code></pre> <p>Examples</p> <pre><code>const table = base.getTableByName('Table1');\nbase.appendRow(table, {'Name': 'Alex', 'Age': '18'});\nbase.appendRow(table, {'Name': 'Alex', 'Age': '18'}, 'Default View');\n</code></pre> <pre><code>base.addRow('Table1', {'Name': 'Alex', 'Age': '18'});\nbase.addRow('Table1', {'Name': 'Alex', 'Age': '18'}, 'Default View');\n</code></pre>"},{"location":"scripts/javascript/objects/rows/#update-rows","title":"Update row(s)","text":"<p>updateRow / modifyRow(deprecated)</p> <p>Modify a row in the table.</p> <pre><code>base.updateRow(table: Object/String, row: Object/string, updateRowData: Object);\n</code></pre> <p>Examples</p> <pre><code>const table = base.getTableByName('Table1');\nconst row = base.getRowById(table, \"M_lSEOYYTeuKTaHCEOL7nw\");\nbase.updateRow(table, row, {'Name': 'new name', 'number': 100});\n</code></pre> <pre><code>base.updateRow('Table1', 'U_eTV7mDSmSd-K2P535Wzw', {'Name': 'new name', 'number': 100})\n</code></pre> <p>modifyRows</p> <p>Modify multiple rows in the table at once.</p> <pre><code>base.modifyRow(table: Object/String, rows: Array, updatedRows: Array);\n</code></pre> <p>Example</p> <pre><code>const table = base.getTableByName('Table1');\nconst rows = base.getRows('Table1', 'Default view');\nconst selectedColumnName = 'Name';\nconst selectedRows = [], updatedRows = [];\n\nrows.forEach((row) =&gt; {\nif (row[columnName] === 'name') {\n    selectedRows.push(row);\n    updatedRows.push({columnName: 'name1'});\n}\n});\nbase.modifyRow(table, selectedRows, updatedRows);\n</code></pre>"},{"location":"scripts/javascript/objects/rows/#filter","title":"Filter","text":"<p><code>base.filter</code> allows to pass a conditional statement. It filters the rows that meet the conditions in the table, and returns a querySet object.</p> <p>filter</p> <pre><code>base.filter(tableName, viewName, filterExpression)\n</code></pre> <p>Example</p> <pre><code>// Filter out rows whose number column is equal to 5, and return a querySet object\nconst querySet = base.filter('Table1', 'Default', 'number = 5');\n</code></pre>"},{"location":"scripts/javascript/objects/rows/#filter-expressions","title":"Filter Expressions","text":"<p>filter expressions</p> <p>The table query will become simpler and more efficiency by using the sql-like statements as a paramter in <code>base.filter()</code> function. In different column types, there are a little differences in the query method and the format of input statement. These are the available query methods:</p> <ul> <li>greater-less query:  &gt;\uff0c &gt;\uff0c =\uff0c \\&lt;\uff0c \\&lt;=</li> <li>equal-unequal query:  =,  \\&lt;&gt;</li> <li>computation: +, -, *, /, ^, %</li> </ul> <p>Here is an example based on the code <code>queryset = base.filter(\"Table1\", \"age&gt;18\")</code></p> <ul> <li>age: column name</li> <li>&gt;: operator</li> <li>18: parameter</li> </ul> Data structure Column type Format of greater-less query Format of equal-unequal query computation String Text, Long Text, URL,Email, Single Select Unsupported String Unsupported List Multiple Select Unsupported String Unsupported Number Number int, float int, float, and empty string \"\" Supported Date Date, Created time,  Last modified time Patterns: YYYY-MM-DD, YYYY-MM-DD hh:mm, YYYY-MM-DD hh:mm:ss Same patterns as greater-less query Unsupported Boolean Checkbox Unsupported true, false and empty string \"\", (case-insensitive) Unsupported <p>Here are more examples of the different filter expressions pending of the column type.</p> <p>String-based Column</p> <p>Column types include Text, Long Text, URL, Email, Checkbox.</p> <pre><code># 1. equal-unequal query\nbase.filter('Table1', 'view_name', \"column_name=hello world\")\nbase.filter('Table1', 'view_name', \"column_name!=''\")\n</code></pre> <p>List-based Column</p> <p>Column types include Multiple Select</p> <pre><code># equal-unequal query\nbase.filter('Table1','view_name', \"column_name=A and column_name=B\") # Find the rows which contains both 'A' and 'B'\n</code></pre> <p>Number-based Column</p> <ol> <li>Column types include Number</li> </ol> <pre><code># 1. greater-less query\nbase.filter('Table1', 'view_name', \"column_name&gt;18\")\nbase.filter('Table1', 'view_name', \"column_name&gt;-10 and column_name&lt;=0\")\n\n# 2. equal-unequal query\nbase.filter('Table1', 'view_name',\"column_name&lt;&gt;20\")\nbase.filter('Table1', 'view_name', \"column_name=0\")\nbase.filter('Table1', 'view_name',\"column_name=''\")\n</code></pre> <ol> <li>Computation</li> </ol> <pre><code>base.filter('Table1', 'view_name', \"column_name+3&gt;18\")\nbase.filter('Table1', 'view_name', \"column_name*2=18\")\nbase.filter('Table1', 'view_name', \"column_name-2=18\")\nbase.filter('Table1', 'view_name', \"column_name/2=18\")\nbase.filter('Table1', 'view_name', \"column_name^2=18\")\nbase.filter('Table1', 'view_name', \"column_name%2=1\")\n</code></pre> <p>Date-based Column</p> <p>Column types include Date, Created time, Last modified time</p> <pre><code># 1. greater-less query\nbase.filter('Table1', 'view_name', \"column_name&gt;'2020-1-30'\")\nbase.filter('Table1', 'view_name', \"column_name&gt;='2019-1-1 5:30' and column_name&lt;='2019-5-1 6:00'\")\n\n# 2. equal-unequal query\nbase.filter('Table1', 'view_name', \"column_name='2020-1-1 10:59:59'\")\nbase.filter('Table1', 'view_name', \"column_name!=''\")\n</code></pre> <p>Note that please use the quotes \"\" when making the date-time query</p> <p>Boolean-based Column</p> <p>Column types include Checkbox</p> <pre><code># equal-unequal query\nbase.filter('Table1', 'view_name','column_name=False') # Same as base.filter('Table1', \"column_name=''\")\nbase.filter('Table1', 'view_name', \"column_name=True\")\n</code></pre>"},{"location":"scripts/javascript/objects/rows/#filter-queries","title":"Filter Queries","text":"<p>The return value of the <code>base.filter</code> function, this object provides some methods to simplify the operation of the filtered data</p> <p>filter</p> <p>Pass a conditional statement, filter out the rows that meet the conditions in the table, and return a querySet object.</p> <pre><code>base.filter(table: Object/String, ??, condition: ??)\n</code></pre> <p>Example</p> <pre><code>// Filter out rows whose number column is equal to 5, and return a querySet object\nconst querySet = base.filter('Table1', 'Default', 'number = 5');\n</code></pre> <p>all</p> <p>Returns all filtered data in the form of a list</p> <pre><code>querySet.all(linkId, tableName, linkedTableName, rowId, updatedlinkedRowIds)\n</code></pre> <p>Example</p> <pre><code>const list = querySet.all();\n</code></pre> <p>count</p> <p>Returns the number of filtered rows</p> <p>Example</p> <pre><code>const count = querySet.count();\n</code></pre> <p>last</p> <p>Return the last filtered data</p> <p>Example</p> <pre><code>const row = querySet.last();\n</code></pre> <p>first</p> <p>Return the first filtered data</p> <p>Example</p> <pre><code>const row = querySet.first();\n</code></pre> <p>delete</p> <p>Delete all filtered rows and return the number of successfully deleted</p> <p>Example</p> <pre><code>const count = querySet.delete();\n</code></pre> <p>update</p> <p>Modify the row data and return the updated data</p> <p>Example</p> <pre><code>// Modify the contents of the Name column of all filtered rows to xxxx\nconst rows = querySet.update({Name: 'xxxx'});\n</code></pre> <p>filter</p> <p>Further filtering, return a querySet object</p> <p>Example</p> <pre><code>// Filter out the rows with the value of Tom in the Name column of the querySe\nconst querySet1 = querySet.filter('Name = \"Tom\"');\n</code></pre> <p>get</p> <p>Get a piece of data in the querySet that meets the conditions, and return a row</p> <p>Example</p> <pre><code>// Get the first data of Tom in the Name column of the querySet\nconst row = querySet.get('Name = \"Tom\"');\n</code></pre>"},{"location":"scripts/javascript/objects/tables/","title":"Tables","text":"<p>All available functions to interact with the tables of a SeaTable base.</p>"},{"location":"scripts/javascript/objects/tables/#get-tables","title":"Get Table(s)","text":"<p>getActiveTable</p> <p>Get the currently selected table and return a table object.</p> <pre><code>base.getActiveTable();\n</code></pre> <p>Example <pre><code>const table = base.getActiveTable();\noutput.text(`The name of the active table is: ${table.name}`);\n</code></pre></p> <p>getTables</p> <p>Get all tables of this base as <code>json</code> object with all rows and metadata.</p> <pre><code>base.getTables();\n</code></pre> <p>Example <pre><code>const tables = base.getTables();\noutput.text(tables);\n</code></pre></p> <p>getTableByName</p> <p>Get a table object by its name. The object contains all rows and metadata. <pre><code>base.getTableByName(tableName: String);\n</code></pre></p> <p>Example <pre><code>const table = base.getTableByName('Table1');\noutput.text(`The id of the table is: ${table._id}`);\n</code></pre></p>"},{"location":"scripts/javascript/objects/tables/#add-table","title":"Add Table","text":"<p>addTable</p> <p>Add a new table to this base. The table should not exist already in your base.</p> <pre><code>base.addTable(tableName: String);\n</code></pre> <p>Example <pre><code>base.addTable('New table');\noutput.text(\"Wow, I just added a new table to this base.\")\n</code></pre></p>"},{"location":"scripts/javascript/objects/tables/#rename-table","title":"Rename Table","text":"<p>renameTable</p> <p>Rename an existing table.</p> <pre><code>base.renameTable(oldName: String, newName: String);\n</code></pre> <p>Example <pre><code>const old_name = \"Table1\";\nconst new_name = \"Projects 2023\";\nbase.renameTable(old_name, new_name);\noutput.text(`This base ${old_name} got a new name: ${new_name}`);\n</code></pre></p>"},{"location":"scripts/javascript/objects/tables/#delete-table","title":"Delete Table","text":"<p>deleteTable</p> <p>Delete a table from the base. By the way, the table can be restored from the logs.</p> <pre><code>base.deleteTable(tableName: String);\n</code></pre> <p>Example <pre><code>base.deleteTable('Old table');\n</code></pre></p>"},{"location":"scripts/javascript/objects/utilities/","title":"Utility functions","text":"<p>Utility functions help you to work with data in SeaTable.</p>"},{"location":"scripts/javascript/objects/utilities/#date-and-time","title":"Date and Time","text":"<p>formatDate</p> <p>Format date to 'YYYY-MM-DD' to be used in a date column.</p> <pre><code>base.utils.formatDate(date: date object)\n</code></pre> <p>Example <pre><code>let date = new Date();\nlet formatDate = base.utils.formatDate(date);\noutput.text(formatDate);\n</code></pre></p> <p>formatDateWithMinutes</p> <p>Format date to 'YYYY-MM-DD HH:mm' to be used in a date column..</p> <pre><code>base.utils.formatDateWithMinutes(date: date object)\n</code></pre> <p>Example <pre><code>let date = new Date();\nlet formatDate = base.utils.formatDateWithMinutes(date);\noutput.text(formatDate);\n</code></pre></p>"},{"location":"scripts/javascript/objects/utilities/#lookup-and-query","title":"Lookup and Query","text":"<p>lookupAndCopy</p> <p>Similar to the vlookup function in Excel. Find a matching row in the source table for each row of the target table, and then copy the data of the specified cell of the matching row to the specified cell of the target row.</p> Name Email Hulk greenbigboy@stark-industries.movie Tony ironman <p>The target table only has the user names but we want to copy the email address from the source table to the target table, then this function can be used.</p> Name Email Hulk Tony <pre><code>base.utils.lookupAndCopy(targetTable, targetColumn, targetColumnToCompare, sourceTableName, sourceColumnName, sourceColumnToCompare = null);\n</code></pre> <p>Example</p> <pre><code>// Match the rows with the same content in the Name column of Table1 and Table2, copy the contents of the Email column of the row in Table1 to the Email column of the corresponding row in Table2\nbase.utils.lookupAndCopy('Table2', 'Email', 'Name', 'Table1', 'Name');\n\n// Match the rows with the same content in the Name column in Table1 and the Name1 column in Table2, and copy the contents of the Email column of the row in Table1 to the Email1 column of the corresponding row in Table2\nbase.utils.lookupAndCopy('Table2', 'Email1', 'Name1', 'Table1', 'Email', 'Name');\n</code></pre> <p>query</p> <p>Filter and summary the table data by SQL like statements.</p> <pre><code>base.utils.query(tableName: String, viewName: String, query: String);\n</code></pre> <p>Example</p> <pre><code>// Filter out the rows where the sum of the three columns 'number', 'number1', and 'number2' is greater than 5 then sum the number and number2 columns in these rows, return {number: 12, number2: 23}\nbase.utils.query('Table1', 'View_name', 'select sum(number), sum(number2) where number + number1 + number2 &gt; 5');\n</code></pre>"},{"location":"scripts/javascript/objects/views/","title":"Views","text":"<p>Functions to interact with the views of a table.</p>"},{"location":"scripts/javascript/objects/views/#get-views","title":"Get Views","text":"<p>getActiveView</p> <p>Get the current view, the method return a view object.</p> <pre><code>base.getActiveView();\n</code></pre> <p>Example <pre><code>const view  = base.getActiveView();\noutput.text(view._id);\noutput.text(view);\n</code></pre></p> <p>listViews / getViews (deprecated)</p> <p>Get all the views of the current table, and return all the views in an array</p> <pre><code>base.listViews(table: Object/String);\n</code></pre> <p>Example <pre><code>const table  = base.getTableByName('Table1');\nconst views = base.listViews(table);\noutput.text(views.length);\n</code></pre></p> <p>getViewByName</p> <p>Get a view object via its name, and return a view object.</p> <pre><code>base.getViewByName(table: Object/String, viewName: String);\n</code></pre> <p>Examples <pre><code>const table  = base.getTableByName('Table1');\nconst view = base.getViewByName(table, 'view 1');\noutput.text(view.name);\n</code></pre></p> <pre><code>const view = base.getViewByName('Table1', 'view 1');\noutput.text(view.name);\n</code></pre>"},{"location":"scripts/javascript/objects/views/#add-view","title":"Add View","text":"<p>addView</p> <p>Add a view to a table.</p> <pre><code>base.addView(table: Object/String, viewName: String);\n</code></pre> <p>Examples <pre><code>const table  = base.getTableByName('Table1');\nbase.addView(table, 'view 2');\n</code></pre></p> <pre><code>base.addView('Table1', 'view 2');\n</code></pre>"},{"location":"scripts/javascript/objects/views/#rename-view","title":"Rename View","text":"<p>renameView</p> <p>Rename a view in the table.</p> <pre><code>base.renameView(table: Object/String, currentViewName: String, nextViewName: String);\n</code></pre> <p>Examples <pre><code>const table  = base.getTableByName('Table1');\nbase.renameView(table, 'view1', 'view2');\n</code></pre></p> <pre><code>base.renameView('Table1', 'view1', 'view2');\n</code></pre>"},{"location":"scripts/javascript/objects/views/#delete-view","title":"Delete View","text":"<p>deleteView</p> <p>Delete a view.</p> <pre><code>base.deleteView(table: Object/String, viewName: String);\n</code></pre> <p>Examples <pre><code>const table  = base.getTableByName('Table1');\nbase.deleteView(table, 'view2');\n</code></pre></p> <pre><code>base.deleteView('Table1', 'view2');\n</code></pre>"},{"location":"scripts/python/authorization_python/","title":"Authorization","text":"<p>Python (in comparision to Javascript) scripts need an authentication.</p> <p>You can use two methods to obtain authorization to read and write a base.</p> <ol> <li> <p>One way is to use the api token of the base, the token can be directly generated on the web side. Read directly from context.api_token in the cloud environment.</p> </li> <li> <p>Another method is to use your username and password to initialize an <code>account</code> object, and then call the <code>account</code> interface to get a <code>base</code> object. The first method is much easier.</p> </li> </ol> <p>Protect your credentials</p> <p>Please be aware that a python script is readable for all users, who have access to this base. Therefore be careful if you store your username and password to a python script.</p>"},{"location":"scripts/python/authorization_python/#authorization-with-api-token","title":"Authorization with API-Token","text":"<pre><code>from seatable_api import Base, context\nbase = Base(context.api_token, context.server_url)\nbase.auth()\n</code></pre>"},{"location":"scripts/python/authorization_python/#authorization-with-account-object","title":"Authorization with account object","text":"<pre><code>from seatable_api import Account\naccount = Account(username, password, server_url)\naccount.auth()\nbase = account.get_base(workspace_id, base_name)\n</code></pre>"},{"location":"scripts/python/authorization_python/#authorization-expiration-handling","title":"Authorization expiration handling","text":"<p>Note, this feature works with SeaTable version 3.1+</p> <p>In some cases, the program need to run for a long time, we put the base operation code into a while or for loop. Authorization may expire during execution and cause the program to break. We provide an exception called <code>AuthExpiredError</code> that can be caught for reauthorization.</p> <pre><code>from seatable_api import Base, context\nfrom seatable_api.exception import AuthExpiredError\n\nserver_url = context.server_url or 'https://cloud.seatable.io'\napi_token = context.api_token or 'c3c75dca2c369849455a39f4436147639cf02b2d'\n\nbase = Base(api_token, server_url)\nbase.auth()\n\nwhile True:\n    try:\n        base.append_row('Table1', {\"xxx\":\"xxx\"})\n        ...\n    except AuthExpiredError:\n       base.auth()\n</code></pre>"},{"location":"scripts/python/basic_structure_python/","title":"Basic structure of Python script in SeaTable","text":"<p>Python scripts run server-side and can be set to run automatically. Python scripts therefore lend themselves for more complex data processing scenarios.</p> <p>Python scripts can be run on your local machine or uploaded to the SeaTable cloud to run. Local operation is convenient for development and debugging, and scripts can be easily integrated into larger projects.</p> <p>SeaTable uses currently Python 3.11. A defined set of third party libraries are supported. The main library to interact with SeaTable bases is seatable_api.</p>"},{"location":"scripts/python/basic_structure_python/#authentication","title":"Authentication","text":"<p>A Python script must authenticate. Within SeaTable's integrated Python editor, authentication can be done using these three lines of code at the beginning of the script:</p> <pre><code>from seatable_api import Base, context\nbase = Base(context.api_token, context.server_url)\nbase.auth()\n</code></pre> <p>Read here all details about authentication in Python scripts.</p> <p>Multiple tokens in SeaTable</p> <p>SeaTable provides multiple tokens to authenticate. But let's keep things simple! If you develop Python scripts in SeaTable, just use the context object <code>context.api_token</code> or provide a so called <code>API-Token</code> of a base.</p> <p>All details can be found in the SeaTable API Reference.</p> <p>It is even possible to develop a Python in the way that it could be executed in the cloud and local without changing the code.</p>"},{"location":"scripts/python/basic_structure_python/#available-objects-and-methods","title":"Available objects and methods","text":"<p>There are a lot of predefined objects and methods in Python. If you compare attentively JavaScript and Python, you will notice that Python has no output object. This is not necessary, because the output is either written directly into the base or printed.</p>"},{"location":"scripts/python/basic_structure_python/#lets-get-concrete","title":"Let's get concrete","text":"<p>Let's make this concrete and let us look at some basic examples.</p> <ol> <li>Jump to your seatable webinterface</li> <li>Create a new Script of the type <code>Python</code></li> <li>Copy the following code</li> <li>Run the script</li> </ol> <p>You will learn from these examples, that it is quite easy to read, output and even manipulate the data of a base inside SeaTable with the predefined objects and the corresponding methods.</p> <p>Indents are important</p> <p>Please take care of indentations! Indentation is mandatory in python to define the blocks of statements. The number of spaces must be uniform in a block of code. It is preferred to use whitespaces instead of tabs to indent in Python. If you screw the correct indentations, the scripts will not work as expected!</p> Add, update and remove a rowmore <p>This following example shows how to operate records in a table.</p> <pre><code>from seatable_api import Base, context\nbase = Base(context.api_token, context.server_url)\nbase.auth() # (1)!\n\nrows = base.list_rows(\"Table1\")\n\nrow_data = {'name': 'Tom', 'age': 18}\nbase.append_row('Table1', row_data)\nbase.update_row('Table1', 'U_eTV7mDSmSd-K2P535Wzw', row_data)\nbase.delete_row('Table1', 'U_eTV7mDSmSd-K2P535Wzw')\n</code></pre> <ol> <li>These three lines are always required to authorize against the base in SeaTable.</li> </ol> <p>...will follow soon.</p>"},{"location":"scripts/python/common_questions/","title":"Common questions (Python)","text":"How to make the script support both local and cloud run List of libraries supported in the cloud environment Install and use custom python libraries"},{"location":"scripts/python/common_questions/#how-to-make-the-script-support-both-local-and-cloud-run","title":"How to make the script support both local and cloud run","text":"<p>Flexible authorization</p> <p>When the script runs in the cloud, it will provide a context object, which contains the server URL auto generated by the system and the API token of base. If you run the script in local, you need to manually specify these two variables; the API token can be generated in the drop-down menu \"Advanced -&gt; API Token\" of the table.</p> <p>Use the following method to make the script support both local and cloud run</p> <pre><code>from seatable_api import Base, context\n\nserver_url = context.server_url or 'https://cloud.seatable.io'\napi_token = context.api_token or 'c3c75dca2c369848455a39f4436147639cf02b2d'\n\n\nbase = Base(api_token, server_url)\nbase.auth()\n</code></pre> <p>Dependencies that need to be installed to run the script local</p> <p>The script need to install <code>seatable-api</code> when run in local.</p> <pre><code>pip3 install seatable-api\n</code></pre> <p>Additional requirements are:</p> <ul> <li>Python &gt;= 3.5</li> <li>requests</li> <li>socketIO-client-nexus</li> </ul>"},{"location":"scripts/python/common_questions/#list-of-libraries-supported-in-the-cloud-environment","title":"List of libraries supported in the cloud environment","text":"<p>In the cloud environment, Python scripts actually run in a Docker container environment. The container environment has some Python libraries installed by default, which can be imported in scripts. If you need to use other libraries, you need to contact us, or your script can only be run locally.</p> <p>Python 3 standard library</p> <p>The cloud environment now use Python 3.11, which supports importing modules in the Python standard library.</p> <p>Third party libraries</p> <p>The following modules are available</p> <ul> <li>SeaTable API, seatable-api</li> <li>Date/time calculation tool library, dateutils</li> <li>http request, requests</li> <li>OpenSSL library, pyOpenSSL</li> <li>Pillow library, Pillow</li> <li>Barcode library, python-barcode</li> <li>QRcode library, qrcode</li> <li>Pandas library, pandas</li> <li>Numpy library, numpy</li> <li>SMTP library, secure-smtplib</li> </ul>"},{"location":"scripts/python/common_questions/#install-and-use-custom-python-libraries","title":"Install and use custom python libraries","text":"<ul> <li>The python libraries in SeaTable Cloud can not be changed.</li> <li>If you run your own SeaTable Server it is possible to install your own libaries.</li> </ul>"},{"location":"scripts/python/examples/","title":"Examples","text":"<p>This section contains some examples of Python Scripts. You can just copy&amp;paste them in any base in SeaTable any run them.</p>"},{"location":"scripts/python/examples/#seatable-email-sender","title":"SeaTable Email Sender","text":"<p>This Python script demonstrates sending emails via SMTP using the smtplib library and constructing MIME objects to compose rich content emails within SeaTable.</p> <p>read more </p>"},{"location":"scripts/python/examples/#seatable-barcode-image-generator","title":"SeaTable Barcode Image Generator","text":"<p>This Python script demonstrates the process of converting text slices into barcode images and storing them in an image column within SeaTable.</p> <p>read more </p>"},{"location":"scripts/python/examples/#seatable-qr-code-generator","title":"SeaTable QR Code Generator","text":"<p>This Python script is designed to generate QR codes and associate them with corresponding records in a SeaTable base. It uses the seatable_api library and qrcode module to accomplish this task.</p> <p>read more </p>"},{"location":"scripts/python/examples/#seatable-mysql-synchronization","title":"SeaTable MySQL Synchronization","text":"<p>This Python script facilitates the synchronization of data from a MySQL database to a SeaTable table.</p> <p>read more </p>"},{"location":"scripts/python/examples/#watch-stock-price","title":"Watch Stock Price","text":"<p>Integrating data from the Twelve Data API with SeaTable facilitates the updating and maintenance of current stock prices within a designated table in the SeaTable environment.</p> <p>read more </p>"},{"location":"scripts/python/examples/generate_barcode/","title":"Generate Barcode","text":"<p>This Python script demonstrates the process of converting text slices into barcode images and storing them in an image column within SeaTable.</p>"},{"location":"scripts/python/examples/generate_barcode/#functionality","title":"Functionality","text":"<ul> <li>Setup and Authentication: Utilizes SeaTable API credentials for authentication.</li> <li>Barcode Generation: Processes rows in a specified SeaTable table, extracting text from a designated column (TEXT_COL) to generate barcode images.</li> <li>Association with Records: Associates generated barcode images with the respective records by updating an image column (BARCODE_IMAGE_COL) in the SeaTable table.</li> <li>Handling Existing Images: Skips rows if a barcode image already exists for efficient processing.</li> <li>Customization Options: Provides customizable parameters such as module width, height, padding, font size, and text-barcode distance for barcode image generation.</li> <li>Error Handling: Includes exception handling to manage errors encountered during the barcode image generation process.</li> </ul>"},{"location":"scripts/python/examples/generate_barcode/#process-overview","title":"Process Overview","text":"<ol> <li>Iterates through rows in a specified SeaTable table.</li> <li>Converts text data from a designated column into barcode images using the specified barcode type (BARCODE_TYPE).</li> <li>Saves the generated barcode images temporarily.</li> <li>Uploads the generated barcode images to SeaTable and associates them with corresponding records.</li> <li>Removes temporary barcode image files after successful upload.</li> <li>This script offers an automated way to generate barcode images from text data in a SeaTable table, enhancing data visualization and association within the SeaTable platform.</li> </ol>"},{"location":"scripts/python/examples/generate_barcode/#code","title":"Code","text":"<pre><code>import os\nimport time\nimport barcode\nfrom barcode.writer import ImageWriter\nfrom seatable_api import Base, context\n\"\"\"\nThe python script shows how to transfer a slice of text into a barcode image and save it into\nthe image column\n\"\"\"\n\napi_token = context.api_token or \"859ad340d9a2b11b067c11f43078992e14853af5\"\nserver_url = context.server_url or \"https://cloud.seatable.io\"\n\nTEXT_COL = \"Message\"  # column which is expected to be transferred into barcode\nBARCODE_IMAGE_COL = \"BarcodeImage\"\nTABLE_NAME = 'Table1'\nBARCODE_TYPE = 'code128'\n\nCUSTOM_OPTIONS = {\n    \"module_width\": 0.2,       # width of single stripe of barcode, mm\n    \"module_height\": 15.0,     # height of barcode, mm\n    \"quiet_zone\": 6.5,         # padding size of first and last stripe to the image, mm\n    \"font_size\": 10,           # font size of the text below the barcode,pt\n    \"text_distance\": 5.0,      # distance between the text and the barcode, mm\n}\n\n\nCODE = barcode.get_barcode_class(BARCODE_TYPE)\nbase = Base(api_token, server_url)\nbase.auth()\n\ndef get_time_stamp():\n    return str(int(time.time()*100000))\n\nfor row in base.list_rows(TABLE_NAME):\n    # continue if the image is already shown up here\n    if row.get(BARCODE_IMAGE_COL):\n        continue\n\n    try:\n        row_id = row.get('_id')\n        msg = str(row.get(TEXT_COL))\n\n        # create a barcode object\n        code_img = CODE(msg, writer=ImageWriter())\n        save_name = \"%s_%s\" % (row_id, get_time_stamp())\n\n        # temporarily saved as an image\n        file_name = code_img.save(\"/tmp/%s\" % save_name, options=CUSTOM_OPTIONS)\n\n        # upload the barcode image to the base\n        info_dict = base.upload_local_file(file_name, name=None, file_type='image', replace=True)\n        img_url = info_dict.get('url')\n        row[BARCODE_IMAGE_COL] = [img_url]\n        base.update_row('Table1', row_id, row)\n\n        # remove the image file which is saved temporarily\n        os.remove(file_name)\n    except Exception as error:\n        print(\"error occured during barcode generate\", error)\n        continue\n</code></pre>"},{"location":"scripts/python/examples/generate_qrcode/","title":"Generate QR-Code","text":"<p>This Python script is designed to generate QR codes and associate them with corresponding records in a SeaTable base. It uses the <code>seatable_api</code> library and <code>qrcode</code> module to accomplish this task.</p>"},{"location":"scripts/python/examples/generate_qrcode/#functionality","title":"Functionality","text":"<ul> <li>Setup and Authentication: Utilizes SeaTable API credentials for authentication.</li> <li>QR Code Generation: Processes rows in a specified SeaTable table, extracting text from a designated column (STRING_COLUMN) to generate QR codes.</li> <li>Association with Records: Associates generated QR code images with the respective records by updating an image column (IMAGE_COLUMN) in the SeaTable table.</li> <li>Handling Existing Images: Allows the option to skip rows if an image already exists or overwrite existing barcode images based on the OVERWRITE flag.</li> <li>Error Handling: Provides error handling to manage exceptions during the QR code generation process.</li> </ul>"},{"location":"scripts/python/examples/generate_qrcode/#process-overview","title":"Process Overview","text":"<ol> <li>Iterates through rows in a specified SeaTable table.</li> <li>Generates QR codes based on the text content in the designated column.</li> <li>Saves the QR code images temporarily.</li> <li>Uploads the generated images to SeaTable and associates them with corresponding records.</li> <li>Removes temporary image files after successful upload.</li> </ol> <p>This script offers an automated way to generate QR codes from text data in a SeaTable table, enhancing data visualization and association within the SeaTable platform.</p>"},{"location":"scripts/python/examples/generate_qrcode/#code","title":"Code","text":"<pre><code>import os\nimport time\nimport qrcode\nfrom seatable_api import Base, context\n\napi_token = context.api_token or \"...\"\nserver_url = context.server_url or \"https://cloud.seatable.io\"\n\nSTRING_COLUMN = \"String\"  # text column which is expected to be transferred into qrcode\nIMAGE_COLUMN = \"Image\"\nTABLE_NAME = \"Table1\"\nOVERWRITE = True  # set to True to overwrite existing barcode images\n\nbase = Base(api_token, server_url)\nbase.auth()\n\nqr = qrcode.QRCode(\n    version=2,\n    error_correction=qrcode.constants.ERROR_CORRECT_L,\n    box_size=40,\n    border=8\n)\n\ndef get_time_stamp():\n    return str(int(time.time() * 100000))\n\ndef main():\n  for row in base.list_rows(TABLE_NAME):\n    if not OVERWRITE and row.get(IMAGE_COLUMN):\n      print(\"Skipping row. Image already exists.\")\n      continue\n\n    try:\n      row_id = row.get('_id')\n      message = row.get(STRING_COLUMN)\n\n      if not message:\n        print(\"Skipping row. Empty message.\")\n        continue\n\n      # clear, add data and make an qrcode object\n      qr.clear()\n      qr.add_data(str(message))\n      qr.make()\n\n      img = qr.make_image(fill_color=\"black\", back_color=\"white\")\n\n      save_name = f\"{row_id}_{get_time_stamp()}\"\n      img.save(f\"/tmp/{save_name}.png\")\n\n      # temporarily saved as an image\n      info_dict = base.upload_local_file(f\"/tmp/{save_name}.png\", name=None, file_type='image', replace=True)\n      img_url = info_dict.get('url')\n      row[IMAGE_COLUMN] = [img_url]\n      base.update_row(TABLE_NAME, row_id, row)\n\n      # remove the image file which is saved temporarily\n      os.remove(f\"/tmp/{save_name}.png\")\n    except Exception as exception:\n      print(\"Error occurred during Image generation:\", exception)\n      continue\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"scripts/python/examples/send_email/","title":"Send E-mails","text":"<p>This Python script demonstrates sending emails via SMTP using the smtplib library and constructing MIME objects to compose rich content emails within SeaTable.</p>"},{"location":"scripts/python/examples/send_email/#functionality","title":"Functionality","text":"<ul> <li>Setup and Authentication: Uses SMTP parameters and SeaTable API credentials for authentication and sending emails.</li> <li>Recipient Selection: Retrieves email addresses from a SeaTable table's column (Contacts -&gt; Email) to serve as multiple recipients.</li> <li> <p>Email Composition:</p> <ul> <li>Constructs an email with a specified subject, sender, and HTML content body for the email.</li> <li>Allows for attaching files stored in SeaTable records to the email.</li> </ul> </li> </ul>"},{"location":"scripts/python/examples/send_email/#process-overview","title":"Process Overview","text":"<ol> <li>Retrieves recipient email addresses from a designated SeaTable table column (Contacts -&gt; Email).</li> <li>Composes an email using HTML content to create a rich-text message body.</li> <li>Attaches a file from SeaTable to the email by fetching its download link using the SeaTable API and attaching it to the email.</li> </ol> <p>This script offers an automated way to send emails with rich content and attachments using data stored within SeaTable, enabling streamlined communication and file sharing within the SeaTable environment.</p>"},{"location":"scripts/python/examples/send_email/#code","title":"Code","text":"<pre><code>import smtplib\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nfrom email.mime.image import MIMEImage\nfrom email.header import Header\nfrom urllib import parse\nimport requests\nfrom seatable_api import Base, context\n\n# SeaTable API authentication\nbase = Base(context.api_token, context.server_url)\nbase.auth()\n\n# SMTP server configurations for sending emails\nsmtpserver = 'smtp.163.com'\nusername = '13069744444@163.com'\npassword = 'topsecret'\nsender = '13069744444@163.com'\n\n# Option a) define the recipient email address in this script\nreceivers = ['1223408888@qq.com']\n\n# Option b) Retrieving recipient email addresses from the 'Contacts' table in SeaTable\nreceiver_rows = base.list_rows('Contacts')\nreceivers = [row['Email'] for row in receiver_rows if row.get('Email')]\n\n# Email subject\nsubject = 'SeaTable Send email'\n\n# Constructing the email message\nmsg = MIMEMultipart('mixed')\nmsg['Subject'] = subject\nmsg['From'] = '13069744444@163.com &lt;13069744444@163.com&gt;'\nmsg['To'] = \";\".join(receivers)\n\n# Option a) plain text message\n# text = \"Hi!\\nHow are you?\\nHere is the link you wanted:\\nhttp://www.google.com\"\n# text_plain = MIMEText(text,'plain', 'utf-8')\n# msg.attach(text_plain)\n\n# Option b) HTML content for the email body\nhtml = \"\"\"\n&lt;html&gt;\n  &lt;head&gt;&lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hi!&lt;br&gt;\n       This is a sample of messages\n       from SeaTable\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\"\"\"\ntext_html = MIMEText(html,'html', 'utf-8')\nmsg.attach(text_html)\n\n# Attaching a file from SeaTable to the email\nrows = base.list_rows('Table3')\nfilename = rows[0]['File'][0]['name']\nfile_url = rows[0]['File'][0]['url']\npath = file_url[file_url.find('/files/'):]\ndownload_link = base.get_file_download_link(parse.unquote(path))\n\ntry:\n    response = requests.get(download_link)\n    if response.status_code != 200:\n        print('Failed to download image, status code: ', response.status_code)\n        exit(1)\nexcept Exception as e:\n    print(e)\n    exit(1)\n\n# Attaching the file to the email\ntext_att = MIMEText(response.content, 'base64', 'utf-8')\ntext_att[\"Content-Type\"] = 'application/octet-stream'\ntext_att[\"Content-Disposition\"] = 'attachment;filename*=UTF-8\\'\\'' + parse.quote(filename)\n\nmsg.attach(text_att)\n\n# Sending the email using SMTP\nsmtp = smtplib.SMTP()\nsmtp.connect(smtpserver)\nsmtp.login(username, password)\nsmtp.sendmail(sender, receivers, msg.as_string())\nsmtp.quit()\n</code></pre>"},{"location":"scripts/python/examples/sync_mysql/","title":"SeaTable MySQL Synchronization","text":"<p>This Python script facilitates the synchronization of data from a MySQL database to a SeaTable table.</p>"},{"location":"scripts/python/examples/sync_mysql/#functionality","title":"Functionality","text":"<ul> <li>Configuration Setup: Defines configurations for SeaTable, specifying server URL and API token, as well as MySQL database connection details.</li> <li> <p>Data Sync Process:</p> <ul> <li>Establishes a connection to the SeaTable base and authenticates using the provided API token and server URL.</li> <li>Retrieves existing rows from a designated SeaTable table (Table1) and extracts specific column (Name) data.</li> <li>Connects to the MySQL database (seatable) and fetches data from the order table.</li> <li>Compares MySQL data with SeaTable data to identify new records.</li> <li>Appends new records found in MySQL but not present in SeaTable to ensure synchronization.</li> </ul> </li> </ul>"},{"location":"scripts/python/examples/sync_mysql/#process-overview","title":"Process Overview","text":"<ol> <li>Initializes connections to both SeaTable and MySQL databases.</li> <li>Fetches existing rows and column data from the designated SeaTable table (Table1).</li> <li>Retrieves data from the MySQL order table.</li> <li>Compares MySQL data with SeaTable data to identify new records by matching the 'name' field.</li> <li>Adds new records from MySQL to SeaTable (Table1) for synchronization.</li> </ol> <p>This script enables the automated synchronization of data between a MySQL database and a SeaTable table, ensuring consistency and updating records seamlessly.</p>"},{"location":"scripts/python/examples/sync_mysql/#code","title":"Code","text":"<pre><code>import pymysql\nfrom seatable_api import Base, context\n\n# Base config\nSERVER_URL = context.server_url or 'http://127.0.0.1:8000'\nAPI_TOKEN = context.api_token or '...'\n\n# Table config\nTABLE_NAME = 'Table1'\nNAME_COLUMN = 'Name'\n\n# MySQL config\nHOST = 'localhost'\nUSER = ''\nPASSWORD = ''\nDB = 'seatable'\n\ndef sync_mysql():\n    \"\"\"Sync database into the table\n    \"\"\"\n    # base initiated and authed\n    base = Base(API_TOKEN, SERVER_URL)\n    base.auth()\n\n    rows = base.list_rows(TABLE_NAME)\n    row_keys = [row.get(NAME_COLUMN) for row in rows]\n\n    # mysql data\n    connection = pymysql.connect(host=HOST, user=USER, password=PASSWORD, db=DB)\n\n    with connection.cursor(pymysql.cursors.DictCursor) as cursor:\n        sql = \"SELECT * FROM order\"\n        cursor.execute(sql)\n        mysql_data = cursor.fetchall()\n\n    # sync\n    for item in mysql_data:\n        if item.get('name') not in row_keys:\n            row_data = {\n                'Name': item.get('name'),\n            }\n            base.append_row(TABLE_NAME, row_data)\n\n\nif __name__ == '__main__':\n    sync_mysql()\n</code></pre>"},{"location":"scripts/python/examples/update_stock_price/","title":"Stock Price Update with Twelve Data API","text":"<p>This Python script integrates data from the Twelve Data API with SeaTable to update and maintain current stock prices within a designated SeaTable table.</p>"},{"location":"scripts/python/examples/update_stock_price/#functionality","title":"Functionality","text":"<ul> <li>Configuration Setup: Defines configurations for the Twelve Data API and SeaTable server, specifying API keys and table/column details within SeaTable.</li> <li> <p>Stock Price Retrieval:</p> <ul> <li>Utilizes the Twelve Data API to retrieve the current stock prices based on stock symbols.</li> <li>Makes HTTP GET requests to the Twelve Data API to fetch stock prices using the provided API key.</li> </ul> </li> <li> <p>SeaTable Update:</p> <ul> <li>Retrieves stock symbols from a designated SeaTable table (Stock Watch).</li> <li>Updates the SeaTable table with the current stock prices fetched from the Twelve Data API, populating the designated column (Current stock price) in SeaTable.</li> <li>Displays the updated stock prices for each symbol in the console.</li> </ul> </li> </ul>"},{"location":"scripts/python/examples/update_stock_price/#process-overview","title":"Process Overview","text":"<ol> <li>Initializes configurations for the Twelve Data API and SeaTable server.</li> <li>Fetches current stock prices using the Twelve Data API based on stock symbols.</li> <li>Retrieves stock symbols from the SeaTable table (Stock Watch).</li> <li>Updates the SeaTable table with the fetched current stock prices in the designated column (Current stock price).</li> <li>Displays the updated stock prices for each symbol in the console.</li> </ol> <p>This script enables the automated update of current stock prices within a SeaTable table by leveraging data from the Twelve Data API, ensuring that stock information remains up-to-date within the SeaTable environment.</p>"},{"location":"scripts/python/examples/update_stock_price/#seatable-base-used-in-this-example","title":"SeaTable Base used in this example","text":"Symbol Current stock price AAPL $198.03 AMZN $147.40"},{"location":"scripts/python/examples/update_stock_price/#code","title":"Code","text":"<pre><code>from seatable_api import Base, context\nimport requests\n\nTWELVE_DATA_API_KEY = \"dfb122bbca6a4...\"  # Replace this with your actual API key from Twelve Data (up to 800 calls per days are free)\n\nSERVER_URL = context.server_url or \"https://cloud.seatable.io/\"\nAPI_TOKEN = context.api_token or \"...\"\n\nTABLE_WITH_STOCK_SYMBOLS = \"Stock Watch\"\nCOLUMN_WITH_STOCK_SYMBOLS = \"Symbol\"\nCOLUMN_WITH_STOCK_PRICE = \"Current stock price\"\n\n###\n# Do not change anything below this line\n###\n\n# Endpoint to fetch current stock price\ndef get_stock_price(SYMBOL):\n    url = f\"https://api.twelvedata.com/price?symbol={SYMBOL}&amp;apikey={TWELVE_DATA_API_KEY}\"\n\n    # Making the GET request to fetch the data\n    response = requests.get(url)\n\n    if response.status_code == 200:\n        output = response.json()\n        return output['price']\n    else:\n        return false\n\n# get symbols from SeaTable base and update the current stock price\ndef update_stock_price():\n    for row in base.list_rows(TABLE_WITH_STOCK_SYMBOLS):\n        current_price = get_stock_price(row['Symbol'])\n        base.update_row(TABLE_WITH_STOCK_SYMBOLS, row.get('_id'), {COLUMN_WITH_STOCK_PRICE: current_price})\n        print(f\"The current price of {row['Symbol']} is: {current_price}\")\n\nif __name__ == '__main__':\n    base = Base(API_TOKEN, SERVER_URL)\n    base.auth()\n    update_stock_price()\n    print(\"Update complete.\")\n</code></pre>"},{"location":"scripts/python/objects/","title":"Predefined Objects and Methods (Python)","text":"<p>Python scripts connects to SeaTable Base with the python library seatable-api. You can find the source code on GitHub.</p> <p>This manual list all available objects and methods that are availabe within python scripts in SeaTable.</p> <p>Need specific function?</p> <p>The Python class <code>seatable_api</code> does not yet cover all available functions of the SeaTable API. If you are missing a special function, please contact us at support@seatable.io and we will try to add the missing functions.</p> <p>For a more detailed description of the used parameters, refer to the data model at the SeaTable API Reference.</p>"},{"location":"scripts/python/objects/#authentication","title":"Authentication","text":"<p>Don't forget to authenticate</p> <p>Every python script requires an authorization. All the examples does not contain the required lines of code.</p> <pre><code>from seatable_api import Base, context\nbase = Base(context.api_token, context.server_url)\nbase.auth()\n</code></pre>"},{"location":"scripts/python/objects/#base-object","title":"Base object","text":"<p>Base represents a table in SeaTable. The <code>base</code> object provide a way to read, manipulate and output data in/from your base. The following methods are available.</p>"},{"location":"scripts/python/objects/accounts/","title":"Python Objects: Account","text":"<p>Account provides an interface to list all Workspaces, add/copy/delete Bases, and obtain access rights to a Base.</p> <p>Separate Authentication required</p> <p>Account requires a separate authentication.</p> <pre><code>from seatable_api import Account\nusername = 'xiongxxx@xxx.com'\npassword = 'xxxxxxx'\nserver_url = 'https://cloud.seatable.cn/'\naccount = Account(username, password, server_url)\naccount.auth()\n</code></pre>"},{"location":"scripts/python/objects/accounts/#list-of-account-objects","title":"List of account objects","text":"<p>List workspaces</p> <p>Get all your workspaces and its Bases.</p> <pre><code>account.list_workspaces()\n</code></pre> <p>Add a base</p> <p>Add a base to a Workspace.</p> <pre><code>account.add_base(name, workspace_id=None)\n</code></pre> <p>Example</p> <pre><code>account.add_base('new-base', 35)\n</code></pre> <p>Copy a base</p> <p>Copy a base to a workspace.</p> <pre><code>account.copy_base(src_workspace_id, base_name, dst_workspace_id)\n</code></pre> <p>Example</p> <pre><code>account.copy_base(35, 'img-file', 74)\n</code></pre> <p>Get a base</p> <p>Get a base object. Get the Base object named base_name that exists in the workspace whose id is workspace_id.</p> <pre><code>account.get_base(workspace_id, base_name)\n</code></pre> <p>Example</p> <pre><code>base = account.get_base(35, 'new-base')\n</code></pre>"},{"location":"scripts/python/objects/big_data/","title":"Big data storage","text":"<p>Insert rows into big data storage</p> <p>Batch insert rows into big data storage.</p> <pre><code>base.big_data_insert_rows(table_name, rows_data)\n</code></pre> <p>Example</p> <pre><code>rows = [\n        {'Name': \"A\"},\n        {'Name': \"B\"}\n    ]\nbase.big_data_insert_rows('Table1', rows_data=rows)\n</code></pre>"},{"location":"scripts/python/objects/columns/","title":"Column","text":"<p>Every table in a base contains columns. The following calls are available to interact with the columns of a table.</p>"},{"location":"scripts/python/objects/columns/#list-columns","title":"List columns","text":"<p>List columns</p> <p>List all rows of the table/view.</p> <pre><code>base.list_columns(table_name, view_name=None);\n</code></pre> <p>Example</p> <pre><code>base.list_columns('Table1', default)\n</code></pre> <p>Get column by name</p> <pre><code>base.get_column_by_name(table_name, colume_name)\n</code></pre> <p>Example</p> <pre><code>base.get_column_by_name('Table1', 'Name')\n</code></pre> <p>Get columns by type</p> <pre><code>base.get_columns_by_type(table_name, column_type)\n</code></pre> <p>Example</p> <pre><code>from seatable_api.constants import ColumnTypes\nbase.get_columns_by_type('Table1', ColumnTypes.TEXT)\n</code></pre>"},{"location":"scripts/python/objects/columns/#insert-column","title":"Insert column","text":"<p>Insert column</p> <p>Insert or append a column to a table.</p> <pre><code>base.insert_column(table_name, column_name, column_type, column_key=None, column_data=None)\n</code></pre> <p>Examples</p> <pre><code>base.insert_column('Table1', 'New long text column', 'long text')\n</code></pre> <pre><code>from seatable_api.constants import ColumnTypes\nbase.insert_column('Table1', 'Link', ColumnTypes.LINK, column_data={\n    'table':'Table1',\n    'other_table':'Test_User'\n})\n</code></pre>"},{"location":"scripts/python/objects/columns/#rename-column","title":"Rename column","text":"<p>Rename column</p> <p>Rename a column.</p> <pre><code>base.rename_column(table_name, column_key, new_column_name)\n</code></pre> <p>Example</p> <pre><code>base.rename_column('Table1', 'kSiR', 'new column name')\n</code></pre>"},{"location":"scripts/python/objects/columns/#freeze-column","title":"Freeze column","text":"<p>Freeze column</p> <p>Freeze a column.</p> <pre><code>base.freeze_column(table_name, column_key, frozen)\n</code></pre> <p>Example</p> <pre><code>base.freeze_column('Table1', '0000', True)\n</code></pre>"},{"location":"scripts/python/objects/columns/#move-column","title":"Move column","text":"<p>Move column</p> <p>Move column. In this example, the column with the key <code>loPx</code> will be moved to the right of the column <code>0000</code>.</p> <pre><code>base.move_column(table_name, column_key, target_column_key)\n</code></pre> <p>Example</p> <pre><code>base.move_column('Table1', 'loPx', '0000')\n</code></pre>"},{"location":"scripts/python/objects/columns/#modify-column-types","title":"Modify column types","text":"<p>Modify column type</p> <p>Change the column type of an existing column</p> <pre><code>base.modify_column_type(table_name, column_key, new_column_type)\n</code></pre> <p>Example</p> <pre><code>base.modify_column_type('Table1', 'nePI', 'checkbox')\n</code></pre>"},{"location":"scripts/python/objects/columns/#add-column-options","title":"Add column options","text":"<p>Add column options</p> <p>Used by single-select or multiple-select type columns to add new options.</p> <pre><code>add_column_options(self, table_name, column, options)\n</code></pre> <p>Example</p> <pre><code>base.add_column_options('Table1', 'My choices', [\n    {\"name\": \"ddd\", \"color\": \"#aaa\", \"textColor\": \"#000000\"},\n    {\"name\": \"eee\", \"color\": \"#aaa\", \"textColor\": \"#000000\"},\n    {\"name\": \"fff\", \"color\": \"#aaa\", \"textColor\": \"#000000\"},\n])\n</code></pre>"},{"location":"scripts/python/objects/columns/#add-column-cascade-settings","title":"Add column cascade settings","text":"<p>Add column cascade settings</p> <p>Used by single-select column, to add a limitation of child column options according to the option of parent column.</p> <pre><code>add_column_cascade_settings(table_name, child_column, parent_column, cascade_settings)\n</code></pre> <p>Example</p> <pre><code>base.add_column_cascade_settings(\"Table1\", \"single-op-col-c\", \"single-op-col\", {\n    \"aaa\": [\"aaa-1\", \"aaa-2\"], # If \u201caaa\u201d is selected by parent column, the available options of child column are \"aaa-1 and aaa-2\"\n    \"bbb\": [\"bbb-1\", \"bbb-2\"],\n    \"ccc\": [\"ccc-1\", \"ccc-2\"]\n})\n</code></pre>"},{"location":"scripts/python/objects/columns/#delete-column","title":"Delete column","text":"<p>Delete column</p> <p>Deletes a column from the table.</p> <pre><code>base.delete_column(table_name, column_key)\n</code></pre> <p>Example</p> <pre><code>base.delete_column('Table1', 'bsKL')\n</code></pre>"},{"location":"scripts/python/objects/constants/","title":"Constants","text":"<p>In the script there may be some constants we need to know</p>"},{"location":"scripts/python/objects/constants/#columntypes","title":"ColumnTypes","text":"<p>ColumnTypes</p> <p>Column type, when insert/add columns, change column types, etc. need to be used</p> <pre><code>from seatable_api.constants import ColumnTypes\n\nColumnTypes.NUMBER              # number\nColumnTypes.TEXT                # text\nColumnTypes.LONG_TEXT           # long text\nColumnTypes.CHECKBOX            # checkbox\nColumnTypes.DATE                # date &amp; time\nColumnTypes.SINGLE_SELECT       # single select\nColumnTypes.MULTIPLE_SELECT     # multiple select\nColumnTypes.IMAGE               # image\nColumnTypes.FILE                # file\nColumnTypes.COLLABORATOR        # collaborator\nColumnTypes.LINK                # link to other records\nColumnTypes.FORMULA             # formula\nColumnTypes.CREATOR             # creator\nColumnTypes.CTIME               # create time\nColumnTypes.LAST_MODIFIER       # last modifier\nColumnTypes.MTIME               # modify time\nColumnTypes.GEOLOCATION         # geolocation\nColumnTypes.AUTO_NUMBER         # auto munber\nColumnTypes.URL                 # URL\n</code></pre>"},{"location":"scripts/python/objects/context/","title":"Context","text":"<p>When the script is running in the cloud, the context object provides a context environment. Here's how to use it</p>"},{"location":"scripts/python/objects/context/#server_url","title":"server_url","text":"<p>server_url</p> <p>Server URL, used to initialize Base.</p> <pre><code>context.server_url\n</code></pre> <p>Example</p> <pre><code>from seatable_api import context\nprint(context.server_url)\n</code></pre>"},{"location":"scripts/python/objects/context/#api_token","title":"api_token","text":"<p>api_token</p> <p>API token for access a base.</p> <pre><code>context.api_token\n</code></pre> <p>Example</p> <pre><code>from seatable_api import context\nprint(context.api_token)\n</code></pre>"},{"location":"scripts/python/objects/context/#current_table","title":"current_table","text":"<p>current_table</p> <p>The name of the table that the current user is viewing when the user runs a script manually.</p> <pre><code>context.current_table\n</code></pre> <p>Example</p> <pre><code>from seatable_api import context\nprint(context.current_table)\n</code></pre>"},{"location":"scripts/python/objects/context/#current_row","title":"current_row","text":"<p>current_row</p> <p>When the user manually runs a script, the line where the cursor is currently located.</p> <pre><code>context.current_row\n</code></pre> <p>Example</p> <pre><code>from seatable_api import context\nprint(context.current_row)\n</code></pre>"},{"location":"scripts/python/objects/context/#current_username","title":"current_username","text":"<p>current_username</p> <p>The System ID of the user who runs the script manually (in old verison, it is called current_user_id).</p> <pre><code>context.current_username\n</code></pre> <p>Example</p> <pre><code>from seatable_api import context\nprint(context.current_username)\n</code></pre>"},{"location":"scripts/python/objects/context/#current_id_in_org","title":"current_id_in_org","text":"<p>current_id_in_org</p> <p>The id of the user in the team, it can be set by the team admin via Web UI.</p> <pre><code>context.current_id_in_org\n</code></pre> <p>Example</p> <pre><code>from seatable_api import context\nprint(context.current_id_in_org)\n</code></pre>"},{"location":"scripts/python/objects/date-utils/","title":"Date Utility Functions","text":"<p>We provide a set of functions for the date operations based on the datetime module of python. These functions have the same behavior as the functions provided by the formula column of SeaTable.</p> <p>function import required</p> <p>To use these functions, the dateutils module must be imported.</p> <pre><code>from seatable_api.date_utils import dateutils\n</code></pre> <p>Timezone</p> <p>If the input time string has a timezone info, it will be automatically converted to local time.</p>"},{"location":"scripts/python/objects/date-utils/#date","title":"date","text":"<p>date</p> <p>Return the ISO formatted date string.</p> <pre><code>dateutils.date(year, month, day)\n</code></pre> <p>Example</p> <pre><code>custom_date = dateutils.date(2020, 5, 16)\nprint(custom_date) # 2020-05-16\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#now","title":"now","text":"<p>now</p> <p>Return the ISO formatted date time of current and accurated to seconds.</p> <pre><code>dateutils.now()\n</code></pre> <p>Example</p> <pre><code>now = dateutils.now()\nprint(now) # 2022-02-07 09:44:00\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#today","title":"today","text":"<p>today</p> <p>Return the ISO formatted current date time in string</p> <pre><code>dateutils.today()\n</code></pre> <p>Example</p> <pre><code>today = dateutils.today()\nprint(today) # 2022-02-07\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#dateadd","title":"dateadd","text":"<p>dateadd</p> <p>Addition operation for a datetime by different units such as years, months, weeks, days, hours, minutes and seconds, default by days.</p> <pre><code>dateutils.dateadd(time_str, number, inverval)\n</code></pre> <p>Example</p> <pre><code>time_str = \"2020-6-15\"\ntime_str_s = \"2020-6-15 15:23:21\"\n\ndateutils.dateadd(time_str, -2, 'years') # 2018-06-15\ndateutils.dateadd(time_str, 3, 'months') # 2020-09-15\ndateutils.dateadd(time_str_s, 44, 'minutes') # 2020-06-15 16:07:21\ndateutils.dateadd(time_str_s, 1000, 'days') # 2023-03-12 15:23:21\ndateutils.dateadd(time_str_s, 3, 'weeks') # 2020-07-06 15:23:21\ndateutils.dateadd(time_str_s, -3, 'hours') # 2020-06-15 12:23:21\ndateutils.dateadd(time_str_s, 3, 'seconds') # 2020-06-15 15:23:24\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#datediff","title":"datediff","text":"<p>datediff</p> <p>Caculation of the different between 2 date times by different units such as S, Y, D, H, M, YM, MD, YD.</p> <ul> <li>YM: The difference between the months in start_date and end_date. The days and years of the dates are ignored.</li> <li>MD: The difference between the days in start_date and end_date. The months and years of the dates are ignored.</li> <li>YD: The difference between the days of start_date and end_date. The years of the dates are ignored.</li> </ul> <pre><code>dateutils.datediff(start, end, unit)\n</code></pre> <p>Example</p> <pre><code>time_start = \"2019-6-1\"\ntime_end = \"2020-5-15\"\ndateutils.datediff(start=time_start, end=time_end, unit='S') # seconds 30153600\ndateutils.datediff(start=time_start, end=time_end, unit='Y') # years 0\ndateutils.datediff(start=time_start, end=time_end, unit='D') # days 349\ndateutils.datediff(start=time_start, end=time_end, unit='H') # hours 8376\ndateutils.datediff(start=time_start, end=time_end, unit='M') # months 11\ndateutils.datediff(start=time_start, end=time_end, unit='YM') #  11\ndateutils.datediff(start=time_start, end=time_end, unit='MD') #  14\ndateutils.datediff(\"2019-1-28\",\"2020-2-1\", unit='YD') # 3\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#eomonth","title":"eomonth","text":"<p>eomonth</p> <p>Return the last day of n months befor or after given date. Parameter months refers to n.</p> <pre><code>dateutils.eomonth(date, months)\n</code></pre> <p>Example</p> <pre><code>date = \"2022-7-4\"\ndateutils.eomonth(date, months=0) # 2022-07-31\ndateutils.eomonth(date, months=2) # 2022-09-30\ndateutils.eomonth(date, months=-5) # 2022-02-28\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#year","title":"year","text":"<p>year</p> <p>Return the year of given date.</p> <pre><code>dateutils.year(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.year(\"2019-1-1\") # 2019\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#month","title":"month","text":"<p>month</p> <p>Return the month of given date.</p> <pre><code>dateutils.month(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.month(\"2019-5-4\") # 5\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#months","title":"months","text":"<p>months</p> <p>Return the months difference of two given date.</p> <pre><code>dateutils.months(start, end)\n</code></pre> <p>Example</p> <pre><code>dateutils.months(\"2019-5-1\",\"2020-5-4\") # 12\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#day","title":"day","text":"<p>day</p> <p>Return the day of given date.</p> <pre><code>dateutils.day(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.day('2020-6-15 14:23:21') # 15\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#days","title":"days","text":"<p>days</p> <p>Return the days difference of two given date.</p> <pre><code>dateutils.days(start, end)\n</code></pre> <p>Example</p> <pre><code>dateutils.days('2019-6-1', '2020-5-15') # 349\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#hour","title":"hour","text":"<p>hour</p> <p>Return the hour of given datetime.</p> <pre><code>dateutils.hour(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.hour(\"2020-1-1 12:20:30\") # 12\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#hours","title":"hours","text":"<p>hours</p> <p>Return the hours difference of two given datetime.</p> <pre><code>dateutils.hours(start, end)\n</code></pre> <p>Example</p> <pre><code>dateutils.hours(\"2019-6-3 20:1:12\", \"2020-5-3 13:13:13\") # 8033\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#minute","title":"minute","text":"<p>minute</p> <p>Return the minutes of given datetime.</p> <pre><code>dateutils.minute(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.minute(\"2020-5-3 13:13:13\") # 13\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#second","title":"second","text":"<p>second</p> <p>Return the seconds of given datetime.</p> <pre><code>ateutils.second(date)\n</code></pre> <p>Example</p> <pre><code>ateutils.second(\"2020-5-3 13:13:33\") # 33\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#weekday","title":"weekday","text":"<p>weekday</p> <p>Return the weekday by recording 0 to 6 from Monday to Sunday.</p> <pre><code>dateutils.weekday(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.weekday(\"2019-6-3\") # 0\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#isoweekday","title":"isoweekday","text":"<p>isoweekday</p> <p>Return the weekday by recording 1 to 7 from Monday to Sunday based on ISO standard.</p> <pre><code>dateutils.isoweekday(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.isoweekday(\"2019-6-3\") # 1\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#weeknum","title":"weeknum","text":"<p>weeknum</p> <p>Return the week number of given date by counting the 1st of Jan. as the first week.</p> <pre><code>dateutils.weeknum(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.weeknum('2012-1-2') # 2\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#isoweeknum","title":"isoweeknum","text":"<p>isoweeknum</p> <p>Return the week number of given date based on ISO standard.</p> <pre><code>dateutils.isoweeknum(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.isoweeknum('2012-1-2') # 1\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#isomonth","title":"isomonth","text":"<p>isomonth</p> <p>Return the ISO formatted month.</p> <pre><code>dateutils.isomonth(date)\n</code></pre> <p>Example</p> <pre><code>dateutils.isomonth(\"2012-1-2\") # 2012-01\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#quarter_from_yq","title":"quarter_from_yq","text":"<p>quarter_from_yq</p> <p>Return a DateQuarter object, and params inlclude year and quarter..</p> <pre><code>dateutils.quarter_from_yq(year, quarter)\n</code></pre> <p>Example</p> <pre><code>dateutils.quarter_from_yq(2022, 3) # DateQuarter obj:&lt;DateQuarter-2022,3Q&gt;\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#quarter_from_ym","title":"quarter_from_ym","text":"<p>quarter_from_ym</p> <p>Return a DateQuarter object, and params include year and month.</p> <pre><code>dateutils.quarter_from_ym(year, month)\n</code></pre> <p>Example</p> <pre><code>dateutils.quarter_from_ym(2022, 3) # DateQuarter obj:&lt;DateQuarter-2022,3Q&gt;\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#to_quarter","title":"to_quarter","text":"<p>to_quarter</p> <p>Return a DateQuarter object of a time string.</p> <pre><code>dateutils.to_quarter(time_str)\n</code></pre> <p>Example</p> <pre><code>dateutils.to_quarter(\"2022-07-17\") # DateQuarter obj: &lt;DateQuarter-2022,3Q&gt;\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#quarters_within","title":"quarters_within","text":"<p>quarters_within</p> <p>Return a generator which will generate the DateQuater objects between a start date and end date. You can get the last quarter in the generator if you set param <code>include_last=True</code> which is <code>False</code> by default.</p> <pre><code>dateutils.quarters_within(start, end, include_last)\n</code></pre> <p>Example</p> <pre><code>qs = dateutils.quarters_within(\"2021-03-28\", \"2022-07-17\", include_last=True)\nlist(qs) # [&lt;DateQuarter-2021,1Q&gt;, &lt;DateQuarter-2021,2Q&gt;,...., &lt;DateQuarter-2022,3Q&gt;]\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#quarter-operation","title":"Quarter operation","text":"<p>Quarter operation</p> <p>Some operations are supported based on DateQuater object. Please refer the examples below:</p> <pre><code>q = dateutils.quarter_from_yq(2022, 3)\n\nq.year # 2022\nq.quarter # 3\n\nq.start_date # 2022-07-01\nq.end_date # 2022-09-30\n\nq.days()  # generator, which will generate the date in such quarter\nlist(q.days()) # [datetime.date(2022, 7, 1), datetime.date(2022, 7, 2),....., datetime.date(2022, 9, 30)]\n\nq + 10 # &lt;DateQuarter-2025,1Q&gt;\nq1 = dateutils.quater_from_yq(2021, 1) # &lt;DateQuarter-2021,1Q&gt;\nq - q1 # 6\nq &lt; q1 # False\n\"2022-6-28\" in q # False\n\"2022-8-28\" in q # True\n</code></pre>"},{"location":"scripts/python/objects/date-utils/#other-examples","title":"Other examples","text":"<p>Other examples</p> <p>The date info returned can also be assigned as a param of dateutils. Here are some examples:</p> <pre><code>dt_now = dateutils.now()  # 2022-02-07 09:49:14\n# 1. date after 10 days\ndt_10_days = dateutils.dateadd(dt_now, 10) # 2022-02-17 09:49:14\n# 2. month after 10 days\ndt_month_10_days = dateutils.month(dt_10_days) # 2\n# 3. difference between 2 days\ndt_10_days_before = dateutils.dateadd(dt_now, -10)\ndate_df = dateutils.datediff(dt_10_days_before, dt_10_days, unit=\"D\") # 20\n# 4. handle the time string with time-zone info with local timezone of \"Asia/Shanghai\" (UTC+8)\ntime_str = \"2021-07-17T08:15:41.106+00:00\"\ntime_day = dateutils.day(time_str) # 17\ntime_month = dateutils.month(time_str) # 7\ntime_year = dateutils.year(time_str) # 2021\ntime_hour = dateutils.hour(time_str) # 16\ntime_date = dateuitls.date(time_year, time_month, time_day) # 2021-07-17\n</code></pre>"},{"location":"scripts/python/objects/files/","title":"Files","text":""},{"location":"scripts/python/objects/files/#download","title":"Download","text":"<p>Download (simple method)</p> <p>Download a file to a local path.</p> <pre><code>base.download_file(file_url, save_path)\n</code></pre> <p>Example</p> <pre><code>file_url = \"https://cloud.seatable.io/workspace/74/asset-preview/41cd05da-b29a-4428-bc31-bd66f4600817/files/2020-10/invoice.pdf\"\nsave_path = \"/tmp/invoice.pdf\"\nbase.download_file(file_url, save_path)\n</code></pre> <p>Download (detailed method)</p> <p>This detailed method is for handling complex situations where the file is extremly large or the internet connection is slow. In this example I assume that there exist a file like <code>https://cloud.seatable.io/dtable-web/workspace/74/asset-preview/41cd05da-b29a-4428-bc31-bd66f4600817/files/2020-10/invoice.pdf</code>.</p> <pre><code>download_link = base.get_file_download_link(file_url)\n</code></pre> <p>Example</p> <pre><code>import requests\ndownload_link = base.get_file_download_link('files/2020-10/invoice.pdf')\nresponse = requests.get(download_link)\n</code></pre> <p>Download file to local</p> <pre><code>base.download_custom_file(path, save_path)\n</code></pre> <p>Example</p> <pre><code>custom_file_path = \"/Main/sky.png\"\nlocal_path = \"/Users/Desktop/sky.png\"\nbase.download_custom_file(custom_file_path, local_path)\n</code></pre>"},{"location":"scripts/python/objects/files/#upload","title":"Upload","text":"<p>Upload (simple method)</p> <p>Upload a file from your local drive, memory or a website.</p> <pre><code>base.upload_local_file(file_path, name=None, file_type='file', replace=False)\n# or\nbase.upload_bytes_file(name, content, file_type='file', replace=False)\n</code></pre> <p>Example: Upload a file from local hard drive</p> <pre><code>local_file = '/Users/Markus/Downloads/seatable-logo.png'\ninfo_dict = base.upload_local_file(local_file, name='seatable-logo.png', file_type='image', replace=True)\n</code></pre> <p>Example: Upload a file from memory</p> <pre><code>local_file = '/Users/Markus/Downloads/seatable-logo.png'\nwith open (local_file, 'rb') as f:\n  content = f.read()\ninfo_dict = base.upload_bytes_file = ('seatable-logo.png', content, file_type='image')\n</code></pre> <p>Example: Upload a file from a website</p> <pre><code>import requests\nfile_url = 'https://seatable.io/wp-content/uploads/2021/09/seatable-logo.png'\nresponse = requests.get(file_url)\ninfo_dict = base.upload_bytes_file = ('seatable-logo.png', response.content)\n</code></pre> <p>Upload (detailed method)</p> <p>Get a file upload link.</p> <pre><code>base.get_file_upload_link()\n</code></pre> <p>Example</p> <pre><code># Get the upload link and file path allocated by server\nupload_link_dict = base.get_file_upload_link()\nparent_dir = upload_link_dict['parent_path']\nupload_link = upload_link_dict['upload_link'] + '?ret-json=1'\n\n# Upload the file\nupload_file_name = \"file_uploaded.txt\"\nreplace = 1\nresponse = requests.post(upload_link, data={\n    'parent_dir': parent_dir,\n    'replace': 1 if replace else 0\n}, files={\n    'file': (upload_file_name, open('/User/Desktop/file.txt', 'rb'))\n})\n</code></pre> <p>Upload local file to custom folders</p> <pre><code>base.upload_local_file_to_custom_folder(self, local_path, custom_folder_path=None, name=None)\n</code></pre> <p>Example</p> <pre><code>local_path = \"/Users/Desktop/sky.png\"\ncustom_path = \"/Main/\"\n\ninfo_dict = base.upload_local_file_to_custom_folder(local_path\uff0c custom_path)\nrow_id = \"xxxx\"\nfile_col_name = \"File\"\nbase.update_row('Table1', row_id, {\"File\": [info_dict]})\n</code></pre>"},{"location":"scripts/python/objects/files/#list-files","title":"List files","text":"<p>List files</p> <p>List files in custom folders.</p> <pre><code>base.list_custom_assets(path)\n</code></pre> <p>Example</p> <pre><code>folder_dir = \"/Main/photos\"\nbase.list_custom_assets(folder_dir)\n# A dict will be returned including dir and file\n{\n\"dir\": [{'name': \"MyDir\"}, ...]\n\"file\":[{'name': \"sky.png\"}, ....]\n}\n</code></pre>"},{"location":"scripts/python/objects/files/#get-file-info","title":"Get file info","text":"<p>Get file info</p> <p>The data structure returned can be used to updated cells of file column.</p> <pre><code>base.get_custom_file_info(path, name)\n</code></pre> <p>Example</p> <pre><code>folder_dir = \"/Main/\"\nfile_name = \"sky.png\"\ninfo_dict = base.get_custom_file_info(path, name)\nrow_id = \"xxxx\"\nfile_col_name = \"File\"\nbase.update_row('Table1', row_id, {\"File\": [info_dict]})\n</code></pre>"},{"location":"scripts/python/objects/links/","title":"Links","text":""},{"location":"scripts/python/objects/links/#links","title":"Links","text":""},{"location":"scripts/python/objects/links/#get-link-id","title":"Get link id","text":"<p>Get link id</p> <p>Get the link id by column name</p> <pre><code>base.get_column_link_id(table_name, column_name)\n</code></pre> <p>Example</p> <pre><code>base.get_column_link_id('Table1', 'Record')\n</code></pre>"},{"location":"scripts/python/objects/links/#get-linked-records","title":"Get linked records","text":"<p>Get linked records</p> <p>List the linked records of rows. You can get the linked records of multiple rows.</p> <pre><code>base.get_linked_records(table_id, link_column_key, rows)\n</code></pre> <p>Example</p> <pre><code># rows: a list, each item of the which contains a row info including row_id, offset (defualt by 0) and limit (default by 10) of link table.\nbase.get_linked_records('0000', '89o4', rows=[\n    {'row_id': 'FzNqJxVUT8KrRjewBkPp8Q', 'limit': 2, 'offset': 0},\n    {'row_id': 'Jmnrkn6TQdyRg1KmOM4zZg', 'limit': 20}\n])\n# a key-value data structure returned as below\n# key: row_id of link table\n# value: a list which includes the row info of linked table\n{\n    'FzNqJxVUT8KrRjewBkPp8Q': [\n        {'row_id': 'LocPgVvsRm6bmnzjFDP9bA', 'display_value': '1'},\n        {'row_id': 'OA6x7CYoRuyc2pT52Znfmw', 'display_value': '3'},\n        ...\n    ],\n    'Jmnrkn6TQdyRg1KmOM4zZg': [\n        {'row_id': 'LocPgVvsRm6bmnzjFDP9bA', 'display_value': '1'},\n        {'row_id': 'OA6x7CYoRuyc2pT52Znfmw', 'display_value': '3'},\n         ...\n    ]\n}\n</code></pre>"},{"location":"scripts/python/objects/links/#add-link","title":"Add link","text":"<p>Add link</p> <p>Add links, link other table records. A link column must already exist.</p> <pre><code>base.add_link(link_id, table_name, other_table_name, row_id, other_row_id)\n</code></pre> <p>Example</p> <pre><code>base.add_link('5WeC', 'Table1', 'Table2', 'CGtoJB1oQM60RiKT-c5J-g', 'PALm2wPKTCy-jdJNv_UWaQ')\n</code></pre>"},{"location":"scripts/python/objects/links/#update-link","title":"Update link","text":"<p>Update link</p> <p>Modify the info of link-type column.</p> <pre><code>update_link(self, link_id, table_name, other_table_name, row_id, other_rows_ids)\n</code></pre> <p>Example</p> <pre><code>base.update_link(\n    link_id='r4IJ',\n    table_name='Table1',\n    other_table_name='Table2',\n    row_id='BXhEm9ucTNu3FjupIk7Xug',\n    other_rows_ids=[\n      'exkb56fAT66j8R0w6wD9Qg',\n      'DjHjwmlRRB6WgU9uPnrWeA'\n    ]\n)\n</code></pre>"},{"location":"scripts/python/objects/links/#batch-update-links","title":"Batch update links","text":"<p>Batch update links</p> <p>Batch update infos of link-type columns.</p> <pre><code>base.batch_update_links(link_id, table_name, other_table_name, row_id_list, other_rows_ids_map)\n</code></pre> <p>Example</p> <pre><code>link_id = \"WaW5\"\ntable_name = \"Table1\"\nother_table_name =\"Table2\"\nrow_id_list = [\"fRLglslWQYSGmkU7o6KyHw\",\"FseN8ygVTzq1CHDqI4NjjQ\"]\nother_rows_ids_map = {\n    \"FseN8ygVTzq1CHDqI4NjjQ\":[\"OcCE8aX8T7a4dvJr-qNh3g\",\"JckTyhN0TeS8yvH8D3EN7g\"],\n    \"fRLglslWQYSGmkU7o6KyHw\":[\"MdfUQiWcTL--uMlrGtqqgw\",\"E7Sh3FboSPmfBlDsrj_Fhg\",\"UcZ7w9wDT-uVq4Ohtwgy9w\"]\n}\nbase.batch_update_links(link_id, table_name, other_table_name, row_id_list, other_rows_ids_map)\n</code></pre>"},{"location":"scripts/python/objects/links/#remove-link","title":"Remove link","text":"<p>Remove link</p> <p>Delete the link row.</p> <pre><code>base.remove_link(link_id, table_name, other_table_name, row_id, other_row_id)\n</code></pre> <p>Example</p> <pre><code>base.remove_link('5WeC', 'Table1', 'Table2', 'CGtoJB1oQM60RiKT-c5J-g', 'PALm2wPKTCy-jdJNv_UWaQ')\n</code></pre>"},{"location":"scripts/python/objects/metadata/","title":"Metadata","text":"<p>Metadata delivers the complete structure of a base with tables, views and columns.</p> <p>get_metadata</p> <p>Get the complete metadata of a table. The metadata will not contain the concrete rows of the table.</p> <pre><code>base.get_metadata()\n</code></pre> <p>Example result of this call.</p> <pre><code>{\n    'tables': [{\n        '_id': '4krH',\n        'name': 'Contact',\n        'is_header_locked': False,\n        'columns': [{\n            'key': '0000',\n            'type': 'text',\n            'name': 'Name',\n            'editable': True,\n            'width': 200,\n            'resizable': True,\n            'draggable': True,\n            'data': None,\n            'permission_type': '',\n            'permitted_users': []\n        }, {\n            'key': 'M31F',\n            'type': 'text',\n            'name': 'Email',\n            'editable': True,\n            'width': 200,\n            'resizable': True,\n            'draggable': True,\n            'data': None,\n            'permission_type': '',\n            'permitted_users': []\n        }],\n        'views': [{\n            '_id': '0000',\n            'name': 'Default view',\n            'type': 'table',\n            'is_locked': False,\n            'filter_conjunction': 'And',\n            'filters': [],\n            'sorts': [],\n            'groupbys': [],\n            'group_rows': [],\n            'groups': [],\n            'colorbys': {},\n            'hidden_columns': [],\n            'rows': [],\n            'formula_rows': {},\n            'link_rows': {},\n            'summaries': {},\n            'colors': {}\n        }]\n    }]\n}\n</code></pre>"},{"location":"scripts/python/objects/notifications/","title":"Notifications","text":""},{"location":"scripts/python/objects/notifications/#send_toast_notification","title":"send_toast_notification","text":"<p>send_toast_notification</p> <p>Send a nofication message which can be toasted on web page to a user.</p> <pre><code>base.send_toast_notification(username, msg, toast_type='success')\n# toast_type: one of \"success\", \"warning\" or \"danger\"\n</code></pre> <p>Example</p> <pre><code>base.send_toast_notifation(\n\"aea9e807bcfd4f3481d60294df74f6ee@auth.local\",\n\"error request\",\n\"danger\"\n)\n</code></pre>"},{"location":"scripts/python/objects/rows/","title":"Rows","text":""},{"location":"scripts/python/objects/rows/#get-row-rows","title":"Get row / rows","text":"<p>Get row</p> <p>Gets one row of a table by its row ID.</p> <pre><code>base.get_row(table_name, row_id)\n</code></pre> <p>Example</p> <pre><code>row = base.get_row('Table1', 'U_eTV7mDSmSd-K2P535Wzw')\n</code></pre> <p>List rows</p> <p>Lists multiple rows of a table.</p> <pre><code>base.list_rows(table_name, view_name=None, order_by=None, desc=False, start=None, limit=None)\n</code></pre> <p>The default limit is 1000 which is also the maximum number of rows this method returns.</p> <p>The query method (see below) offers more filter options and can return more rows.</p> <p>Examples</p> <pre><code>rows = base.list_rows('Table1')\nrows = base.list_rows('Table1', view_name='default', order_by='Age', desc=True, start=5, limit=20)\n</code></pre> <p>Query</p> <p>Queries a base using a SQL statement.</p> <pre><code>base.query(sql-statement)\n</code></pre> <p>Unless the SQL statement specifies a higher limit, the method returns a maximum of 100 rows. The maximum number of rows returned is 10000 no matter the limit specified in the SQL statement.</p> <p>Example with a wildcard</p> <pre><code>json_data = base.query('select * from Users') // (1)!\nprint(json.dumps(json_data, indent=2))\n</code></pre> <ol> <li>Returns for example the following:     <pre><code>[\n    {\n        \"Name\": \"Thomas\",\n        \"_id\": \"VkyADGkFRiif0bEVHd-CtA\",\n        \"_ctime\": \"2023-08-16T15:04:56.018Z\",\n        \"_mtime\": \"2023-08-17T07:02:59.585Z\",\n        \"_creator\": \"a5adebe279e04415a28b2c7e256e9e8d@auth.local\",\n        \"_last_modifier\": \"a5adebe279e04415a28b2c7e256e9e8d@auth.local\",\n        \"_locked\": null,\n        \"_locked_by\": null,\n        \"_archived\": false\n    },\n    {\n        \"Name\": \"Steve\",\n        \"_id\": \"UevpAVOjRrmbfqMmpsuTEg\",\n        \"_ctime\": \"2023-08-17T07:03:00.292Z\",\n        \"_mtime\": \"2023-08-17T07:03:00.801Z\",\n        \"_creator\": \"a5adebe279e04415a28b2c7e256e9e8d@auth.local\",\n        \"_last_modifier\": \"a5adebe279e04415a28b2c7e256e9e8d@auth.local\",\n        \"_locked\": null,\n        \"_locked_by\": null,\n        \"_archived\": false\n    },\n]\n</code></pre></li> </ol> <p>Example with WHERE</p> <pre><code>json_data = base.query('select name, price from Bill where year = 2021')\nprint(json.dumps(json_data, indent=2))\n</code></pre> <p>Example with ORDER BY</p> <pre><code>json_data = base.query('select name, price, year from Bill order by year')\nprint(json.dumps(json_data, indent=2))\n</code></pre> <p>Example with GROUP BY</p> <pre><code>json_data = base.query('select name, sum(price) from Bill group by name')\nprint(json.dumps(json_data, indent=2))\n</code></pre> <p>Example with DISTINCT</p> <pre><code>json_data = base.query('select distinct name from Bill')\nprint(json.dumps(json_data, indent=2))\n</code></pre>"},{"location":"scripts/python/objects/rows/#add-rows","title":"Add rows","text":"<p>By default, the default values specified for the table columns in the webinterface do not apply when adding/appending rows via API. In order to apply the default values, add <code>apply_default=True</code>as a function parameter. If set to True, the default values can be overwritten by specifying alternative values in <code>row_data</code>. </p> <p>Append row</p> <p>Appends one row to a table.</p> <pre><code>base.append_row(table_name, row_data, apply_default=False)\n</code></pre> <p>Example</p> <pre><code>row_data = {\n    \"Name\": \"Ron\"\n}\n\nbase.append_row('Table1', row_data, apply_default=True)\n</code></pre> <p>Batch append rows</p> <p>Appends multiple rows to a table.</p> <pre><code>base.batch_append_rows(table_name, rows_data, apply_default=False)\n</code></pre> <p>Example</p> <pre><code>rows_data = [{\n    'Name': 'Ron',\n    'Birthday': '1975-01-01'\n}, {\n    'Name': 'Richard',\n    'Birthday': '1978-10-08'\n}]\n\nbase.batch_append_rows('Table6', rows_data)\n</code></pre> <p>Insert row</p> <p>Inserts one row to a table under a anchor row.</p> <pre><code>base.insert_row(table_name, row_data, anchor_row_id, apply_default=False)\n</code></pre> <p>Example</p> <pre><code>row_data = {\n    \"Name\": \"Ron\"\n}\nbase.insert_row('Table1', row_data, 'U_eTV7mDSmSd-K2P535Wzw')\n</code></pre>"},{"location":"scripts/python/objects/rows/#update-row","title":"Update row","text":"<p>Update row</p> <p>Updates one row in a table.</p> <pre><code>base.update_row(table_name, row_id, row_data)\n</code></pre> <p>Example</p> <pre><code>row_data = {\n    \"Name\": \"Ron\"\n}\nbase.update_row('Table1', 'U_eTV7mDSmSd-K2P535Wzw', row_data)\n</code></pre> <p>Batch update rows</p> <p>Updates multiple rows in a table.</p> <pre><code>base.batch_update_rows(table_name, rows_data)\n</code></pre> <p>Example</p> <pre><code>rows_data = [{\n    \"row_id\" : \"fMmCFyoxT4GN5Y2Powbl0Q\",\n    \"row\" : {\n        \"Name\" : \"Ron\",\n        \"Height\" : \"183\"\n        }\n}, {\n    \"row_id\" : \"cF5JTE99Tae-VVx0BGT-3A\",\n    \"row\" : {\n        \"Name\" : \"Richard\",\n        \"Height\" : \"184\"\n        }\n}, {\n    \"row_id\" : \"WP-8rb5PSUaM-tZRmTOCPA\",\n    \"row\" : {\n        \"Name\" : \"Regina\",\n        \"Heigt\" : \"173\"\n        }\n}]\nbase.batch_update_rows('Table1', rows_data)\n</code></pre>"},{"location":"scripts/python/objects/rows/#delete-rows","title":"Delete rows","text":"<p>Delete row</p> <p>Deletes one row from a table.</p> <pre><code>base.delete_row(table_name, row_id)\n</code></pre> <p>Example</p> <pre><code>base.delete_row('Table1', 'U_eTV7mDSmSd-K2P535Wzw')\n</code></pre> <p>Batch delete rows</p> <p>Deletes multiple rows from a table.</p> <pre><code>base.batch_delete_rows(table_name, row_ids)\n</code></pre> <p>Example</p> <pre><code>del_rows = rows[:3]\nrow_ids = [row['_id'] for row in del_rows]\nbase.batch_delete_rows('Table1', row_ids)\n</code></pre>"},{"location":"scripts/python/objects/tables/","title":"Table","text":"<p>List tables</p> <p>Get the active table.</p> <pre><code>base.list_tables()\n</code></pre> <p>Example <pre><code>tables = base.list_tables()\n</code></pre></p> <p>Get a table by name</p> <p>Get the active table.</p> <pre><code>base.get_table_by_name(table_name)\n</code></pre> <p>Example <pre><code>base.get_table_by_name('Table1')\n</code></pre></p> <p>Add table</p> <p>Add a table into a base.</p> <pre><code>base.add_table(table_name, lang='en', columns=[]);\n</code></pre> <p>Example <pre><code>base.add_table('Investigation', lang='zh-cn')\n</code></pre></p> <p>Rename table</p> <p>Add a table into a base.</p> <pre><code>base.rename_table(table_name, new_table_name)\n</code></pre> <p>Example <pre><code>base.rename_table('Table1', 'Table11')\n</code></pre></p> <p>Delete table</p> <p>Add a table into a base.</p> <pre><code>base.delete_table(table_name)\n</code></pre> <p>Example <pre><code>base.delete_table('Table1')\n</code></pre></p>"},{"location":"scripts/python/objects/users/","title":"User","text":""},{"location":"scripts/python/objects/users/#get_user_info","title":"get_user_info","text":"<p>Get a user info</p> <p>Returns the name of the user and his <code>id_in_org</code>.</p> <pre><code>base.get_user_info(username)\n</code></pre> <p>Example</p> <pre><code>base.get_user_info(\"aea9e807bcfd4f3481d60294df74f6ee@auth.local\")\n</code></pre>"},{"location":"scripts/python/objects/views/","title":"Views","text":"<p>Every table in a base contains views. The following calls are available to interact with the views of a table.</p>"},{"location":"scripts/python/objects/views/#list-views","title":"List views","text":"<p>List views</p> <pre><code>base.list_views(table_name)\n</code></pre> <p>Example</p> <pre><code>base.list_views('Table1')\n</code></pre> <p>Get view by name</p> <pre><code>base.get_view_by_name(table_name, view_name)\n</code></pre> <p>Example</p> <pre><code>base.get_view_by_name('Table1', 'MyView')\n</code></pre>"},{"location":"scripts/python/objects/views/#add-view","title":"Add view","text":"<p>Add view</p> <pre><code>base.add_view(table_name, view_name)\n</code></pre> <p>Examples</p> <pre><code>base.add_view('Table1', 'New view')\n</code></pre>"},{"location":"scripts/python/objects/views/#rename-view","title":"Rename view","text":"<p>Rename view</p> <pre><code>base.rename_view(table_name, view_name, new_view_name)\n</code></pre> <p>Example</p> <pre><code>base.rename_view('Table1', 'MyView', 'NewView')\n</code></pre>"},{"location":"scripts/python/objects/views/#delete-view","title":"Delete view","text":"<p>Delete view</p> <pre><code>base.delete_view(table_name, view_name)\n</code></pre> <p>Example</p> <pre><code>base.delete_view('Table1', 'MyView')\n</code></pre>"},{"location":"scripts/python/objects/websockets/","title":"Websockets","text":""},{"location":"scripts/python/objects/websockets/#socketio","title":"socketIO","text":"<p>socketIO</p> <p>By using websocket, you can get realtime data update notifications of a base.</p> <pre><code>from seatable_api import Base\n\nserver_url = 'https://cloud.seatable.cn'\napi_token = 'c3c75dca2c369849455a39f4436147639cf02b2d'\n\nbase = Base(api_token, server_url)\nbase.auth(with_socket_io=True)\n\nbase.socketIO.wait()\n</code></pre> <p>When Base has data updated, the following will be output in the terminal.</p> <pre><code>2022-07-19 11:48:37.803956 [ SeaTable SocketIO connection established ]\n2022-07-19 11:48:39.953150 [ SeaTable SocketIO on UPDATE_DTABLE ]\n{\"op_type\":\"insert_row\",\"table_id\":\"0000\",\"row_id\":\"YFK9bD1XReSuQ7WP1YYjMA\",\"row_insert_position\":\"insert_below\",\"row_data\":{\"_id\":\"RngJuRa0SMGXyiA-SHDiAw\",\"_participants\":[],\"_creator\":\"seatable@seatable.com\",\"_ctime\":\"\",\"_last_modifier\":\"seatable@seatable.com\",\"_mtime\":\"\"},\"links_data\":{}}\n</code></pre> <p>After getting data update notifications, performance self-defined actions by listen to the UPDATE_DTABLE event.</p> <pre><code>import json\nfrom seatable_api import Base\nfrom seatable_api.constants import UPDATE_DTABLE\n\nserver_url = 'https://cloud.seatable.cn'\napi_token = 'c3c75dca2c369849455a39f4436147639cf02b2d'\n\ndef on_update(data, index, *args):\n    try:\n        operation = json.loads(data)\n        print(operation)\n        op_type = operation['op_type']\n        table_id = operation['table_id']\n        row_id = operation['row_id']\n        # ... do something\n    except Exception as e:\n        print(e)\n\nbase = Base(api_token, server_url)\nbase.auth(with_socket_io=True)\n\nbase.socketIO.on(UPDATE_DTABLE, on_update)\nbase.socketIO.wait()\n</code></pre>"},{"location":"scripts/sql/functions/","title":"SQL function reference","text":"<p>You can use supported functions in SQL query statements.</p>"},{"location":"scripts/sql/functions/#functions-for-sql","title":"Functions for SQL","text":"<p>With functions you can transform, calculate, combine or merge the values of other columns from the current table. On top of that, functions can refer to each other.</p> <p>The functions supported in SQL are roughly the same as the set of functions supported by formulas in SeaTable.</p> <p>The basic syntax of functions is as follows:</p> <pre><code>FunctionName(parameters...)\n</code></pre> <p>The parameters can be number,string,constants,column name or other functions. Column name cannot be an alias. If the column name contains \"-\", you can use \"`\" to enclose it.</p> <p>Currently SQL query offers the following functions:</p> <ul> <li>Operands</li> <li>Mathematical functions</li> <li>Text functions</li> <li>Date functions</li> <li>Geo functions</li> <li>Logical functions</li> <li>Statistical functions</li> </ul> <p>In this article, we will show you a complete overview of all functions with examples. If you are looking for a specific function, you can use the Ctrl+F to quickly find an entry on this page.</p>"},{"location":"scripts/sql/functions/#functions-with-examples","title":"Functions with examples","text":"<p>You can use the following constants in the function:</p> OPERATOR DESCRIPTION INPUT RESULT e Returns the Euler number e=2.71828... e+1 3.71828183 pi Returns the circle number Pi. pi 3.14159265 true() Returns the logical value 'true'. true() true false() Returns the logical value 'false'. false() false"},{"location":"scripts/sql/functions/#operands","title":"Operands","text":"<p>Parameters must be strings or numbers. If a number is passed to a parameter that expects a string, it'll be converted to string, and vice versa.</p> OPERATOR DESCRIPTION INPUT RESULT add(num1,num2) Adds two numeric values (num1 and num2) and returns the result. add(1,2) 3 subtract(num1,num2) Subtracts one numeric value (num2) from another (num1). subtract(5,4) 1 multiply(num1,num2) Multiplies two numeric values. multiply(3,4) 12 divide(num1,num2) Divides one numeric value (num1) by another (num2). divide(3,2) 1.5 mod(num1,num2) Calculates the remainder of a division. mod(15,7) 1 power(num1,num2) Calculates the power (num2) of a number (num1). power(3,2) 9 greater(num1,num2) Checks if a numeric value (num1) is greater than another (num2) and returns the logical value 'true' or 'false'. greater(2,3) false lessthan(num1,num2) Checks if a numeric value (num1) is less than another (num2) and returns the logical value 'true' or 'false'. lessthan(2,3) true greatereq(num1,num2) Checks whether a numeric value (num1) is greater than or equal to another (num2) and returns the logical value 'true' or 'false'. greatereq(2,3) false lessthaneq(num1,num2) Checks whether a numeric value (num1) is less than or equal to another (num2) and returns the logical value 'true' or 'false'. lessthaneq(2,3) false equal(num1,num2) Checks if two values (number1, number 2) are equal and returns the logical value 'true' or 'false'. equal(`Old price`, `New price`) false unequal Checks whether two values (number1, number2) are not equal and returns the logical value 'true' or 'false'. unequal(`Old price`, `New price`) true concatenate(string1, string2, ...) Combines several character strings (string1, string 2, ...) into one character string. concatenate(`Supplier`, \" has the product \", `Product`) Microsoft has the product Windows"},{"location":"scripts/sql/functions/#mathematical-functions","title":"Mathematical functions","text":"<p>Parameters must be numbers. If string is passed to a parameter, it'll be converted to number.</p> OPERATOR DESCRIPTION INPUT RESULT abs(number) Returns the absolute value of a number. abs(-2) 2 ceiling(number, significance) Rounds a number to the nearest integer or to the nearest multiple of the specified significance. If either argument is non-numeric, the formula returns an empty value. ceiling(2.14) 3 If the number is an exact multiple of the significance, then no rounding occurs. If the number and the significance are negative, then the rounding is away from 0. If the number is negative and the significance is positive, then the rounding is towards 0. ceiling(-2.14, 4) 0 even(number) Assigns a real number to the nearest larger even number. even(2.14) 4 exp(number) Exponential function for Euler's number e. Returns the value of e given high (number). expr(1) 2.71828... floor(number, significance) Rounds a number to the nearest integer or to the nearest multiple of the specified significance. If either argument is non-numeric, the formula returns an empty value. floor(2.86) 2 If the number is an exact multiple of the significance, then no rounding takes place. If the sign of the number is positive, then the rounding is towards 0. If the sign of the number is negative, then the rounding is away from 0. floor(-3.14, 5) -5 int(number) Assigns the nearest smaller integer to a real number. int(-3.14) -4 lg(number) Logarithm function (number) with 10 as base. lg(100) 2 log(number, base) Logarithm function (number) with definable base. log(81, 3) 4 But if no base is given, this function works exactly like lg(), with 10 as base. log(1000) 3 odd(number) Assigns a real number to the nearest larger odd number. odd(-2.14) -1 round(number, digits) Rounds a number to the nearest integer. If no decimal place (digits) is specified, the number is rounded to the 1st digit to the left of the decimal point. round(3.14) 3 If a positive decimal place (digits) is given, the digit to the right of the decimal point is rounded. round(3.14, 1) 3.1 If a negative decimal place (digits) is given, is rounded to the left of the decimal point. round(3.14, -3) 0 rounddown(number, digits) Rounds a number towards zero. If no decimal place (digits) is given, the number is rounded to the 1st digit left of the decimal point. rounddown(3.12, 1) 3.1 roundup(number, digits) Rounds a number from zero to the nearest whole number. If no decimal place (digits) is given, the number is rounded to the 1st digit left of the decimal point. roundup(-3.15) -4 sign(number) Checks whether a number is greater, equal or less than 0. Returns the values 1, 0 and -1 respectively. In other words: it returns the sign of a number, for '+', 'zero' and '-' with 1, 0, and -1 respectively. sign(-2) -1 sqrt(number) Returns the square root of a number. sqrt(81) 9"},{"location":"scripts/sql/functions/#text-functions","title":"Text functions","text":"OPERATOR DESCRIPTION INPUT RESULT exact(string1, string2) Checks whether two character strings (string1, string2) are exactly identical. Returns the values 'true' or 'false' respectively. Case sensitive. exact('SeaTable', 'Seatable') false find(findString, sourceString, startPosition) Returns the start position of a string (findString) within another string (sourceString). It is case sensitive. Without find, 0 is returned. If the start position (startPosition) is given as decimal, it is rounded down. If the cell in the column for the keyword (findString) is still empty, 1 is returned. If the cell in the column for the target string (sourceString) is still empty, an empty value ('') is returned. find('Sea', 'seaTable', 1) 0 The search will start from the given 'startPosition'. This 'startPosition' has no influence on the result: it always returns the absolute start position. If the 'startPosition' of the character string to be searched for (findString) is given after the actual start position of the character string (sourceString), 0 is returned, since nothing was found from this position. find('table', 'big table', 4) 5 left(string, count) Returns the specified number (count) of characters at the beginning of a string. left('SeaTable', 3) Sea len(string) Returns the number of characters in a string. len('SeaTable') 8 lower(string) Converts a character string to lower case letters. lower('German) german mid(string, startPosition, count) Returns the specified number (count) of characters from the specified start position (startPosition) of a string. mid('SeaTable is the best', 1, 8) SeaTable Start position (startPosition) and count must not be empty, negative or zero. However, if start position (startPosition) and number (count) are given as decimal, they are rounded down. Too much count is ignored. mid('SeaTable is the best.', 10.9, 27.3) is the best. replace(sourceString, startPosition, count, newString) Replaces a part (count) of a character string (sourceString) from a certain start position (startPosition) with another character string (newString). The number (count) of characters is only taken into account for the old string (sourceString), but not for the new string (newString). replace('SeaTable is the best.', 1, 8, 'Seafile') Seafile is the best. If number (count) is given as zero, the new string (newString) is simply added to the old string (sourceString) from the start position (startPosition). replace('SeaTable is the best.', 1, 0, 'Seafile') SeafileSeaTable is the best. rept(string, number) Repeats a string as often (number) as specified. rept('Sea ', 3) SeaSeaSea right(string, count) Returns the specified number (count) of characters at the end of a string. right('SeaTable', 5) Table search(findString, sourceString, startPosition) Returns the start position of a string (findString) within another string (sourceString). It is not case-sensitive. Without find, 0 is returned. If the start position (startPosition) is given as decimal, it is rounded down. If the cell in the column for the keyword (findString) is still empty, 1 is returned. If the cell in the column for the target string (sourceString) is still empty, an empty value ('') is returned. search('Sea', 'seaTable', 1) 1 The search will start from the given 'startPosition'. This 'startPosition' has no influence on the result: it always returns the absolute start position. If the 'startPosition' of the character string to be searched for (findString) is given after the actual start position of the character string (sourceString), 0 is returned, since nothing was found from this position. search('table', 'big table', 6) 0 substitute(sourceString, oldString, newString, index) Replaces existing text (oldString) with new text (newString) in a string (sourceString). If there is more than one text (oldString) in the string (sourceString), only the 'index'-th text is replaced. The text is case-sensitive. substitute('SeaTableTable', 'Table', 'file', 1) SeafileTable If the index is given as 0 or not, all found text (oldString) will be replaced by the new text (newString). substitute('SeaTableTable', 'Table', 'file') Seafilefile T(value) Checks whether a value is text. If so, the text is returned. If no, the return value is empty. T('123') 123 text(number, format) Converts a number into text and formats it in the specified format. The format can be percent and number as well as dollar, euro and yuan. text(150, 'euro') \u20ac150 When a number is converted directly to percent, its absolute value is retained. In other words, 50 is converted into 5000%. But if you want 50%, you have to divide the number by 100 before the conversion. text(50, 'percent') 5000% trim(string) Removes spaces at the beginning and end of a string. trim(' SeaTable ') SeaTable upper(string) Converts a string to uppercase letters. upper('German) GERMAN value(string) Converts a text (string) representing a number into a number. value('123') 123"},{"location":"scripts/sql/functions/#date-functions","title":"Date functions","text":"<p>When passing a parameter with time or date type, you can specify a contant in \"2021-09-01 12:00:01\" or \"2021-09-01\" format. When you query the result of a date function in SQL, the result will be converted to a string in RFC3339 format, e.g. \"2021-09-03T00:00:00+02:00\". Please note that if a date function returns a date type, it cannot be used as parameter for text or maths functions.</p> OPERATOR DESCRIPTION INPUT RESULT date(year, month, day) Returns a date in international format (ISO) from entered year, month and day. If the year is entered with two digits, it is automatically understood as a year in the 1900s. If the number of the month or day is too large (greater than 12 or 31 respectively), these months or days are automatically converted to the next year or month. date(2021, 1, 3) 2021-01-03T00:00:00+02:00 dateAdd(date, count, unit) Adds the specified number (count) of years ('years'), months ('months'), weeks ('weeks'), days ('days'), hours ('hours'), minutes ('minutes') or seconds ('seconds') to a date/time ('date'). dateAdd('2020-02-03', 2, 'days') 2020-02-05T00:00:00+02:00 Tip: if you want to add a complex duration (count) such as 1 day 12 hours, you can convert it to e.g. 24+12=36 hours ('hours') and enter it into the formula as a uniform duration (count). The duration is converted to the smallest unit: in this case, hours. dateAdd('2020-09-04 13:05:18', 36, 'hours') ODER dateAdd(`form submission`, 36, 'hours') 2020-09-06T01:05:18+02:00 datedif(startDate, endDate, unit) Calculates the seconds, days, months, or years between two date values. The optional unit argument can be one of the following: S (seconds), D (full days), M (full months), Y (full years), YD (full days, ignoring years), YM (full months, ignoring days and years), MD (full days, ignoring months and years). If the startDate is empty, a default value of \"1900-01-01\" will be set. If both date values are empty, it will return 0. dateDif('2018-01-01', '2020-01-01') 2 The optional unit argument can be one of the following: S (seconds), D (full days), M (full months), Y (full years), YD (full days, ignoring years), YM (full months, ignoring days and years), MD (full days, ignoring months and years). dateDif('2019-10-11', '2020-12-12', 'M') 14 day(date) Returns the day of a date as a number. The returned number is between 1 and 31. day('2020-01-03) 3 eomonth(startDate, months) Determines the date of the last day of the month that is the specified number (months) of months after the specified date (startDate). If the number (months) is given as 0, the last day of the month is simply determined. eomonth('2020-01-01', 1) 2020-02-29T00:00:00+02:00 If the number (months) is given as negative, the date of the last day of the month that contains the absolute number (months) of months before the specified date (startDate) is determined. eomonth('2020-01-01', -1) 2019-12-31T00:00:00+02:00 hour(date) Returns the hour of a date as a number. The number returned is between 0 and 23. hour('2020-02-14 13:14:52) 13 If no hour is contained in the time specification (date), 0 is returned. hour('2020-02-14) 0 hours(startDate, endDate) Returns the number of hours between two date values (startDate and endDate). The minutes in the date values are not taken into account. hours('2020-02-14 13:14', '2020-02-14 15:14') 2 If no hours are included in the time specification (startDate or endDate), 0 o'clock on this day is automatically assumed. hours('2020-02-14', '2020-02-14 15:14') 15 minute(date) Returns the minutes of a time specification (date) as a number. The number returned is between 0 and 59. minute('2020-02-14 13:14:52 14 If no minutes are included in the time (date), 0 is returned. minute('2020-02-14) 0 month(date) Returns the month of a date as a number. The returned number is between 1 (January) and 12 (December). month('2020-02-14 13:14:52) 2 months(startDate, endDate) Returns the number of months between two date values (startDate and endDate). The days and time in the date values are not taken into account. months('2020-02-01 13:14', '2020-03-31 15:54') 1 If no month is given in the date values (startDate, endDate), January is automatically assumed to be the month. months('2020', '2021') 12 networkdays(startDate, endDate, holiday1, holiday2, ...) Returns the number of full working days between two dates (startDate and endDate). You can also define holidays other than Saturday and Sunday (holiday1, holiday2, etc.), which are also deducted. If you do not want to include public holidays, you can simply omit these parameters. networkdays('2020-01-01', '2020-01-07','2020-01-01') 4 Please note that the specified last day (endDate) is also included in the formula. That means, as in this formula, three working days are counted: the 7th, 8th and 9th of September, 2020. networkdays('2020-09-07', '2020-09-09') 3 now() Returns the current date and time. This column is only updated automatically when the Base is reloaded. now() 2020-09-07T12:59+02:00 second(date) Returns the seconds of a time (date) as a number. The number returned is between 0 and 59. second('2020-02-14 13:14:52') 52 today() Returns the current date. This column is only updated automatically if the Base has been reloaded. today() 2020-09-07T00:00:00+02:00 This function is handy for calculating time between a certain date &amp; time and now. On each reload or recalculation of the Base, the calculation is updated. networkdays('2020-09-01', today()) 4 weekday(date, weekStart) Returns the weekday of a date as a number. The returned number between 1 and 7, where you can define the first day of the week (weekStart): Monday ('Monday') or Sunday ('Sunday' or omitted, since the start as Sunday is the default). A third option is not possible. Upper/lower case is not considered. weekday('2020-01-01', 'Monday') 3 If no 'weekStart' is given or if a 'weekStart' other than 'Monday' or 'Sunday' is given, it is always assumed to be 'Sunday'. So if it should be 'Monday', enter 'Monday'; if it should be 'Sunday', you can omit this parameter. weekday('2020-01-01', 'Thursday') OR weekday('2020-01-01') 4 weeknum(date, return_type) Returns the absolute week number of a date as a number. The returned number is between 1 and 53, where you can define the first day of the week (return_type). Enter the number 1 or 2, or 11 to 17, and 21 as \"return_type\" to define the start of a week: 1/Sunday\u30012/Monday\u300111/Monday\u300112/Tuesday\u300113/Wednesday\u300114/Thursday\u300115/Friday\u300116/Saturday\u300117/Sunday. If you want the week number to be returned according to ISO standard, specify the number of 21 as \"return_type\", or use the function isoweeknum. weeknum('2020-01-12', 11) 2 If no 'return_type' is given, it is always assumed to be 'Sunday'. weeknum('2020-01-12') 3 year(date) Returns the year of a date as a number. year('2020-01-01') 2020 startofweek(date, weekStart) Returns the first day of the week in which the date is located. WeekStart defaults to sunday, or it can be set to monday. startofweek('2021-04-28') 2021-4-25T00:00:00+02:00 quarter(date) Returns the quarter of the date, the return value is 1, 2, 3, 4. quarter('2021-01-01') 1 isodate(date) Returns the ISO string representation of the date. isodate('2021-01-01 11:00:00') 2021-01-01 isomonth(date) Returns the ISO string representation of the year and month isomonth('2021-01-01 11:00:00') 2021-01"},{"location":"scripts/sql/functions/#geo-functions","title":"Geo functions","text":"<p>Geo functions are available since version 2.7.0</p> OPERATOR DESCRIPTION INPUT RESULT province(geolocation) Returns the province of a Geolocation column. province(column_name) \u5317\u4eac\u5e02 city(geolocation) Returns the city of a Geolocation column. city(column_name) \u5317\u4eac\u5e02 district(geolocation) Returns the district of a Geolocation column. district(column_name) \u671d\u9633\u533a"},{"location":"scripts/sql/functions/#logical-functions","title":"Logical functions","text":"OPERATOR DESCRIPTION INPUT RESULT and(logical1, logical2, ...) Checks if all arguments (logical1, logical2, ...) are true (valid, not empty and not equal to zero). If yes, 'true' is returned, otherwise 'false'. and(1, '', 2) false if(logical, value1, value2) Checks if an argument (logical) is true and if yes, returns the first value (value1) and if no, returns the second value (value2). if(1&gt;2, 3, 4) 4 For the condition (logical) only a comparison with is allowed. If you enter only condition (logical) and the first value (value1): it will return the first value (value1) if the condition (logical) is true; and it will return an empty value ('') if the condition (logical) is false. if(`Budget`&gt;`Price`, 'Yes') Yes ifs(logical1, value1, logical2, value2, ...) Checks if one or more conditions (logical1, logical2, ...) are true and returns a value (value1, value2, ...) that matches the first TRUE condition. ifs( 1&gt;2, 3, 5&gt;4, 9) 9 not(boolean) Inverts the logical value (boolean). In other words: converts 'true' to 'false' and 'false' to 'true'. not(and(1, '', 2)) true or(logical1, logical2, ...) Checks if at least 1 of the arguments (value1, value2, ...) is true (valid, not empty and not equal to zero), and returns 'true' in this case. If all arguments are false, then returns 'false'. or(1,'',2) true switch(logical, matcher1, value1, matcher2, value2, ..., default) Evaluates an expression (logical) against a list of values (matcher) and returns the result (value) corresponding to the first matching value. If there is no match, an optional default value is returned. At least 3 parameters (logical, matcher, value) must be specified. switch(`grades`, 1, 'very good', 2, 'good', 3, 'satisfactory', 4, 'passed', 'failed') very good If there are several identical values in the value list (matcher), only the first hit is taken into account. switch(int(68/10), 6, 'OK', 6, 'KO') OK xor(logical1, logical2, ...) Returns the contravalence of all arguments. In other words, checks if the number of true arguments is (logical) odd and returns 'true'. xor(1, 0, 2\\&lt;1) false"},{"location":"scripts/sql/functions/#statistical-functions","title":"Statistical functions","text":"OPERATOR DESCRIPTION INPUT RESULT average(number1, number2, ...) Returns the average of the numbers (number1, number2, ...) average(1, 2, 3, 4, 5) 3 counta(textORnumber1, textORnumber2, ...) Counts the number of non-empty cells (textORnumber1, textORnumber2, ...). These cells can be text or numbers. In this example, 1 and 2 are numbers, '3' is text, and '' is an empty value. counta(1, '', 2, '3') 3 countall(textORnumber1, textORnumber2, ...) Counts the number of elements (textORnumber1, textORnumber2, ...) including numbers (1, 2), text ('3') and empty cells (''). countall(1, '', 2, '3') 4 countblank(textORnumber1, textORnumber2, ...) Counts the number of empty cells. countall(1, '', 2, '3') 1 countItems(column) Counts the number of items in a column. The supported column types are multiple select, collaborator, file, image. (available since version 2.7.0) countItems(column_name) 2"},{"location":"scripts/sql/reference/","title":"SQL in SeaTable","text":"<p>You can use SQL to query data in SeaTable. If some tables in a base are archived, archived rows are also queried, as well as rows that are not archived yet.</p>"},{"location":"scripts/sql/reference/#supported-sql-syntax","title":"Supported SQL Syntax","text":"<p>Currently only <code>select</code>, <code>insert</code>, <code>update</code>, and <code>delete</code> statements are supported. (<code>insert</code>, <code>update</code>, and <code>delete</code> statements require version 2.7 or later)</p> <p>The synatx of <code>select</code> statement is:</p> <pre><code>SELECT [DISTINCT] fields FROM table_name [WhereClause] [GroupByClause] [HavingClause] [OrderByClause] [Limit Option]\n</code></pre> <p>Since version 4.3, basic JOIN query is supported, for example:</p> <pre><code>SELECT ... FROM table1, table2 WHERE table1.column1 = table2.column2 AND ...\n</code></pre> <p>The JOIN query has the following restrictions:</p> <ul> <li>Only <code>INNER JOIN</code> is supported, <code>LEFT JOIN</code>, <code>RIGHT JOIN</code>, and <code>FULL JOIN</code> are not supported.</li> <li>Tables in the <code>FROM</code> clause should be unique (no duplicate tables).</li> <li>Each table in the <code>FROM</code> clause should be associated with at least one join condition.</li> <li>Join conditions should be placed in the <code>WHERE</code> clause, and connected with <code>AND</code>s.</li> <li>Join conditions can only use equality operator on columns, e.g. <code>table1.column1 = table2.column2</code>.</li> <li>Columns in join conditions must be indexed, unless the table is not archived.</li> </ul> <p>Notes:</p> <ul> <li>Most SQL syntax can be used in where clause, including arithmetic expressions, comparison operators, <code>[NOT] LIKE</code>, <code>IN</code>, <code>BETWEEN ... AND ...</code>, <code>AND</code>, <code>OR</code>, <code>NOT</code>, <code>IS [NOT] TRUE</code>, <code>IS [NOT] NULL</code>.</li> <li>Arithmetic expressions only support numbers.</li> <li><code>LIKE</code> only supports strings. The key word <code>ILIKE</code> can be used instead of <code>LIKE</code> to make the match case-insensitive.</li> <li><code>BETWEEN ... AND ...</code> only supports numbers and time.</li> <li>Time constants should be strings in ISO format (e.g. \"2020-09-08 00:11:23\"). Since 2.8 version, strings in RFC 3339 format are supported (such as \"2020-12-31T23:59:60Z\").</li> <li><code>GROUP BY</code> uses strict syntax. The selected fields must appear in group by list, except for aggregation functions (<code>COUNT</code>, <code>SUM</code>, <code>MAX</code>, <code>MIN</code>, <code>AVG</code>) and formulas (see extended syntax section below).</li> <li><code>HAVING</code> filters rows resulting from the group by clause. Only fields referred in the \"GROUP BY\" clause or aggregation functions (such as \"SUM\") can be used in having clause. Other syntax is the same as specified for the where clause.</li> <li>Fields in \"order by\" list must be a column or an expression in the selected fields. For example, <code>select a from table order by b</code> is invalid; while <code>select a from table order by b</code> and <code>select abs(a), b from table order by abs(a)</code> are valid.</li> <li>Limit options are in MySQL format. The general syntax is <code>LIMIT ... OFFSET ...</code>. You may obmit <code>LIMIT</code> or <code>OFFSET</code>.</li> <li>Field alias with <code>AS</code> syntax is supported. For example, <code>select table.a as a from table</code> returns rows whose first column is keyed by \"a\". There are two notes:</li> <li>Field alias can be referred in <code>group by</code>, <code>having</code> and <code>order by</code> clauses. E.g., <code>select t.registration as r, count(*) as c from t group by r having c &gt; 100</code> is valid.</li> <li>Field alias cannot be referred in <code>where</code> clause. E.g., <code>select t.registration as r, count(*) from t group by r where r &gt; \"2020-01-01\"</code> will report syntax error.</li> </ul> <p>Each returned row is a JSON map. The keys of the maps are the column keys, NOT column names. To use column names as keys, the <code>convert_keys</code> parameter (available since version 2.4) in query request should be TRUE. For JOIN query, the keys of row maps match the \"id\" fields (not the \"key\" or the \"name\"). Those column fields (e.g. id, key, name) are returned under <code>metadata</code> array in query response.</p> <p>The synatx of <code>insert</code>, <code>update</code>, and <code>delete</code> statements are:</p> <pre><code>INSERT INTO table_name [column_list] VALUES value_list [, ...]\n\nUPDATE table_name SET column_name = value [, ...] [WhereClause]\n\nDELETE FROM table_name [WhereClause]\n</code></pre> <ul> <li><code>column_list</code> is a list of column names surrounded by parentheses. If omitted, it defaults to all updatable columns.</li> <li><code>value_list</code> is a list of values surrounded by parentheses. Values must be in the same order as the column list, for example: <code>(1, \"2\", 3.0)</code>.</li> <li>Multivalued columns, such as multiple-select column type, requires values to be surrounded by parentheses, for example: <code>(1, \"2\", 3.0, (\"foo\", \"bar\"))</code>.</li> <li>Values of single-select and multiple-select column types must be option names, not option keys.</li> <li><code>WhereClause</code> is optional. If omitted, all rows in the table are included.</li> <li><code>INSERT</code> statement only supports bases that have been archived. The rows will be inserted into big-data storage. It'll return error if the base is not archived yet. If you want to insert rows into such bases, please use API for adding rows (e.g. Python API).</li> <li><code>UPDATE</code> and <code>DELETE</code> statements allows updating/deleting rows in both normal and big-data storage.</li> </ul> <p>Note: these column types are not allowed to insert or update:</p> <ul> <li>built-in columns, such as <code>_id</code>, <code>_ctime</code>.</li> <li>image, file, formula, link, link-formula, geolocation, auto-number, button</li> </ul>"},{"location":"scripts/sql/reference/#data-types","title":"Data Types","text":"<p>Below is mapping from SeaTable column types to SQL column types.</p> SeaTable Column Type SQL Column Type Query result format Use in WHERE clause Use in GROUP BY / ORDER BY clause text String Supported Supported. long-text String Raw text in Markdown formst Supported Supported number Float Supported Supported single-select String Returned rows contain the option key by default. To return the option name, the <code>convert_keys</code> parameter (available since version 2.4) in query request should be TRUE. Refer an option by its name. E.g. <code>where single_select = \"New York\"</code>. Order by option keys, not option names multiple-select List of strings Returned rows contain the option key by default. To return the option name, the <code>convert_keys</code> parameter (available since version 2.4) in query request should be TRUE. Refer an option by its name. E.g. <code>where multi_select = \"New York\"</code>. More details in \"List Types\" section below. More details in \"List Types\" section below. checkbox Bool Supported Supported date Datetime Time strings in RFC 3339 format Constants are expressed in strings in ISO format. e.g. \"2006-1-2\" or \"2006-1-2 15:04:05\". Since 2.8 version, strings in RFC 3339 format are supported (such as \"2020-12-31T23:59:60Z\"). Supported image List of URL for images A JSON array with image URLs as elements Supported. More details in \"List Types\" section below. Supported. More details in \"List Types\" section below. file Will be returned as JSON format string when queried. Not supported Not Supported Not Supported collaborator List of user IDs Format is like 5758ecdce3e741ad81293a304b6d3388@auth.local. If you need user names, you have to convert with seatable APIs. Supported. More details in \"List Types\" section below. Supported. More details in \"List Types\" section below. link to other records List of linked rows Supported. More details in \"List Types\" section below. Supported. More details in \"List Types\" section below. Supported. More details in \"List Types\" section below. formula The type depends on the return value of the formula. Depends on the type of the return value Depends on the type of the return value Depends on the type of the return value _creator User ID as stirng Format is like 5758ecdce3e741ad81293a304b6d3388@auth.local. If you need user names, you have to convert with seatable APIs. Supported Supported _ctime Datetime Time strings in RFC 3339 format Constants are expressed in strings in ISO format. e.g. \"2006-1-2\" or \"2006-1-2 15:04:05\". Since 2.8 version, strings in RFC 3339 format are supported (such as \"2020-12-31T23:59:60Z\"). Supported _last_modifier User ID as string Format is like 5758ecdce3e741ad81293a304b6d3388@auth.local. If you need user names, you have to convert with seatable APIs. Supported Supported _mtime Datetime Time strings in RFC 3339 format Constants are expressed in strings in ISO format. e.g. \"2006-1-2\" or \"2006-1-2 15:04:05\". Since 2.8 version, strings in RFC 3339 format are supported (such as \"2020-12-31T23:59:60Z\"). Supported auto number String Supported Supported. url String Supported Supported. email String Supported Supported. duration Float Returned in the unit of seconds Supported Supported."},{"location":"scripts/sql/reference/#list-types","title":"List Types","text":"<p>In SeaTable, two categories of column types are list types:</p> <ul> <li>Built-in list types: including multiple selection, image, collaborator, and link to other records.</li> <li>Return values for the following link formulas: formula columns whose formula is <code>{link.column}</code> or <code>lookup</code>; link formula columns whose formula is <code>lookup</code>, <code>findmin</code> or <code>findmax</code>.</li> </ul> <p>When referring a column with list type in <code>where</code> conditions, the following rules apply, depending on the type for the list elements. (If an operator is not listed below, it's unsupported.)</p> Element Type Operator Rule string IN, extended list operators (e.g. <code>has any of</code>) Follow the rules of the operator. string LIKE, ILIKE If there is only 1 element, use that element; If there are more than 1 elements, only return <code>true</code> for <code>!=</code> operator; If there is no element, use \"\". string IS NULL Return <code>true</code> when the list is empty or no data in the cell. string =, != If there is only 1 element, use that element; otherwise only return <code>true</code> for <code>!=</code> operator. float IN, extended list operators (e.g. <code>has any of</code>) Follow the rules of the operator. float =, !=, \\&lt;, \\&lt;=, &gt;, &gt;=, between If there is only 1 element, use that element; otherwise only return <code>true</code> for <code>!=</code> operator. float IS NULL Return <code>true</code> when the list is empty or no data in the cell. float Arithmetics such as +/-/*// Use the first element for calculation. Datetime IN, extended list operators (e.g. <code>has any of</code>) Follow the rules of the operator. Datetime =, !=, \\&lt;, \\&lt;=, &gt;, &gt;=, between If there is only 1 element, use that element; otherwise only return <code>true</code> for <code>!=</code> operator. Datetime IS NULL Return <code>true</code> when the list is empty or no data in the cell. bool IS TRUE If there is only 1 element, use that element; otherwise return <code>false</code>. linked record Follow the rules for the type of the display column. <p>When a list column is returned in a selected field, only the first 10 elements are returned.</p> <p>When used in <code>group by</code> or <code>order by</code> clauses, the elements for each list will first be sorted in ascending order, then the lists will be sorted by the rules below:</p> <ul> <li>Compare the elements one by one, list with smaller element is sorted before list with larger element.</li> <li>If all elements compared in step 1 are equal, shorter list is sorted before longer list.</li> <li>Otherwise the tow lists are equal.</li> </ul> <p>If a list column is passed as parameter to a formula, and the parameter expects a scalar value, the first element will be used. And if the element is a linked record, the value of its display column will be used.</p> <p>When applying aggregate functions (min, max, sum, avg) to a list column, if there is only 1 element in the list, use that element; otherwise this row will not be aggregated.</p>"},{"location":"scripts/sql/reference/#null-values","title":"NULL Values","text":"<p>NULL value is distinct from 0. It represents a missing value. The following values are treated as NULL:</p> <ul> <li>Empty cells in a table is treated as NULL.</li> <li>Values which cannot be converted to the column type will be treated as NULL.</li> <li>Empty strings (\"\") will be treated as NULL too. This is different from standard SQL.</li> <li>Lists are treated as NULL based on the rules described in the \"List Types\" section.</li> <li>Functions or formula columns that return error will be treated as NULL.</li> </ul> <p>In the <code>Where</code> clause:</p> <ul> <li>Arithmetic operations (+, -, * etc.) on NULL values will return NULL.</li> <li><code>!=</code>, <code>NOT LIKE</code>, <code>NOT IN</code>, <code>NOT BETWEEN</code>, <code>HAS NONE OF</code>, <code>IS NOT TRUE</code>, and <code>IS NULL</code> operations will return true when the value is NULL.</li> <li><code>AND</code>, <code>OR</code>, <code>NOT</code> treat NULL values as false.</li> <li>Aggregate functions (min, max, sum, avg) will ignore NULL values.</li> </ul> <p>In formulas, NULL values will be converted to 0 or an empty strings.</p>"},{"location":"scripts/sql/reference/#extended-syntax","title":"Extended Syntax","text":""},{"location":"scripts/sql/reference/#use-formulas-in-sql-query","title":"Use Formulas in SQL Query","text":"<p>You may use a formula syntax that's almost the same as SeaTable's formulas in SQL queries. There are a few special notes:</p> <ul> <li>Link formulas are not supported. e.g. {link.age} is invalid.</li> <li>Reference to columns should not be enclosed by curly brackets (\"{}\"). Don't write <code>select abs({column}) from talbe;</code>. Wirte <code>select abs(column) from table;</code>. This is consistent with standard SQL syntax.</li> <li>You can use back quote (\"``\") to enclose column references, when column name contains space or \"-\". E.g. select abs(<code>column-a</code>) from table;</li> <li>You may not use column alias in formulas. E.g. <code>select abs(t.column) from table as t;</code> is invalid.</li> <li>formulas can be use in group by and order by clauses.</li> </ul> <p>A few extended formulas are supported:</p> <ul> <li><code>STARTOFWEEK(date, weekStart)</code>: returns the first day of the week where \"date\" is in. \"weekstart\" can be used to choose \"sunday\" or \"monday\" as the first day of a week.</li> <li><code>Quarter(date)</code>: Returns the quater of the date. Return value is 1, 2, 3 or 4.</li> <li><code>ISODate(date)</code>: Returns ISO format string for the date. E.g. \"2020-09-08\".</li> <li><code>ISOMonth(date)</code>: Returns ISO format string for the month where \"date\" is in. E.g. \"07\".</li> </ul> <p>The above formulas can be used for group by week, quater, date and month. E.g. <code>select sum(sale) from SalesRecord group by ISODate(SalesTime);</code> will return the total sales amount for each day.</p> <p>For more details, please refer to [./function.md].</p>"},{"location":"scripts/sql/reference/#extended-list-operators","title":"Extended List Operators","text":"<p>Some column types in SeaTable have list values. The SeaTable UI supports a few special filters for such types. They are <code>HAS ANY OF</code>, <code>HAS ALL OF</code>, <code>HAS NONE OF</code>, <code>IS EXACTLY</code>. You may also use the same syntax to filter such columns with SQL.</p> <p>For example, if column \"city\" is of type multi-select, and we want to find out all rows that contains \"New York\" or \"Paris\" in the \"city\" column, you can query: <code>select * from table where city has any of (\"New York\", \"Paris\");</code>. The list of string constant are enclosed with brackets, just like the syntax for <code>IN</code>.</p>"},{"location":"scripts/sql/reference/#indexes","title":"Indexes","text":"<p>To improve query performance, SeaTable will automatically create indexes for the rows stored in big data storage engine. Currently, text, number, date, single-select, multiple-select, collaborators, creator, create date, modifier, modification date columns are indexed.</p> <p>When you add or delete a column in a table, the index for this column is not added/removed immediately. Indexes creation and deletion are triggered in two cases:</p> <ol> <li>When you archive the table for the next time, indexes are created for new columns and indexes for remvoed columns are removed.</li> <li>Users may manage indexes from \"index management\" UI. You can open it from the \"Big data management\" menu in the base.</li> </ol>"}]}